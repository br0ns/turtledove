
state 0:

	begin : . procList 

	EOF	reduce by rule 3
	IDE	shift 6
	LPAR	shift 5
	NEW	shift 4

	begin	goto 25
	procList	goto 3
	path	goto 2
	proc	goto 1

	.	error


state 1:

	procList : proc . procList 

	EOF	reduce by rule 3
	IDE	shift 6
	LPAR	shift 5
	NEW	shift 4

	procList	goto 7
	path	goto 2
	proc	goto 1

	.	error


state 2:

	proc : path . OUTPUT value 
	proc : path . INPUT abs 

	INPUT	shift 9
	OUTPUT	shift 8


	.	error


state 3:

	begin : procList .  (reduce by rule 0)

	EOF	reduce by rule 0


	.	error


state 4:

	proc : NEW . path proc 

	IDE	shift 6

	path	goto 10

	.	error


state 5:

	proc : LPAR . parallel 

	IDE	shift 6
	LPAR	shift 5
	NEW	shift 4
	RPAR	shift 13

	parallel	goto 12
	path	goto 2
	proc	goto 11

	.	error


state 6:

	path : IDE .  (reduce by rule 8)

	DVBAR	reduce by rule 8
	EOF	reduce by rule 8
	EQUALS	reduce by rule 8
	IDE	reduce by rule 8
	INPUT	reduce by rule 8
	LPAR	reduce by rule 8
	NEW	reduce by rule 8
	OUTPUT	reduce by rule 8
	RPAR	reduce by rule 8


	.	error


state 7:

	procList : proc procList .  (reduce by rule 2)

	EOF	reduce by rule 2


	.	error


state 8:

	proc : path OUTPUT . value 

	IDE	shift 6

	path	goto 15
	value	goto 14

	.	error


state 9:

	proc : path INPUT . abs 

	IDE	shift 6

	abs	goto 18
	pat	goto 17
	path	goto 16

	.	error


state 10:

	proc : NEW path . proc 

	IDE	shift 6
	LPAR	shift 5
	NEW	shift 4

	path	goto 2
	proc	goto 19

	.	error


state 11:

	parallel : proc . DVBAR parallel 
	parallel : proc . RPAR 

	DVBAR	shift 21
	RPAR	shift 20


	.	error


state 12:

	proc : LPAR parallel .  (reduce by rule 12)

	DVBAR	reduce by rule 12
	EOF	reduce by rule 12
	IDE	reduce by rule 12
	LPAR	reduce by rule 12
	NEW	reduce by rule 12
	RPAR	reduce by rule 12


	.	error


state 13:

	parallel : RPAR .  (reduce by rule 6)

	DVBAR	reduce by rule 6
	EOF	reduce by rule 6
	IDE	reduce by rule 6
	LPAR	reduce by rule 6
	NEW	reduce by rule 6
	RPAR	reduce by rule 6


	.	error


state 14:

	proc : path OUTPUT value .  (reduce by rule 10)

	DVBAR	reduce by rule 10
	EOF	reduce by rule 10
	IDE	reduce by rule 10
	LPAR	reduce by rule 10
	NEW	reduce by rule 10
	RPAR	reduce by rule 10


	.	error


state 15:

	value : path .  (reduce by rule 13)

	DVBAR	reduce by rule 13
	EOF	reduce by rule 13
	IDE	reduce by rule 13
	LPAR	reduce by rule 13
	NEW	reduce by rule 13
	RPAR	reduce by rule 13


	.	error


state 16:

	pat : path .  (reduce by rule 7)

	EQUALS	reduce by rule 7


	.	error


state 17:

	abs : pat . EQUALS proc 

	EQUALS	shift 22


	.	error


state 18:

	proc : path INPUT abs .  (reduce by rule 11)

	DVBAR	reduce by rule 11
	EOF	reduce by rule 11
	IDE	reduce by rule 11
	LPAR	reduce by rule 11
	NEW	reduce by rule 11
	RPAR	reduce by rule 11


	.	error


state 19:

	proc : NEW path proc .  (reduce by rule 9)

	DVBAR	reduce by rule 9
	EOF	reduce by rule 9
	IDE	reduce by rule 9
	LPAR	reduce by rule 9
	NEW	reduce by rule 9
	RPAR	reduce by rule 9


	.	error


state 20:

	parallel : proc RPAR .  (reduce by rule 5)

	DVBAR	reduce by rule 5
	EOF	reduce by rule 5
	IDE	reduce by rule 5
	LPAR	reduce by rule 5
	NEW	reduce by rule 5
	RPAR	reduce by rule 5


	.	error


state 21:

	parallel : proc DVBAR . parallel 

	IDE	shift 6
	LPAR	shift 5
	NEW	shift 4
	RPAR	shift 13

	parallel	goto 23
	path	goto 2
	proc	goto 11

	.	error


state 22:

	abs : pat EQUALS . proc 

	IDE	shift 6
	LPAR	shift 5
	NEW	shift 4

	path	goto 2
	proc	goto 24

	.	error


state 23:

	parallel : proc DVBAR parallel .  (reduce by rule 4)

	DVBAR	reduce by rule 4
	EOF	reduce by rule 4
	IDE	reduce by rule 4
	LPAR	reduce by rule 4
	NEW	reduce by rule 4
	RPAR	reduce by rule 4


	.	error


state 24:

	abs : pat EQUALS proc .  (reduce by rule 1)

	DVBAR	reduce by rule 1
	EOF	reduce by rule 1
	IDE	reduce by rule 1
	LPAR	reduce by rule 1
	NEW	reduce by rule 1
	RPAR	reduce by rule 1


	.	error


state 25:


	EOF	accept


	.	error

84 of 123 action table entries left after compaction
23 goto table entries
