%!PS-Adobe-3.1 EPSF-3.0%%Title: BM_NAT_cmyk.eps%%Creator: Adobe Illustrator(R) X%%AI8_CreatorVersion: 10.0%AI9_PrintingDataBegin%%For: IT- afdelingen%%CreationDate: 06/09/05%%BoundingBox: 0 0 159 126%%HiResBoundingBox: 0 0 158.2095 125.8951%%CropBox: 0 0 158.2095 125.8951%%LanguageLevel: 2%%DocumentData: Clean7Bit%ADOBeginClientInjection: DocumentHeader "AI10"%ADOEndClientInjection: DocumentHeader "AI10"%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)%%+ procset Adobe_CoolType_Core (2.12 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%ADOBeginClientInjection: DocumentProlog Start "AI10"%ADOEndClientInjection: DocumentProlog Start "AI10"%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 60 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 		exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def	/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup /Cyan eq{						pop (_Cyan_)					}{						dup /Magenta eq{							pop (_Magenta_)						}{							dup /Yellow eq{								pop (_Yellow_)							}{								dup /Black eq{									pop (_Black_)								}{									dup () cvn eq{										pop (Process)									}if								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def		/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust		AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer		AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse		AGMUTIL_GSTATE_flt setflat	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/rdline{	currentfile AGMUTIL_str256 readline pop} bdf/rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def				AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/AGMUTIL_imagefile nd/AGMUTIL_imbuf nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put	exch	load exec}def/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf		1 1 Height { 			pop			DataSource dup type /filetype eq{				AGMUTIL_imbuf readstring pop			}{				exec			} ifelse			AGMUTIL_imagefile exch writestring		}for		true	}ifelse	end}def/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}def/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{     2{/exec load}repeat     3 1 roll     [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin    currentdict 2 index known{    	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse	    addprocs /TransferFunction xdf 	    currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 205 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_src256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_will_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/stkpath_clp_npth{	strokepath clip newpath} def/stk_n_clp_npth{	gsave stroke grestore clip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont		/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def				clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore			currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto		/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show						0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp exch put				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin		/AGMCORE_will_host_separate xdf	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf		errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if			/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def		AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if		/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 8 def													/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def		/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def		/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def		/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						currentpagedevice/OverrideSeparations known							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				true exch					{					convert_spot_to_process and					}				forall				}{				false exch					{					convert_spot_to_process or					}				forall				}ifelse			}ifelse		}def	}ifelse		AGMCORE_host_sep AGMCORE_will_host_separate not and {		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def		AGMCORE_color_space_onhost_seps	}if	/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/clip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&clip /clip load put			/clip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&clip			}def		}if		/eoclip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put			/eoclip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&eoclip			}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf		/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def		/map_index	{		1 index mul exch getinterval {255 div} forall	}def		level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{					/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop																	[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 exch put					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 exch put						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				AGMCORE_&&&setcolorspace			}def		}if		}{				/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def				/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def				/n_color_components		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop 1			}{				/DeviceCMYK eq{					4				}{					3				}ifelse			}ifelse		} def				/setcolor_devicecolor		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def			/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse		/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/spclp /stkpath_clp_npth ldf	/f /fill ldf	/ef /eofill ldf	/s /stroke ldf	/sclp /stk_n_clp_npth ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf		currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/current_ink{	dup length 0 eq{		pop true	}{		Adobe_AGM_Core/ink_result false put		{			dup /ProcessCyan eq{				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf			}{				dup /ProcessMagenta eq{					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf				}{					dup /ProcessYellow eq{						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf					}{						dup /ProcessBlack eq{							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf						}{							dup /sep_colorspace_dict AGMCORE_gget dup null eq{								pop false ink_result or Adobe_AGM_Core/ink_result xddf							}{								/Name get eq{									1 setsepcolor									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf								}{									false ink_result or Adobe_AGM_Core/ink_result xddf								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse			pop 		} forall		ink_result	}ifelse}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 		/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 		current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf		AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx														AGMCORE_host_sep{								AGMCORE_is_cmyk_sep							}{								Name inRip_spot_has_ink not							}ifelse							{		 						/pop cvx 1							}if							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf												[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		/MappedCSA CSA map_csa def		AGMCORE_host_sep level2 not and{			0 0 0 0 setcmykcolor		}{			[/Indexed MappedCSA 			level2 not has_color not and{				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{					pop [/DeviceGray]				}if				HiVal GrayLookup			}{				HiVal 				currentdict/RangeArray known{					{ 						/indexed_colorspace_dict AGMCORE_gget begin						Lookup exch 						dup HiVal gt{							pop HiVal						}if						NComponents mul NComponents getinterval {} forall						NComponents 1 sub -1 0{							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range							NComponents 1 roll						}for						end					} bind				}{					Lookup				}ifelse			}ifelse			] setcolorspace_opt						set_crd		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep{		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor	}{		setcolor	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave 		dup begin		1 setgray		0 0 ImageMatrix itransform 		Width Height ImageMatrix idtransform rectfill 		end		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/get_csd_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		/AGMCORE_CSD_Name xdf		AGMCORE_CSD_cache		{			dup /Name get AGMCORE_CSD_Name eq			{				exch pop exit			}{				pop			}ifelse			pop		}forall		end	}if}def/cachepattern_level2{	4 dict begin	/comparebuffer exch def	/holdbuffer exch def	/readbuffer 1024 string def	/LZWFilter holdbuffer /LZWEncode filter def	{		currentfile readbuffer readline not			{pop exit}		if		dup LZWFilter exch writestring		LZWFilter (\n) writestring		comparebuffer eq			{exit}		if	}loop	LZWFilter closefile	end}def/cachepattern_level3{	3 dict begin	/comparebuffer exch def	/readbuffer 1024 string def	/DoEOL false def	{ 		DoEOL			{			(\n)			/DoEOL false def			}			{			currentfile readbuffer readline not				{pop ()}				{				dup length 0 eq					{ pop(\n)}					{					dup comparebuffer eq						{pop ()}						{/DoEOL true def}					ifelse					}				ifelse				}			ifelse			}		ifelse	} /ReusableStreamDecode filter	end}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get	}if}def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix	makepattern}def/exec_file	statusdict /currentfilenameextend known{		{			0 () /SubFileDecode filter cvx exec		}	}{				{cvx exec}	}ifelsedef/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			false sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{		currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse		Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/AGMCORE_ctm_stack bdict	/push_ctm {		stack length size le{			stack dup length 2 mul array 			dup /stack exch def			copy pop		}if		stack size 3 -1 roll put		/size size 1 add def	}	/pop_ctm {		/size size 1 sub def		size 0 lt{ 			/size 0 def		}if		stack size get	}	/stack 1 array	/size 0 edict def/save_ctm{	matrix currentmatrix AGMCORE_ctm_stack begin 		push_ctm 	end}def/restore_ctm{	AGMCORE_ctm_stack begin		pop_ctm 	end	setmatrix}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/rdcmntline {	currentfile AGMCORE_str256 readline pop	(%) anchorsearch {pop} if} def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias		/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput		Adobe_AGM_Core begin	/setcustomcolor	{				dup /customcolor_tint exch AGMCORE_gput				current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		fill grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		currentdict /lw_initializepage known not			{			/lw_initializepage /initializepage load def			/initializepage				{				lw_initializepage				/initializepage {} def				}def			}if		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if		Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put}def/driver_check_media_override{	Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne	{		Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix	}if}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.12 0%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.12 0userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dictdef}if currentpacking true setpacking/@_SaveStackLevels{Adobe_CoolType_Databegin @opStackCountByLevel @opStackLevel 2 copy known not{2 copy 3 dict dup/args 7 index 5 add array put put get}{get dup/args get dup length 3 index lt{dup length 5 add array exch 1 index exch 0 exch putinterval 1 index exch/argsexch put}{pop}ifelse}ifelse begin count 2 sub 1 index lt{pop count 1 sub}ifdup/argCount exch def dup 0 gt{exch 1 index 2 add 1 roll args exch 0 exchgetinterval astore pop}{pop}ifelse count 1 sub/restCount exch def end/@opStackLevel @opStackLevel 1 add def countdictstack 1 sub@dictStackCountByLevel exch @dictStackLevel exch put/@dictStackLevel@dictStackLevel 1 add def end}bind def/@_RestoreStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub def@opStackCountByLevel @opStackLevel get begin count restCount sub dup 0 gt{{pop}repeat}{pop}ifelse args 0 argCount getinterval{}forall end/@dictStackLevel@dictStackLevel 1 sub def @dictStackCountByLevel @dictStackLevel get endcountdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def/@_PopStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 subdef/@dictStackLevel @dictStackLevel 1 sub def end}bind def/@Raise{exch cvxexch errordict exch get exec stop}bind def/@ReRaise{cvx $error/errorname geterrordict exch get exec stop}bind def/@Stopped{0 @#Stopped}bind def/@#Stopped{@_SaveStackLevels stopped{@_RestoreStackLevels true}{@_PopStackLevels false}ifelse}bind def/@Arg{Adobe_CoolType_Data begin @opStackCountByLevel@opStackLevel 1 sub get/args get exch get end}bind def/doc_setup{Adobe_CoolType_Core begin/mov/moveto load def/nfnt/newencodedfont load def/mfnt/makefont load def/sfnt/setfont load def/ufnt/undefinefont load def/chp/charpath load def/awsh/awidthshow load def/wsh/widthshow load def/ash/ashowload def/sh/show load def end userdict/Adobe_CoolType_Data 6 dict dup begin/AddWidths? false def/CC 0 def/charcode 2 string def/@opStackCountByLevel 32dict def/@opStackLevel 0 def/@dictStackCountByLevel 32 dict def/@dictStackLevel 0 def end put}bind def/doc_trailer{currentdictAdobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup where pop exch get/globaldictwhere{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{poppop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict endexch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal duplength array copy exch setglobal}bind def/newencodedfont{currentglobal{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory3 index get/FontReferenced known}{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exchdup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if defcurrentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategiesknown{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlengthadd dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init getexec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}binddef/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def end{findfont}@Stopped{dup length dup 21add string dup 4 3 roll 0 exch 128 string cvs putinterval exch 1 index exch(_was-malformed-so-was)putinterval cvn{findfont}@Stopped{pop/Courier findfont}if}if $SubstituteFont begin/$sname null def/$slen 0 def end}bind def/isWidthsOnlyFont{dup/WidthsOnly known{pop pop true}{dup/FDepVector known{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}{dup/FDArray known{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}{pop}ifelse}ifelse}ifelse}bind def/?set{$SubstituteFont begin/$substituteFound false def/$fontname 4index def/$doSmartSub false def end 3 index findfont $SubstituteFont begin$substituteFound{false}{dup/FontName known{dup/FontName get $fontname eq 1index/DistillerFauxFont known not and/currentdistillerparams where{pop false 2index isWidthsOnlyFont not and}if}{false}ifelse}ifelse exch pop/$doSmartSubtrue def end{exch pop exch pop exch 2 dict dup/Found 3 index put exch findfontexch}{exch exec exch findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def/?add{1 index type/integertype eq{exch true 4 2}{false 31}ifelse roll 1 index findfont dup/Widths known{Adobe_CoolType_Data/AddWidths?true put gsave dup 1000 scalefont setfont}if/Downloaded known{exec exch{exch?str2 cvs exch findfont/Downloaded get 1 dict begin/Downloaded 1 index def?str1 cvs length ?str1 1 index 1 add 3 index putinterval exch length 1 add 1index add ?str1 2 index(*)putinterval ?str1 0 2 index getinterval cvn findfont?str1 3 index(+)putinterval 2 dict dup/FontName ?str1 0 6 index getintervalcvn put dup/Downloaded Downloaded put end copyfont dup/FontName get exchdefinefont pop pop pop}{pop}ifelse}{pop exch{findfont dup/Found get dup lengthexch ?str1 cvs pop ?str1 1 index(+)putinterval ?str1 1 index 1 add 4 index?str2 cvs putinterval ?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add addgetinterval cvn 1 dict exch 1 index exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}ifelse}ifelse Adobe_CoolType_Data/AddWidths? get{grestore Adobe_CoolType_Data/AddWidths? false put}if}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{currentfont/Downloadedknown{moveto pop pop}{pop pop moveto}ifelse}bind def setpacking userdict/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont dup $error exch 2copy known{get}{pop pop{pop/Courier}bind}ifelse def/currentdistillerparamswhere dup{pop pop currentdistillerparams/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{countdictstack array dictstack 0 getbegin userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128string def/$slen 0 def/$sname null def/$match false def/$fontname null def/$substituteFound false def/$doSmartSub true def/$depth 0 def/$fontname nulldef/$italicangle 26.5 def/$dstack null def/$Strategies 10 dict dup begin/$Type3Underprint{currentglobal exch false setglobal 11 dict begin/UseFontexch $WMode 0 ne{dup length dict copy dup/WMode $WMode put/UseFont exchdefinefont}if def/FontName $fontname dup type/stringtype eq{cvn}if def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/Encoding 256 array dup 0 1255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]def/CCInfo 7 dict dup begin/cc null def/x 0 def/y 0 def end def/BuildChar{exch begin CCInfo begin 1string dup 0 3 index put exch pop/cc exch def UseFont 1000 scalefont setfontcc stringwidth/y exch def/x exch def x y setcharwidth $SubstituteFont/$Strategy get/$Underprint get exec 0 0 moveto cc show x y moveto end end}binddef currentdict end exch setglobal}bind def/$GetaTint 2 dict dup begin/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch def $fontnameexch dup/FontName known{dup/FontName get dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn exch putdup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}bind def/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120 translate}ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]setcolorspace}{0setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120 sub x 10 div exchmoveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto closepath gsaveLevel2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}forall popgrestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{currentglobalexch dup gcheck setglobal null copyfont begin/FontBasedOn currentdict/FontNameknown{FontName dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse def/FontName$fontname dup type/stringtype eq{cvn}if def/currentdistillerparams where{pop}{/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dupbegin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dupsin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}ifelse FontName currentdict end definefont exch setglobal}bind def end def/$None 1 dict dup begin/$BuildFont{}bind def end def end def/$ObliqueSetSubstituteStrategy/$findfontByEnum{dup type/stringtype eq{cvn}if dup/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slengetinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exchputinterval/$match false def $SubstituteFont/$dstack countdictstack arraydictstack put mark{$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}stopped{cleardictstack currentdict true $SubstituteFont/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin false}ifelse}forallpop}if cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch poppop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]defend def end def/$cmapname null def/$deepcopyfont{dup/FontType get 0 eq{1 dictdup/FontName/copied put copyfont begin/FDepVector FDepVector copyarray 0 1 2index length 1 sub{2 copy get $deepcopyfont dup/FontName/copied put/copiedexch definefont 3 copy put pop pop}for def currentdict end}{$Strategies/$Type3Underprint get exec}ifelse}bind def/$buildfontname{length $str 1 index(-)putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapnamelength add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontnameexch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo getdup/Registry get Registry eq exch/Ordering get Ordering eq and and{exchrestore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end endcurrentdict/$error known currentdict/languagelevel known and dup{pop $error/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin/$substituteFound true def dup length $slen gt $sname null ne or $slen 0 gtand{$sname null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMapfindresource/CIDSystemInfo get{def}forall $findfontByROS}{128 string cvs dup(-)search{3 1 roll search{3 1 roll pop{dup cvi}stopped{pop pop pop pop pop$findfontByEnum}{4 2 roll pop pop exch length exch 2 index length 2 index subexch 1 sub -1 0{$str cvs dup length 4 index 0 4 index 4 3 roll add getintervalexch 1 index exch 3 index exch putinterval dup/CMap resourcestatus{pop pop 4 1roll pop pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo get{def}forall $findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{pop}{pop pop $findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse}{pop pop $findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0def end}}{{$SubstituteFont begin/$substituteFound true def dup length $slen gt$sname null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelseend}}ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfontload put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontNameknown{dup/FontName get dup 3 index ne}{/noname true}ifelse dup{/$origfontnamefound 2 index def/$origfontname 4 index def/$substituteFoundtrue def}if exch pop{$slen 0 gt $sname null ne 3 index length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end definefont dup/FontName known{dup/FontName get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print( substitution revised, using )print dup/FontName known{dup/FontName get}{(unspecified font)}ifelse $str cvs print(.)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end endAdobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategyknown{$Strategy/$BuildFont get exec}if}if end}bind put}if end end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.%%Version: 1.13 0systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelseexch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exchdef/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun knownnot ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont knowndef/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevelknown{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFontfindresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exchlength sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFontfindresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vmexch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vmsetglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcodeexch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod putstringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 31 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvmsetglobal}if end}def/:{string currentfile exch readstring pop}executeonly defend ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.0010 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx excherrordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get(Error: )print dup(                    )cvs print errordict exch get exec stop}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dupstring/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 indexadd 2 index length le{2 index getinterval dst_string dst_index 2 indexputinterval length dst_index add/dst_index exch def exit}{1 index length 1index sub dup 4 1 roll getinterval dst_string dst_index 2 index putintervalpop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}looppop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomarkcurrentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresourcebegin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecodefilter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal/Generic/Category findresource dup length dict copy dup/InstanceType/dicttypeput/CIDFont exch/Category defineresource pop setglobal}ifelsect_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMapdefineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2copy known{get dup dup maxlength exch length eq{dup length 10 add dict copyct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copyknown{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelseload exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZEle{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec popdup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop popfalse exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArrayget 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop poppop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 01 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSETcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exchcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 rollGlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontNamecurrentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartDatact_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSetct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInitct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSetdefineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSetdefineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index beginCIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCodeexch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 rolltrue charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidthmoveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aloadpop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dupmaxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdictend/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring putrootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfontct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidthsetlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDictct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dupct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Privateget mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse getexec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get beginct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encodingct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load defct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string defcurrentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dupnot{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WModeexch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrixmatrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}ifdef/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if arraydef BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProcknown{CIDFont/CDevProc get/CDevProc exch def}if currentdict endBaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVectorexch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 muldef FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefontsetfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths getbegin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astoredef}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop popexch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMapct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}binddef currentdict readonly pop end end%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 65 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if /AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/idximg /indexed_imageormask ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				AGMIMG_&image			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint{		0 get		dup /DeviceGray eq{			pop AGMCORE_black_plate not		}{			/DeviceCMYK eq{				AGMCORE_is_cmyk_sep not			}if		}ifelse	}{		false	}ifelse}def/imageormask{	begin		SkipImageProc not{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq{					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					image				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					AGMCORE_host_sep{						currentgray 1 ne{							currentdict imageormask_sys						}{  	 						currentoverprint not{  			 					1 AGMCORE_&setgray  	 							knockout_image_samples  			 					currentdict imageormask_sys  			 				}{  			 					currentdict ignoreimagedata  			 				}ifelse				 		}ifelse					}{						imagemask					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								MultipleDataSources{									4 {pop} repeat									/DataSource [										DataSource 0 get /exec cvx										DataSource 1 get /exec cvx										DataSource 2 get /exec cvx										DataSource 3 get /exec cvx										/AGMCORE_get_ink_data cvx									] cvx def								}{									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def								}ifelse									/Decode [ Decode 0 get Decode 1 get ] def								/MultipleDataSources false def								/NComponents 1 def								/Operator /image def								AGMCORE_is_cmyk_sep{									currentoverprint InksUsed current_ink not and{										currentdict consumeimagedata									}{										invert_image_samples						 				1 AGMCORE_&setgray										currentdict imageormask_sys									}ifelse								}{										currentdict ignoreimagedata								}ifelse							}{																	MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								image							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentoverprint InksUsed current_ink not and{								}{									currentcolorspace overprint_plate not{										knockout_unitsq									}if								}ifelse							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc not{		save mark 			AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentoverprint InksUsed current_ink not and{						}{							currentdict/ImageMatrix get concat							knockout_unitsq						}ifelse					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{							currentdict consumeimagedata  							currentoverprint not Name (All) eq or{								gsave 								knockout_unitsq								grestore		 					}if 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}if	end	end}def/imageormask_l2_overprint{		currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 									currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace								AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 								mark exch						dup	dup dup														AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse								AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse						imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark 	 		currentdict 		AGMCORE_host_sep{ 						Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{					knockout_unitsq				}if			}{	 			AGMCORE_is_cmyk_sep{					Operator /imagemask eq{						imageormask_sys					}{						level2{							indexed_image_lev2_sep						}{							indexed_image_lev1_sep						}ifelse					}ifelse				}{					currentoverprint not{						knockout_image_samples		 				imageormask_sys		 			}{		 				currentdict consumeimagedata		 			}ifelse				}ifelse			}ifelse 		}{			level2{				imageormask			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin				currentcolorspace 		dup 1 /DeviceGray put		dup 3 [			currentcolorspace 3 get 			{				exch 4 mul 4 getinterval {} forall				AGMCORE_get_ink_data 255 div 1 exch sub			} /exec cvx		] cvx put		setcolorspace				currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			AGMIMG_&image		}ifelse				end end}def/OPIimage{	dup type /dicttype ne{		10 dict begin			/DataSource xdf			/ImageMatrix xdf			/BitsPerComponent xdf			/Height xdf			/Width xdf			/ImageType 1 def			/Decode [0 1 def]			currentdict		end	}if	dup begin		/NComponents 1 cdndf		/MultipleDataSources false cdndf		/SkipImageProc {false} cdndf		/HostSepColorImage false cdndf		/Decode [				0 				currentcolorspace 0 get /Indexed eq{					2 BitsPerComponent exp 1 sub				}{					1				}ifelse		] cdndf		/Operator /image cdndf	end	/sep_colorspace_dict AGMCORE_gget null eq{		imageormask	}{		gsave		dup begin invert_image_samples end		sep_imageormask		grestore	}ifelse}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/InksUsed [] def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse										Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 											AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 												currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{										MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop								Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 									{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{								MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResource%ADOBeginClientInjection: DocumentProlog End "AI10"%ADOEndClientInjection: DocumentProlog End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetup%ADOBeginClientInjection: DocumentSetup Start "AI10"%ADOEndClientInjection: DocumentSetup Start "AI10"Adobe_AGM_Utils begin2 2010 true Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get exec%ADOBeginClientInjection: DocumentSetup End "AI10"%ADOEndClientInjection: DocumentSetup End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: BM_NAT_cmyk.eps 1%%EndPageComments%%BeginPageSetup%ADOBeginClientInjection: PageSetup Start "AI10"%ADOEndClientInjection: PageSetup Start "AI10"Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%ADOBeginClientInjection: PageSetup End "AI10"%ADOEndClientInjection: PageSetup End "AI10"%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -125.896 translate[1 0 0 1 0 0 ]  concatmark/0 [/DeviceGray] add_csa/CSA /0 /1 [/DeviceCMYK] add_csa/CSA /1 /2 [/DeviceRGB] add_csa/CSA /2 cleartomark800 path_rez% page clipgsavenewpathgsave % PSGState0 0 mo0 125.896 li158.21 125.896 li158.21 0 liclp[1 0 0 1 0 0 ] concat%ADOBeginClientInjection: BeginPageContent "AI10"%ADOEndClientInjection: BeginPageContent "AI10"23.2032 34.107 mo23.2032 52.896 38.4957 68.1822 57.2925 68.1822 cv76.0718 68.1822 91.3492 52.896 91.3492 34.107 cv91.3492 15.3003 76.0718 0 57.2925 0 cv38.4957 0 23.2032 15.3003 23.2032 34.107 cvfalse sop0 0 0 0 cmykf0 82.9864 mo0 92.0762 7.396 99.4717 16.4869 99.4717 cv25.5733 99.4717 32.9659 92.0762 32.9659 82.9864 cv32.9659 73.898 25.5733 66.5035 16.4869 66.5035 cv7.396 66.5035 0 73.898 0 82.9864 cv0 0 0 0 cmykf158.21 116.7 mo66.1695 116.7 li66.0074 111.936 62.0943 108.108 57.2945 108.108 cv52.4918 108.108 48.5752 111.936 48.4131 116.7 cv0.600098 116.7 li0.600098 117.3 li48.4126 117.3 li48.5699 122.065 52.4883 125.896 57.2945 125.896 cv62.0972 125.896 66.0123 122.065 66.1705 117.3 cv158.21 117.3 li158.21 116.7 li0 0 0 0 cmykf90.7496 34.1065 mo90.7496 52.5899 75.7593 67.5821 57.2925 67.5821 cv38.7876 67.5821 23.8033 52.5899 23.8033 34.1065 cv23.8033 15.6172 38.7876 0.59961 57.2925 0.59961 cv75.7593 0.59961 90.7496 15.6172 90.7496 34.1065 cv0.6 0 0.6 0.5 cmykf32.3658 82.9864 mo32.3658 91.7598 25.2544 98.8702 16.4869 98.8702 cv7.71338 98.8702 0.600098 91.7598 0.600098 82.9864 cv0.600098 74.2149 7.71338 67.1036 16.4869 67.1036 cv25.2544 67.1036 32.3658 74.2149 32.3658 82.9864 cv0.6 0 0.6 0.5 cmykf65.5855 117.004 mo65.5855 121.582 61.8707 125.295 57.2945 125.295 cv52.7144 125.295 48.9976 121.582 48.9976 117.004 cv48.9976 112.424 52.7144 108.708 57.2945 108.708 cv61.8707 108.708 65.5855 112.424 65.5855 117.004 cv0.6 0 0.6 0.5 cmykf71.8189 49.8379 mo71.8834 49.8545 71.9742 49.9551 71.9839 50.0127 cv71.9507 50.0469 71.9146 50.086 71.8873 50.1172 cv71.7388 50.3086 71.7232 50.3731 72.0455 50.7334 cv72.2554 50.9717 72.6314 51.3985 72.7837 51.5704 cv72.9439 51.7442 73.108 51.9834 73.3453 51.8086 cv73.3882 51.7774 73.4117 51.754 73.4458 51.7256 cv73.5171 51.7237 73.6138 51.834 73.608 51.8916 cv73.2388 52.2276 72.8453 52.5626 72.5601 52.794 cv72.4927 52.795 72.4019 52.6778 72.4117 52.6114 cv72.4546 52.5704 72.482 52.545 72.5005 52.5284 cv72.6978 52.3194 72.5601 52.1319 72.3716 51.9112 cv72.105 51.5958 71.8013 51.2374 71.6509 51.0577 cv71.3941 50.751 71.2994 50.6846 71.0874 50.8018 cv71.0513 50.8252 71.0162 50.8516 70.9624 50.8897 cv70.9078 50.8819 70.813 50.7696 70.8169 50.7002 cv71.2242 50.377 71.5396 50.0948 71.8189 49.8379 cv0 0 0 0 cmykf59.6294 55.3467 mo59.6705 55.3975 59.6871 55.5303 59.6597 55.5821 cv59.6099 55.5909 59.5572 55.6006 59.5191 55.6124 cv59.2867 55.6768 59.2388 55.7208 59.2818 56.2042 cv59.3101 56.5147 59.3599 57.084 59.3834 57.3135 cv59.4068 57.5469 59.399 57.8399 59.6958 57.837 cv59.7486 57.837 59.7808 57.8311 59.8267 57.8311 cv59.8824 57.8731 59.897 58.0157 59.8589 58.0616 cv59.3599 58.1143 58.8462 58.1514 58.482 58.1661 cv58.4234 58.128 58.4205 57.9815 58.4683 57.9336 cv58.525 57.9249 58.563 57.921 58.5894 57.917 cv58.8726 57.8663 58.8707 57.6329 58.8502 57.3438 cv58.8228 56.9346 58.7886 56.4629 58.774 56.2295 cv58.7466 55.8311 58.7115 55.7188 58.4683 55.6934 cv58.4263 55.6895 58.3824 55.6895 58.3189 55.6895 cv58.2779 55.6504 58.2671 55.503 58.3111 55.4463 cv58.8296 55.4258 59.2525 55.3897 59.6294 55.3467 cv0 0 0 0 cmykf38.6773 44.5762 mo38.646 44.6368 38.5298 44.7051 38.4712 44.7012 cv38.4449 44.6563 38.4146 44.6133 38.3892 44.584 cv38.2369 44.3975 38.1783 44.3653 37.7515 44.5987 cv37.4761 44.7491 36.9742 45.0225 36.773 45.1348 cv36.5679 45.25 36.2974 45.3565 36.4175 45.628 cv36.4371 45.6758 36.4546 45.7032 36.4722 45.7442 cv36.4585 45.8126 36.3316 45.8829 36.2759 45.8653 cv36.0318 45.4307 35.7916 44.9727 35.6314 44.6446 cv35.6451 44.5762 35.7789 44.5137 35.8414 44.5391 cv35.8716 44.5899 35.8892 44.6202 35.9039 44.6426 cv36.063 44.8838 36.2759 44.7911 36.5328 44.6563 cv36.899 44.4659 37.3189 44.251 37.5259 44.1456 cv37.8824 43.96 37.9693 43.8829 37.899 43.6495 cv37.8873 43.6094 37.8677 43.5694 37.8423 43.5108 cv37.8619 43.4581 37.9927 43.3887 38.0591 43.4092 cv38.2847 43.877 38.4878 44.2481 38.6773 44.5762 cv0 0 0 0 cmykf36.1304 30.9288 mo36.0699 30.9542 35.9361 30.9376 35.8931 30.8975 cv35.897 30.8516 35.9009 30.796 35.9009 30.7549 cv35.8951 30.5157 35.8658 30.4542 35.3882 30.377 cv35.0767 30.3272 34.5142 30.2325 34.2867 30.2002 cv34.0533 30.1622 33.7759 30.0821 33.7017 30.3711 cv33.689 30.42 33.6851 30.4532 33.6744 30.4981 cv33.6207 30.542 33.4791 30.5206 33.4439 30.4717 cv33.5191 29.9766 33.6109 29.4688 33.6861 29.1104 cv33.7378 29.0655 33.8824 29.0987 33.9156 29.1573 cv33.9087 29.2149 33.9039 29.252 33.9009 29.2774 cv33.8794 29.5645 34.105 29.6211 34.3892 29.6758 cv34.7955 29.75 35.2584 29.836 35.4878 29.8809 cv35.8824 29.9551 35.9976 29.9473 36.0855 29.7178 cv36.1011 29.6788 36.1119 29.6348 36.1265 29.5743 cv36.1734 29.545 36.3189 29.5723 36.3619 29.627 cv36.2515 30.1329 36.1822 30.5538 36.1304 30.9288 cv0 0 0 0 cmykf78.772 34 mo78.8257 33.9629 78.9624 33.962 79.0113 33.9942 cv79.0132 34.043 79.0171 34.0967 79.025 34.1348 cv79.064 34.376 79.1011 34.4288 79.5884 34.4346 cv79.9019 34.4385 80.4722 34.4483 80.7017 34.4493 cv80.9371 34.4512 81.2271 34.4913 81.2564 34.1954 cv81.2593 34.1426 81.2593 34.1084 81.2632 34.0665 cv81.3111 34.0147 81.4546 34.0147 81.4937 34.0567 cv81.4918 34.5577 81.4781 35.0762 81.4556 35.4376 cv81.4117 35.4903 81.2632 35.4776 81.2222 35.4258 cv81.2183 35.3672 81.2203 35.3311 81.2164 35.3057 cv81.1978 35.0176 80.9673 34.9942 80.6763 34.9854 cv80.2642 34.9698 79.7935 34.9512 79.5611 34.9415 cv79.1578 34.9278 79.0455 34.9512 78.9927 35.1895 cv78.983 35.2305 78.9791 35.2754 78.9752 35.337 cv78.9302 35.376 78.7837 35.3692 78.7339 35.3213 cv78.7652 34.8038 78.7759 34.376 78.772 34 cv0 0 0 0 cmykf74.1353 47.5254 mo74.4214 47.6524 74.5953 47.7911 74.732 47.9034 cv74.7281 47.9698 74.6597 48.0811 74.5796 48.1231 cv74.3365 48.0166 73.9839 47.793 73.6304 48.2032 cv73.4019 48.4649 73.4527 48.6905 73.5865 48.834 cv73.7779 49.044 74.0328 48.9922 74.4341 48.8057 cv75.0113 48.5401 75.2535 48.5655 75.4683 48.6944 cv75.7457 48.8526 76.1607 49.3458 75.5503 50.0147 cv75.2574 50.337 75.0582 50.4678 74.9468 50.5518 cv74.8716 50.5274 74.5337 50.2911 74.4166 50.1778 cv74.4107 50.0889 74.4585 50.0186 74.5582 49.9844 cv74.6128 50.0088 74.9556 50.2686 75.3033 49.9122 cv75.6216 49.5928 75.4458 49.3292 75.3287 49.2374 cv75.1548 49.1006 74.9576 49.1768 74.5562 49.3516 cv74.1871 49.5127 73.773 49.71 73.3707 49.3565 cv73.0103 49.0401 73.023 48.4874 73.4117 48.0518 cv73.8013 47.6163 74.1353 47.5254 74.1353 47.5254 cv0 0 0 0 cmykf56.7349 55.5743 mo56.815 55.8799 56.813 56.0997 56.8072 56.2774 cv56.7515 56.3165 56.6226 56.3301 56.5416 56.2911 cv56.4752 56.0372 56.4341 55.6211 55.8921 55.5928 cv55.5464 55.5762 55.4009 55.7549 55.3687 55.9502 cv55.3228 56.2276 55.5201 56.3946 55.9126 56.5977 cv56.4761 56.8897 56.606 57.0977 56.6402 57.3438 cv56.6851 57.6592 56.5533 58.2911 55.649 58.2237 cv55.2173 58.1924 54.9908 58.1143 54.8541 58.0801 cv54.8267 58.0069 54.8062 57.5909 54.8208 57.4327 cv54.8882 57.3721 54.9722 57.3663 55.063 57.4219 cv55.0757 57.4805 55.0845 57.9112 55.5777 57.9659 cv56.0259 58.0176 56.1236 57.7198 56.1236 57.5684 cv56.1265 57.3497 55.9468 57.2413 55.5601 57.0332 cv55.2056 56.8409 54.7935 56.6358 54.8248 56.0997 cv54.8531 55.6211 55.2945 55.2911 55.8765 55.3292 cv56.4576 55.3692 56.7349 55.5743 56.7349 55.5743 cv0 0 0 0 cmykf35.814 34.1915 mo35.5132 34.2813 35.2906 34.2881 35.1148 34.2881 cv35.0738 34.2315 35.0542 34.1045 35.0923 34.0235 cv35.3433 33.9483 35.7574 33.8926 35.7662 33.3506 cv35.774 33.004 35.5875 32.8653 35.3941 32.8379 cv35.1119 32.8008 34.9527 33.004 34.7632 33.4034 cv34.4927 33.9766 34.2886 34.1133 34.0416 34.1553 cv33.7271 34.212 33.0923 34.1006 33.1304 33.1954 cv33.15 32.7598 33.2193 32.5303 33.2486 32.3956 cv33.3208 32.3653 33.7339 32.3292 33.8951 32.3399 cv33.9576 32.4063 33.9644 32.4903 33.9117 32.5821 cv33.8531 32.5987 33.4234 32.6192 33.3843 33.1133 cv33.3482 33.5665 33.65 33.6524 33.8003 33.6475 cv34.021 33.6416 34.1226 33.4571 34.3189 33.0665 cv34.4976 32.7032 34.688 32.2862 35.2251 32.3018 cv35.7037 32.3126 36.0503 32.7442 36.0318 33.3282 cv36.0103 33.9083 35.814 34.1915 35.814 34.1915 cv0 0 0 0 cmykf36.65 28.0489 mo36.3365 28.0567 36.1207 28.0049 35.9507 27.9571 cv35.9253 27.8956 35.94 27.7666 35.9976 27.6973 cv36.2623 27.6885 36.6753 27.7461 36.8257 27.2256 cv36.9214 26.8926 36.7789 26.709 36.5992 26.6338 cv36.3384 26.5245 36.1304 26.6788 35.8433 27.0137 cv35.4322 27.4961 35.1988 27.5733 34.9498 27.5499 cv34.6334 27.5225 34.0484 27.25 34.3218 26.3858 cv34.4527 25.9727 34.5787 25.7696 34.6451 25.6456 cv34.7222 25.6348 35.1294 25.709 35.2818 25.7608 cv35.3267 25.8389 35.3111 25.9239 35.2349 25.9981 cv35.1763 25.9981 34.7544 25.9063 34.5865 26.3721 cv34.4341 26.7989 34.7027 26.9629 34.8492 26.9981 cv35.064 27.0518 35.2105 26.8995 35.5015 26.5713 cv35.7681 26.2696 36.0611 25.9161 36.5757 26.0684 cv37.0357 26.2071 37.2564 26.7149 37.0875 27.2686 cv36.9156 27.8282 36.65 28.0489 36.65 28.0489 cv0 0 0 0 cmykf78.1226 27.087 mo78.8423 26.5284 78.9068 26.4346 79.481 26 cv79.6871 25.8438 79.773 25.7813 79.8658 25.9727 cv79.8912 26.0225 79.9048 26.0547 79.9146 26.0782 cv79.9898 26.1084 80.108 26.0577 80.1265 25.9961 cv79.9771 25.585 79.8384 25.2081 79.6568 24.7774 cv79.5718 24.7344 79.4566 24.8028 79.4449 24.8614 cv79.4566 24.9014 79.4752 24.9444 79.4859 25.0059 cv79.5298 25.2227 79.4752 25.3047 79.2242 25.5137 cv79.0796 25.6348 77.5113 26.9024 77.4732 26.9336 cv77.439 26.9649 77.4507 27.0098 77.4664 27.0293 cv77.483 27.0518 77.6529 27.2686 77.7359 27.3653 cv78.438 27.3877 79.4859 27.4795 79.9019 27.5147 cv80.316 27.5489 80.397 27.625 80.4332 27.7403 cv80.4507 27.7979 80.4605 27.8389 80.4703 27.8799 cv80.5386 27.918 80.6695 27.8956 80.688 27.8292 cv80.6158 27.5245 80.4839 27.0782 80.3902 26.7901 cv80.3238 26.7442 80.1949 26.7823 80.1705 26.8448 cv80.1832 26.8848 80.1929 26.9249 80.1988 26.959 cv80.2232 27.1055 80.2212 27.1973 79.8794 27.1876 cv79.3423 27.1719 78.6773 27.125 78.1226 27.087 cv0 0 0 0 cmykf78.858 38.1788 mo79.7613 38.042 79.8599 37.9913 80.5748 37.8926 cv80.8306 37.8584 80.9351 37.8467 80.9273 38.0596 cv80.9234 38.1143 80.9185 38.1485 80.9136 38.1768 cv80.9654 38.2364 81.0923 38.251 81.1373 38.2071 cv81.2085 37.7754 81.273 37.379 81.3257 36.9141 cv81.273 36.835 81.1353 36.8379 81.0992 36.8819 cv81.0923 36.9239 81.0835 36.9717 81.0669 37.0284 cv80.9996 37.2393 80.9097 37.2862 80.5894 37.3458 cv80.4068 37.379 78.4136 37.7159 78.3668 37.7256 cv78.3189 37.7344 78.3111 37.7803 78.313 37.8067 cv78.3169 37.8292 78.3599 38.1045 78.3853 38.2295 cv78.9869 38.5948 79.8531 39.1866 80.1968 39.4219 cv80.5435 39.6524 80.5796 39.7627 80.5523 39.877 cv80.5386 39.9366 80.5279 39.9756 80.5152 40.0206 cv80.5572 40.085 80.6832 40.128 80.73 40.0801 cv80.816 39.7657 80.9214 39.3233 80.9791 39.0274 cv80.9449 38.9542 80.816 38.9258 80.7623 38.9688 cv80.7525 39.0069 80.7408 39.0489 80.73 39.0831 cv80.6812 39.2217 80.6334 39.3028 80.3404 39.125 cv79.8794 38.8477 79.3218 38.4786 78.858 38.1788 cv0 0 0 0 cmykf78.0523 45.9668 mo77.5865 45.7032 76.7955 45.2471 76.606 45.1348 cv76.2505 44.9278 76.1441 44.9141 75.9869 45.0987 cv75.9605 45.1319 75.9351 45.167 75.9029 45.2081 cv75.8472 45.2198 75.7281 45.1573 75.7056 45.0928 cv75.9263 44.7247 76.1607 44.3106 76.3326 43.9795 cv76.399 43.9708 76.5142 44.0293 76.5396 44.0801 cv76.521 44.1241 76.5015 44.1641 76.4937 44.1915 cv76.4136 44.4112 76.4576 44.4844 76.8599 44.7032 cv77.1294 44.8477 77.6675 45.1475 77.8472 45.2461 cv78.2466 45.461 78.2789 45.5499 78.4576 45.2715 cv78.483 45.2276 78.4947 45.21 78.521 45.1739 cv78.5835 45.1456 78.7134 45.2266 78.7291 45.2784 cv78.3531 45.959 78.1373 46.3379 78.0718 46.4463 cv78.0103 46.5528 77.9312 46.6954 77.8609 46.7901 cv77.6617 47.0645 77.2857 47.3897 76.773 47.0547 cv76.4244 46.8243 76.4136 46.4981 76.4898 46.1846 cv76.2066 46.2071 75.8882 46.2491 75.564 46.3096 cv75.2584 46.3653 75.1832 46.3995 75.0474 46.5499 cv75.0318 46.5645 74.9996 46.6006 74.9634 46.6514 cv74.8931 46.6387 74.7945 46.5733 74.773 46.5098 cv74.8101 46.4581 75.0279 46.1465 75.2105 45.8692 cv75.4117 45.8399 76.564 45.6944 76.7935 45.6563 cv76.8619 45.7754 li76.7896 45.9092 76.7212 46.1045 76.8091 46.2754 cv76.898 46.4424 76.9966 46.4981 77.0826 46.5528 cv77.1705 46.6036 77.3374 46.6661 77.4898 46.627 cv77.6441 46.5928 77.7701 46.4532 77.8326 46.3633 cv77.9078 46.2559 77.9839 46.1124 78.0523 45.9668 cv0 0 0 0 cmykf66.0367 53.6319 mo65.9878 53.7247 66.0748 53.8233 66.1128 53.8409 cv66.1509 53.8301 66.1451 53.8301 66.2095 53.8135 cv66.4087 53.7549 66.4332 53.8301 66.438 54.1231 cv66.4429 54.294 66.4468 54.3487 66.4468 54.4131 cv66.316 54.4649 65.6382 54.7461 65.5191 54.7969 cv65.4517 54.7237 65.4537 54.7217 65.3121 54.5674 cv65.1783 54.419 65.0591 54.2979 65.2613 54.2032 cv65.3121 54.1788 65.3218 54.1749 65.3492 54.1651 cv65.3834 54.0918 65.3238 53.9756 65.2652 53.9551 cv65.0962 54.0225 64.688 54.1827 64.1636 54.3575 cv64.1177 54.4405 64.1861 54.5547 64.2271 54.5831 cv64.2964 54.5674 64.316 54.5586 64.3716 54.544 cv64.5894 54.4834 64.8082 54.75 64.896 54.8448 cv65.025 54.9815 66.4019 56.4874 66.4351 56.5235 cv66.4683 56.5577 66.4849 56.5469 66.5025 56.5313 cv66.521 56.5147 66.7261 56.3243 66.772 56.2706 cv66.7681 56.1231 66.7535 54.5049 66.7466 54.0801 cv66.7398 53.6348 66.813 53.5733 66.9126 53.4893 cv66.9615 53.4522 67.0064 53.4327 67.024 53.42 cv67.0474 53.3477 66.982 53.2256 66.9126 53.2178 cv66.6089 53.3731 66.1451 53.586 66.0367 53.6319 cvcp66.481 55.8516 mo65.6763 54.9737 li66.4527 54.6514 li66.481 55.8516 li0 0 0 0 cmykf70.7671 53.1807 mo70.8013 53.2588 70.8355 53.3672 70.8277 53.4874 cv70.8238 53.5938 70.7916 53.7432 70.5767 53.8985 cv70.524 53.9366 70.4097 54.0059 70.272 54.0938 cv70.272 54.0938 69.563 52.9883 69.4 52.7276 cv69.1529 52.3428 69.146 52.2608 69.3199 52.1045 cv69.3414 52.085 69.3755 52.0577 69.4146 52.0303 cv69.4146 51.9717 69.3384 51.8653 69.2759 51.8399 cv68.9517 52.0557 68.5435 52.3213 68.1773 52.5342 cv68.1626 52.5997 68.232 52.7237 68.2847 52.7403 cv68.3326 52.7178 68.3765 52.6963 68.4166 52.6807 cv68.6421 52.5948 68.7232 52.6739 68.939 53.0147 cv69.0582 53.2022 69.0542 53.1924 69.7925 54.3965 cv69.6187 54.501 69.4468 54.6045 69.3677 54.6436 cv69.149 54.7579 68.9898 54.6211 68.939 54.5792 cv68.8863 54.5332 68.8355 54.4756 68.7867 54.4082 cv68.7027 54.3985 68.5943 54.4883 68.5865 54.542 cv68.646 54.6358 68.941 55.0713 69.0093 55.1944 cv69.9175 54.6768 70.4566 54.3477 71.2564 53.7852 cv71.2437 53.7403 71.021 53.1573 71.0005 53.0938 cv70.9166 53.0626 70.8033 53.1202 70.7671 53.1807 cv0 0 0 0 cmykf63.8042 56.5137 mo63.8091 56.5977 63.8091 56.711 63.7632 56.8213 cv63.7222 56.92 63.6431 57.0508 63.3902 57.128 cv63.3296 57.1465 63.1968 57.1768 63.0386 57.211 cv63.0386 57.211 62.73 55.9346 62.6597 55.6377 cv62.5562 55.1905 62.5708 55.1143 62.7886 55.0254 cv62.816 55.0157 62.856 55.002 62.9039 54.9864 cv62.9224 54.9297 62.8843 54.8038 62.8355 54.7579 cv62.4644 54.8584 61.9752 54.9717 61.5699 55.0528 cv61.5337 55.1143 61.5601 55.25 61.6041 55.2852 cv61.6578 55.2794 61.7066 55.2725 61.7466 55.2706 cv61.9908 55.2608 62.0396 55.3653 62.1304 55.7549 cv62.1822 55.9747 62.1822 55.9639 62.4869 57.3399 cv62.2876 57.3838 62.0904 57.4239 62.0035 57.4385 cv61.7593 57.4747 61.6548 57.2891 61.6207 57.2315 cv61.5865 57.1768 61.5562 57.1045 61.5337 57.0245 cv61.4576 56.9883 61.3238 57.0362 61.2994 57.084 cv61.3257 57.1944 61.4595 57.7032 61.4859 57.8399 cv62.5123 57.6465 63.1314 57.5118 64.0708 57.2432 cv64.0738 57.1973 64.0533 56.5733 64.0533 56.503 cv63.9849 56.4512 63.8599 56.4649 63.8042 56.5137 cv0 0 0 0 cmykf78.2896 29.4805 mo78.3277 29.3985 78.4361 29.3741 78.5084 29.4219 cv78.5142 29.4493 78.5328 29.5225 78.5445 29.5586 cv78.6031 29.7481 78.7457 29.792 79.1558 29.7149 cv79.5269 29.6446 79.9673 29.5645 80.2671 29.5088 cv80.565 29.4522 80.7925 29.4366 80.7662 29.1768 cv80.7623 29.1338 80.7554 29.0987 80.7447 29.042 cv80.7847 28.9854 80.897 28.9561 80.9654 28.9903 cv81.0044 29.1387 81.0904 29.5928 81.1265 29.8126 cv81.1334 29.8506 81.1431 29.8887 81.1646 29.9346 cv81.1002 29.9678 81.0562 30.0088 80.9478 30.129 cv80.8365 30.2549 80.5562 30.545 80.1666 30.9952 cv79.7525 31.4688 79.5152 31.8047 79.4292 31.9131 cv79.6382 31.8975 80.4039 31.8506 80.607 31.8282 cv80.9996 31.7862 81.1304 31.7549 81.1226 31.4688 cv81.1226 31.4307 81.1158 31.3819 81.1138 31.3301 cv81.1705 31.2735 81.2828 31.2627 81.3433 31.3106 cv81.3882 31.6905 81.4302 32.1387 81.4439 32.4229 cv81.4058 32.4854 81.2671 32.4795 81.2124 32.4366 cv81.2085 32.3995 81.2066 32.3526 81.1998 32.3174 cv81.1617 32.1143 81.0962 32.086 80.6353 32.126 cv80.3121 32.1553 78.8365 32.2334 78.7056 32.2735 cv78.6568 32.254 78.6031 32.1866 78.5943 32.1182 cv78.9097 31.7051 79.3365 31.171 79.7388 30.7051 cv80.1294 30.25 80.3843 29.9727 80.5748 29.7559 cv80.3824 29.796 79.4937 29.9532 79.2085 30.0176 cv78.7837 30.1133 78.6929 30.1876 78.7056 30.3868 cv78.7095 30.46 78.7105 30.4874 78.7144 30.5264 cv78.6597 30.5801 78.564 30.6036 78.4898 30.5489 cv78.4537 30.296 78.3374 29.6954 78.2896 29.4805 cv0 0 0 0 cmykf49.9449 54.1602 mo49.8843 54.1934 49.8355 54.3262 49.858 54.376 cv49.9048 54.4004 49.9488 54.419 49.9849 54.4424 cv50.1968 54.5616 50.1832 54.6768 50.0582 55.0557 cv50.024 55.1573 49.9732 55.3126 49.9097 55.4981 cv49.9097 55.4981 49.5328 55.3692 49.2261 55.252 cv48.9195 55.1358 48.5494 54.9776 48.5494 54.9776 cv48.6197 54.8126 48.6871 54.6612 48.7349 54.5479 cv48.9214 54.1211 48.9732 54.0743 49.2076 54.1329 cv49.2369 54.1407 49.2779 54.1524 49.3238 54.167 cv49.3726 54.1348 49.4146 54.0137 49.4019 53.9483 cv49.0044 53.7911 48.5367 53.5899 48.2418 53.4542 cv48.1734 53.4834 48.1128 53.5997 48.1343 53.667 cv48.1792 53.6924 48.2212 53.7188 48.2564 53.7403 cv48.4341 53.8653 48.4341 53.9717 48.2681 54.3438 cv48.1773 54.545 47.9644 55.003 47.8023 55.3741 cv47.6949 55.6211 47.5816 55.8438 47.3121 55.7598 cv47.2886 55.7491 47.2447 55.7354 47.189 55.7149 cv47.1168 55.753 47.0708 55.8721 47.1041 55.9288 cv47.3755 56.0596 47.8814 56.2813 48.3511 56.4649 cv48.397 56.4434 48.4664 56.3165 48.4361 56.254 cv48.3951 56.2344 48.3853 56.2276 48.3462 56.2081 cv48.1177 56.086 48.1578 55.8897 48.2906 55.5889 cv48.3218 55.5157 48.3804 55.3711 48.4478 55.2129 cv48.4478 55.2129 48.8619 55.3868 49.1441 55.4922 cv49.4263 55.6026 49.8257 55.7413 49.8257 55.7413 cv49.7818 55.8721 49.7369 56.0049 49.6988 56.127 cv49.6168 56.3848 49.5025 56.6065 49.2281 56.5479 cv49.2027 56.542 49.1773 56.5332 49.1207 56.5196 cv49.0513 56.5635 49.0171 56.6866 49.0542 56.7364 cv49.3609 56.8516 49.8707 57.0303 50.3326 57.1592 cv50.3755 57.1309 50.4332 56.9991 50.397 56.9395 cv50.3541 56.9239 50.3453 56.92 50.3033 56.9014 cv50.065 56.8018 50.1041 56.6084 50.2037 56.294 cv50.2642 56.1075 50.4537 55.5088 50.5464 55.2178 cv50.6841 54.7803 50.7544 54.7374 50.9859 54.7725 cv51.0152 54.7764 51.0572 54.7842 51.105 54.795 cv51.15 54.7579 51.1832 54.6299 51.1656 54.5674 cv50.7896 54.4542 50.3228 54.2999 49.9449 54.1602 cv0 0 0 0 cmykf77.7837 40.4854 mo77.8365 40.4708 77.9458 40.4971 78.0005 40.5518 cv77.9898 40.5977 77.9878 40.6026 77.98 40.6407 cv77.9312 40.8672 77.9537 40.9815 78.4351 41.1377 cv78.7935 41.254 79.2242 41.3995 79.4937 41.4922 cv79.8072 41.5967 79.9937 41.6749 80.1021 41.4053 cv80.1207 41.3575 80.1294 41.3331 80.1431 41.3067 cv80.2037 41.2862 80.3218 41.3262 80.357 41.3799 cv80.1773 41.9463 79.8658 42.8252 79.5074 43.6485 cv79.3277 43.5948 78.9683 43.4864 78.8042 43.4278 cv78.7759 43.334 78.8023 43.2276 78.8707 43.169 cv78.9341 43.1807 79.0318 43.1963 79.1285 43.1885 cv79.2349 43.1846 79.398 43.1631 79.5093 42.9434 cv79.6128 42.7413 79.7242 42.4219 79.7613 42.3018 cv79.7994 42.1836 79.7613 42.1573 79.6851 42.1231 cv79.6148 42.0938 79.0269 41.8907 78.9419 41.8624 cv78.7232 42.4571 78.6597 42.6006 78.6578 42.6084 cv78.5591 42.6045 78.4654 42.5713 78.4078 42.5049 cv78.4078 42.5049 78.6822 41.7813 78.6851 41.7745 cv78.6851 41.7745 78.2261 41.6084 78.1685 41.584 cv77.7701 41.4278 77.7339 41.5166 77.6158 41.8116 cv77.5757 41.9161 77.5435 42.0069 77.523 42.0694 cv77.4449 42.3126 77.4986 42.459 77.6939 42.6475 cv77.7603 42.712 77.7945 42.7413 77.8218 42.7647 cv77.8287 42.8487 77.7847 42.96 77.6773 42.9893 cv77.608 42.9434 77.1187 42.6475 77.0113 42.5577 cv77.2623 41.9991 77.5669 41.1954 77.7837 40.4854 cv0 0 0 0 cmykf37.5113 42.1905 mo37.482 42.2364 37.3765 42.2833 37.3003 42.2784 cv37.2798 42.2334 37.2759 42.2266 37.2584 42.1954 cv37.15 41.9864 37.064 41.9161 36.5933 42.1016 cv36.2418 42.2442 35.816 42.4043 35.5503 42.5059 cv35.2437 42.6241 35.0503 42.6866 35.1382 42.9639 cv35.1548 43.0118 35.1646 43.0362 35.1724 43.0635 cv35.1353 43.1192 35.0191 43.1583 34.9585 43.1465 cv34.7496 42.6416 34.4117 41.7432 34.1617 40.8584 cv34.3355 40.7823 34.6802 40.6387 34.8453 40.5772 cv34.9273 40.6319 34.9742 40.7305 34.9585 40.8184 cv34.9029 40.8506 34.8189 40.9053 34.7466 40.9678 cv34.6685 41.0391 34.5552 41.1622 34.6099 41.3995 cv34.6607 41.625 34.7798 41.9385 34.8267 42.0547 cv34.8736 42.17 34.9234 42.1651 34.9996 42.1436 cv35.0738 42.1211 35.6539 41.9034 35.7378 41.8702 cv35.5259 41.2706 35.4839 41.1211 35.481 41.1124 cv35.5562 41.0547 35.6519 41.0196 35.7398 41.0333 cv35.7398 41.0333 35.9898 41.7647 35.9927 41.7725 cv35.9927 41.7725 36.4527 41.6084 36.5103 41.5889 cv36.9156 41.4551 36.8873 41.3633 36.7906 41.0606 cv36.7564 40.9532 36.7222 40.8653 36.6978 40.8038 cv36.6021 40.5655 36.4654 40.4903 36.1968 40.4708 cv36.1021 40.4629 36.0582 40.461 36.022 40.461 cv35.9654 40.4024 35.9263 40.2852 35.9908 40.1954 cv36.0738 40.1846 36.6382 40.1006 36.7779 40.1006 cv36.9537 40.6973 37.2242 41.5069 37.5113 42.1905 cv0 0 0 0 cmykf41.2935 48.2413 mo41.2984 48.3321 41.2173 48.4063 41.1285 48.4004 cv41.1119 48.379 41.0611 48.3262 41.0318 48.2979 cv40.8882 48.1612 40.7418 48.1934 40.4214 48.4649 cv40.1334 48.7051 39.7847 48.9971 39.5503 49.1924 cv39.3169 49.3887 39.1304 49.5108 39.2798 49.7256 cv39.3042 49.7618 39.3267 49.7881 39.3619 49.8311 cv39.3492 49.9034 39.274 49.9844 39.1968 49.9874 cv39.0835 49.8682 38.8023 49.5225 38.6646 49.3497 cv38.6392 49.3184 38.6099 49.2911 38.5699 49.2608 cv38.6099 49.2012 38.6275 49.1485 38.6617 48.9903 cv38.6988 48.8252 38.8003 48.4268 38.9205 47.8418 cv39.0474 47.2305 39.0875 46.8204 39.1109 46.6817 cv38.9361 46.7979 38.2847 47.2159 38.1177 47.337 cv37.7984 47.5665 37.6998 47.6563 37.8472 47.9004 cv37.8648 47.9336 37.8951 47.9864 37.9175 48.0206 cv37.8931 48.0977 37.8101 48.1612 37.7359 48.1504 cv37.5084 47.8418 37.2535 47.4659 37.1011 47.2266 cv37.1041 47.1534 37.2261 47.0879 37.2945 47.0997 cv37.3169 47.1319 37.3423 47.17 37.3648 47.1983 cv37.4986 47.3575 37.5679 47.3467 37.9507 47.0879 cv38.2193 46.9024 39.4712 46.1104 39.566 46.0118 cv39.6187 46.0059 39.6968 46.0362 39.7378 46.0958 cv39.6656 46.6075 39.5562 47.2803 39.4341 47.8897 cv39.315 48.4756 39.23 48.8428 39.1695 49.1211 cv39.3189 48.9971 40.0171 48.4219 40.2339 48.2266 cv40.5562 47.9356 40.5923 47.8262 40.4869 47.6563 cv40.4458 47.5987 40.4322 47.5752 40.4087 47.544 cv40.4292 47.4678 40.5025 47.4014 40.5923 47.4112 cv40.7505 47.6143 41.146 48.0772 41.2935 48.2413 cv0 0 0 0 cmykf36.4126 38.6612 mo36.3726 38.7432 36.2652 38.7666 36.1929 38.7168 cv36.1861 38.6915 36.1675 38.6211 36.1568 38.5831 cv36.0982 38.3936 35.9546 38.3487 35.5435 38.4297 cv35.1724 38.502 34.7271 38.585 34.4253 38.6426 cv34.1285 38.6993 33.9058 38.7168 33.9312 38.9766 cv33.9341 39.0206 33.9419 39.0538 33.9517 39.1114 cv33.9058 39.1661 33.8003 39.2002 33.731 39.1641 cv33.69 39.004 33.6128 38.5665 33.5757 38.3487 cv33.5699 38.3067 33.5572 38.2706 33.5367 38.2286 cv33.6011 38.1924 33.6421 38.1553 33.7496 38.0323 cv33.8619 37.9083 34.1451 37.6094 34.5347 37.1573 cv34.9429 36.6827 35.1783 36.3448 35.2642 36.2344 cv35.0562 36.252 34.2828 36.3008 34.0796 36.3233 cv33.689 36.3692 33.5572 36.4014 33.5669 36.6866 cv33.5679 36.7247 33.5689 36.7833 33.5699 36.8252 cv33.5142 36.8799 33.4087 36.8946 33.3482 36.8497 cv33.3003 36.4678 33.2593 36.0166 33.2437 35.7354 cv33.2808 35.67 33.4214 35.6749 33.4742 35.7198 cv33.48 35.754 33.483 35.7999 33.4888 35.837 cv33.5279 36.0411 33.5914 36.0674 34.0533 36.0254 cv34.3785 35.9952 35.856 35.9102 35.9888 35.8702 cv36.0367 35.8926 36.0894 35.9571 36.0982 36.0293 cv35.7857 36.4395 35.3609 36.9756 34.9585 37.4473 cv34.5699 37.9004 34.3179 38.1807 34.1285 38.3956 cv34.3199 38.3584 35.2105 38.1954 35.4937 38.1299 cv35.9185 38.0323 36.0035 37.9561 35.9908 37.7579 cv35.9869 37.6856 35.9839 37.6573 35.9791 37.6192 cv36.0337 37.5635 36.1314 37.5411 36.2027 37.5938 cv36.2427 37.8467 36.3619 38.4444 36.4126 38.6612 cv0 0 0 0 cmykf42.5679 49.878 mo42.6001 49.9102 42.6324 49.9444 42.6617 49.9786 cv42.8101 50.1573 42.8824 50.2764 42.6304 50.5713 cv42.5748 50.6368 42.3599 50.8604 42.2964 50.9346 cv42.0591 50.7247 41.9566 50.626 41.7437 50.4229 cv41.6617 50.4551 41.5767 50.5411 41.5376 50.6299 cv41.7496 50.8272 41.8609 50.9278 42.105 51.1553 cv42.0484 51.2247 41.5953 51.7413 41.5396 51.796 cv41.4849 51.8506 41.4439 51.879 41.3472 51.7979 cv41.2505 51.7198 41.1138 51.6075 40.9332 51.4083 cv40.6402 51.0909 40.9498 50.6465 41.0357 50.5166 cv41.0074 50.4161 40.9302 50.3653 40.8199 50.3584 cv40.6646 50.5479 40.3814 50.9317 40.2398 51.0967 cv40.9625 51.8262 41.4205 52.2286 41.9898 52.6876 cv42.0494 52.669 42.1334 52.5811 42.1392 52.5166 cv42.1197 52.4922 42.1031 52.4795 42.066 52.4415 cv41.8589 52.2383 42.0005 52.0899 42.2154 51.8418 cv42.3521 51.6797 42.6597 51.3379 42.9507 50.9883 cv43.2759 50.5977 43.3609 50.6221 43.5552 50.753 cv43.5845 50.7754 43.5894 50.7793 43.6275 50.8038 cv43.6968 50.7754 43.7662 50.6807 43.7691 50.626 cv43.4107 50.337 43.0425 50.0147 42.7261 49.7159 cv42.6568 49.7276 42.5855 49.8243 42.5679 49.878 cv0 0 0 0 cmykf80.8404 21.7295 mo80.2115 20.5274 79.3912 19.2764 79.0328 18.7715 cv79.0748 18.6729 79.2349 18.5586 79.3296 18.5567 cv79.3785 18.6182 79.4205 18.6729 79.4527 18.7081 cv79.7046 18.9874 79.8296 18.9727 80.441 18.5723 cv80.8511 18.3057 81.6871 17.7608 81.9507 17.5899 cv82.2642 17.3838 82.689 17.1797 82.4644 16.7627 cv82.4244 16.6885 82.4048 16.6602 82.3707 16.5987 cv82.3843 16.4864 82.5718 16.3653 82.6626 16.3868 cv83.1294 17.045 83.5386 17.7061 83.8003 18.1465 cv83.7964 18.2471 83.6294 18.3614 83.5005 18.3497 cv83.4468 18.2774 83.4205 18.2413 83.397 18.209 cv83.1421 17.8399 82.7418 18.1045 82.4087 18.3174 cv81.8677 18.6631 81.357 18.9893 80.899 19.2823 cv80.3589 19.628 80.2515 19.7022 80.396 20.0626 cv80.4214 20.125 80.5113 20.3096 80.6128 20.4708 cv80.7144 20.628 80.8755 20.8663 81.0601 20.9737 cv81.2408 21.0821 81.5503 21.084 81.6431 21.0743 cv81.733 21.0626 81.9048 21.0274 82.0005 21.001 cv82.0748 21.0342 82.2037 21.1446 82.1255 21.3477 cv81.8277 21.4415 81.3882 21.6045 80.8404 21.7295 cv0 0 0 0 cmykf82.9166 27.002 mo82.5591 25.6944 82.0171 24.2588 81.7779 23.7256 cv81.8404 23.6387 82.021 23.5616 82.1138 23.5801 cv82.148 23.6504 82.1753 23.7129 82.1998 23.754 cv82.3873 24.0782 82.5113 24.0928 83.1939 23.8311 cv83.6529 23.6592 84.5845 23.3057 84.8794 23.1944 cv85.231 23.0616 85.6958 22.9502 85.564 22.4952 cv85.5376 22.4141 85.5289 22.379 85.5093 22.3126 cv85.5455 22.21 85.7525 22.1299 85.8374 22.17 cv86.1617 22.918 86.4166 23.6475 86.5806 24.1319 cv86.5523 24.2315 86.3668 24.3086 86.2408 24.2686 cv86.2046 24.1846 86.189 24.1465 86.1714 24.1084 cv85.9996 23.6934 85.5611 23.8604 85.188 23.9971 cv84.5845 24.2208 84.0005 24.4336 83.4927 24.6231 cv82.8892 24.8458 82.7691 24.8956 82.8335 25.2784 cv82.8453 25.3448 82.8931 25.545 82.9576 25.7227 cv83.024 25.8995 83.1294 26.1641 83.2857 26.3077 cv83.4419 26.4561 83.7408 26.5225 83.8365 26.5333 cv83.9292 26.542 84.1011 26.544 84.2027 26.5372 cv84.2652 26.5831 84.3687 26.7178 84.2486 26.9024 cv83.939 26.9317 83.4791 26.9961 82.9166 27.002 cv0 0 0 0 cmykf74.398 12.8204 mo74.2798 12.9834 74.1958 13.1182 74.0992 13.3047 cv73.7447 13.1612 73.2164 12.9532 72.5728 12.4893 cv72.0132 12.0889 71.3892 11.4932 71.4019 10.4317 cv71.4087 9.49708 71.982 8.69434 72.6958 8.3711 cv73.6421 7.94044 74.5582 8.25489 75.2574 8.75098 cv76.0738 9.33204 76.3306 9.67969 76.4458 9.81446 cv76.231 10.1358 76.0308 10.4639 75.8121 10.8555 cv75.7037 10.8799 75.5103 10.8135 75.4839 10.711 cv75.5425 10.5342 75.6734 10.2667 75.6392 9.96485 cv75.6011 9.66407 75.4283 9.36426 75.0376 9.08985 cv74.5699 8.75684 73.3511 8.43555 72.5259 9.83985 cv71.733 11.1866 72.564 11.9473 72.8267 12.1504 cv72.9927 12.2813 73.0533 12.3243 73.1578 12.3917 cv73.4253 12.5606 73.5806 12.5225 73.7437 12.3174 cv73.816 12.2305 73.8716 12.1504 73.9712 12.0098 cv74.1685 11.7344 74.1792 11.712 73.9478 11.459 cv73.8316 11.334 73.7613 11.2608 73.6929 11.1963 cv73.6724 11.0889 73.7867 10.9161 73.9478 10.9092 cv74.4898 11.3506 75.105 11.7911 75.5259 12.0499 cv75.5542 12.1446 75.4263 12.3643 75.3199 12.3702 cv75.2466 12.3418 75.2124 12.3243 75.1548 12.2979 cv74.9703 12.2129 74.8843 12.1788 74.6539 12.4854 cv74.5015 12.6915 74.441 12.7657 74.398 12.8204 cv0 0 0 0 cmykf67.9888 59.1348 mo68.9693 60.209 69.1382 60.3096 69.9058 61.1719 cv70.1773 61.4776 70.2867 61.6065 69.9976 61.7813 cv69.9205 61.8243 69.8726 61.8536 69.8306 61.8702 cv69.7964 61.9942 69.8863 62.171 69.9869 62.1944 cv70.5943 61.9239 71.2066 61.6241 71.855 61.2774 cv71.9146 61.1397 71.773 60.9922 71.7007 60.9571 cv71.6382 60.9834 71.566 61.0176 71.4752 61.045 cv71.1343 61.1397 70.9966 61.0645 70.6304 60.6915 cv70.4224 60.4776 68.2056 58.1377 68.1539 58.0831 cv68.0982 58.0303 68.0308 58.0538 67.9986 58.0831 cv67.9693 58.1124 67.6431 58.4082 67.4976 58.5538 cv67.5533 59.6739 67.5347 61.3555 67.5318 62.0196 cv67.5318 62.6836 67.4214 62.8204 67.2427 62.8936 cv67.15 62.9278 67.0874 62.9493 67.024 62.9717 cv66.9693 63.0821 67.0259 63.2872 67.1314 63.3106 cv67.607 63.1563 68.2994 62.9053 68.7427 62.7247 cv68.8091 62.6104 68.731 62.4112 68.6294 62.3799 cv68.566 62.4044 68.5054 62.4268 68.4507 62.4424 cv68.2203 62.4991 68.0728 62.5069 68.0484 61.961 cv68.0044 61.1055 68.0005 60.0225 67.9888 59.1348 cv0 0 0 0 cmykf84.3687 30.5489 mo85.6646 29.8887 85.813 29.752 86.8482 29.2413 cv87.2144 29.0616 87.3853 28.9815 87.4712 29.3077 cv87.4957 29.3907 87.5084 29.4454 87.5152 29.4903 cv87.6236 29.5567 87.8218 29.5176 87.8677 29.4278 cv87.772 28.7686 87.647 28.1055 87.4878 27.3819 cv87.3687 27.2911 87.19 27.3877 87.1373 27.4483 cv87.146 27.5166 87.1597 27.5928 87.1597 27.6866 cv87.1597 28.0411 87.0337 28.1622 86.5787 28.4141 cv86.316 28.5596 83.4634 30.0713 83.3951 30.1114 cv83.3296 30.1475 83.3345 30.2237 83.355 30.2588 cv83.3765 30.296 83.5748 30.6866 83.6734 30.8672 cv84.7691 31.1114 86.3882 31.5772 87.0269 31.7569 cv87.6685 31.9356 87.773 32.0782 87.7916 32.2715 cv87.8033 32.3653 87.8072 32.4317 87.8101 32.502 cv87.9048 32.5811 88.1128 32.5821 88.1685 32.4874 cv88.1431 31.9874 88.0962 31.2549 88.0376 30.7793 cv87.9468 30.6827 87.7349 30.7061 87.6783 30.796 cv87.6832 30.8624 87.6919 30.9288 87.691 30.9844 cv87.6832 31.2217 87.6519 31.3643 87.1197 31.2461 cv86.2857 31.0586 85.2242 30.7735 84.3687 30.5489 cv0 0 0 0 cmykf31.15 26.5147 mo29.6998 26.6075 29.5074 26.6749 28.357 26.7334 cv27.9468 26.7559 27.7593 26.7618 27.8072 26.4258 cv27.8199 26.3399 27.8326 26.2852 27.8414 26.2413 cv27.7681 26.1368 27.5718 26.0958 27.4937 26.1602 cv27.3208 26.8038 27.1734 27.4639 27.0337 28.1895 cv27.106 28.3194 27.3101 28.3018 27.3814 28.2657 cv27.4009 28.2012 27.4195 28.125 27.4556 28.0411 cv27.5962 27.7129 27.7584 27.6543 28.2769 27.6026 cv28.5748 27.5733 31.7935 27.3086 31.8697 27.3008 cv31.9458 27.293 31.9693 27.2227 31.9654 27.1827 cv31.9625 27.1397 31.9332 26.6973 31.9126 26.4971 cv31.0054 25.8379 29.6988 24.7715 29.1832 24.3555 cv28.6666 23.9376 28.6265 23.7647 28.6841 23.5801 cv28.7134 23.4864 28.7349 23.4239 28.7593 23.3604 cv28.7027 23.2481 28.5123 23.1631 28.4253 23.2315 cv28.2486 23.6983 28.0044 24.3917 27.8697 24.8536 cv27.9156 24.9747 28.1187 25.0391 28.2066 24.9786 cv28.2281 24.9161 28.2476 24.8516 28.271 24.8008 cv28.3697 24.587 28.4566 24.4659 28.897 24.7852 cv29.5914 25.2881 30.4527 25.9708 31.15 26.5147 cv0 0 0 0 cmykf60.5445 60.3702 mo61.8912 60.2129 63.3912 59.879 63.9527 59.7305 cv64.0298 59.8038 64.0796 59.9942 64.0474 60.0831 cv63.9742 60.1045 63.9078 60.128 63.8609 60.1446 cv63.5142 60.2803 63.482 60.4024 63.6373 61.1172 cv63.7437 61.5918 63.9556 62.5684 64.0201 62.877 cv64.1011 63.2442 64.1412 63.7139 64.6128 63.6495 cv64.6949 63.6387 64.7281 63.6338 64.7994 63.625 cv64.898 63.6778 64.9449 63.8936 64.8921 63.9708 cv64.0982 64.1719 63.3462 64.3243 62.8433 64.4141 cv62.7476 64.3731 62.6988 64.1778 62.7593 64.0616 cv62.8502 64.0352 62.8902 64.0245 62.9292 64.0147 cv63.3638 63.9082 63.2584 63.4405 63.1773 63.0508 cv63.0455 62.421 62.9224 61.8243 62.8111 61.292 cv62.6792 60.6641 62.65 60.5372 62.2632 60.545 cv62.1958 60.546 61.9898 60.5645 61.8042 60.6016 cv61.6187 60.6416 61.3423 60.7081 61.1724 60.8399 cv61.0084 60.9727 60.896 61.2598 60.8736 61.3516 cv60.8502 61.4424 60.8228 61.6124 60.816 61.711 cv60.7593 61.7686 60.608 61.8497 60.4449 61.7071 cv60.4634 61.3956 60.4673 60.9317 60.5445 60.3702 cv0 0 0 0 cmykf84.1558 36.0489 mo84.0679 36.1397 83.8726 36.1299 83.7906 36.0166 cv83.8365 35.293 83.857 34.9385 83.8648 34.3213 cv83.9332 34.2286 84.1138 34.1934 84.23 34.3184 cv84.2339 34.4024 84.23 34.4366 84.2359 34.501 cv84.2603 34.754 84.275 34.9034 84.9664 35.0606 cv85.4126 35.1602 86.6539 35.3799 86.9126 35.4034 cv87.3531 35.4483 87.7955 35.5245 87.8238 35.044 cv87.8277 34.9473 87.8296 34.9512 87.8335 34.8565 cv87.9185 34.7784 88.0914 34.7754 88.1958 34.8721 cv88.1744 35.4864 88.1558 35.8995 88.1041 36.5362 cv87.8902 36.5127 87.6666 36.5274 87.272 36.6622 cv86.7837 36.8311 85.4537 37.251 84.8619 37.4883 cv85.1636 37.7178 86.8189 38.7491 86.9205 38.8174 cv87.1558 38.9708 87.4742 39.1641 87.7671 39.2471 cv87.6949 39.6944 87.5601 40.3721 87.4458 40.8672 cv87.3609 40.9415 87.1597 40.9073 87.0933 40.7823 cv87.1119 40.6915 87.1138 40.6719 87.1197 40.6045 cv87.148 40.3448 87.1275 40.1993 86.5787 40.128 cv85.9712 40.0528 85.0406 39.9297 84.5142 39.9034 cv83.8951 39.8731 83.6207 39.8575 83.5367 40.1426 cv83.4986 40.2833 83.4957 40.2901 83.4664 40.4004 cv83.3736 40.4561 83.1646 40.4112 83.1148 40.3126 cv83.3502 39.3145 83.4019 38.9981 83.4966 38.4405 cv83.5884 38.3897 83.7837 38.42 83.855 38.5 cv83.8462 38.5547 83.8365 38.625 83.8365 38.6651 cv83.8287 38.8956 83.814 39.0225 84.5103 39.0967 cv85.1343 39.1641 86.5298 39.3047 86.9029 39.3321 cv86.5298 39.0655 85.314 38.3506 84.7007 37.9336 cv84.0757 37.5079 83.8433 37.3848 83.6334 37.2696 cv83.5865 37.1827 83.6031 37.0596 83.6597 36.9932 cv83.7808 36.9708 84.2398 36.8633 84.858 36.6475 cv85.4752 36.4317 87.0142 35.9786 87.3072 35.9014 cv86.7818 35.8047 85.5093 35.6338 85.1031 35.5733 cv84.6158 35.502 84.2037 35.4415 84.1695 35.8243 cv84.1558 36.0489 li0 0 0 0 cmykf58.0406 5.29883 mo58.0406 5.68165 57.73 5.99219 57.3472 5.99219 cv56.9634 5.99219 56.6529 5.68165 56.6529 5.29883 cv56.6529 4.91602 56.9634 4.60547 57.3472 4.60547 cv57.7291 4.60547 58.0406 4.91602 58.0406 5.29883 cv0 0 0 0 cmykf58.9166 63.627 mo58.8902 63.7598 58.8462 63.9346 58.732 64.0909 cv58.6363 64.2276 58.4634 64.4014 58.0406 64.4249 cv57.9361 64.4297 57.7222 64.417 57.4644 64.4141 cv57.4644 64.4141 57.4644 62.336 57.4664 61.8477 cv57.4732 61.1192 57.524 61.003 57.896 60.9493 cv57.9439 60.9385 58.0132 60.9356 58.0904 60.9297 cv58.1392 60.8506 58.1285 60.6416 58.0679 60.5508 cv57.4537 60.5645 56.6539 60.5508 55.9937 60.5245 cv55.9175 60.6016 55.9058 60.8262 55.9624 60.8956 cv56.0455 60.9044 56.1236 60.917 56.188 60.9297 cv56.5689 61.0049 56.6041 61.1807 56.5962 61.8243 cv56.5923 62.1797 56.5962 62.1504 56.5367 64.4014 cv56.2115 64.3926 55.8892 64.3868 55.7515 64.3731 cv55.357 64.337 55.2671 64.0108 55.2359 63.9102 cv55.2056 63.8057 55.1871 63.6836 55.1822 63.5508 cv55.0787 63.4659 54.8541 63.4903 54.7974 63.5547 cv54.7945 63.7334 54.8072 64.5723 54.7935 64.795 cv56.5308 64.9249 57.4898 64.9317 59.0503 64.8575 cv59.0728 64.7911 59.2779 63.8165 59.3023 63.7061 cv59.2154 63.5928 59.0171 63.5723 58.9166 63.627 cv0 0 0 0 cmykf46.6529 61.6778 mo46.5748 61.7891 46.4625 61.9288 46.2955 62.0264 cv46.15 62.1114 45.9195 62.1993 45.525 62.0469 cv45.4292 62.0088 45.2339 61.9161 45.0005 61.8096 cv45.0005 61.8096 45.856 59.9053 46.0591 59.461 cv46.3648 58.7989 46.4625 58.7149 46.8218 58.8135 cv46.8687 58.8292 46.9332 58.8497 47.0064 58.876 cv47.0845 58.8243 47.1607 58.625 47.1421 58.5245 cv46.5767 58.2852 45.8521 57.9454 45.2584 57.6514 cv45.1568 57.6915 45.0542 57.8897 45.0787 57.9795 cv45.149 58.0206 45.2144 58.0626 45.2691 58.1016 cv45.5855 58.3292 45.5416 58.5069 45.273 59.0909 cv45.1216 59.4151 45.1382 59.3887 44.1607 61.417 cv43.8677 61.2764 43.5806 61.1319 43.4595 61.0626 cv43.1158 60.8672 43.1666 60.5323 43.1792 60.4278 cv43.1939 60.3213 43.2271 60.2032 43.2769 60.0782 cv43.2164 59.959 43.0035 59.8877 42.9244 59.9258 cv42.8492 60.085 42.5181 60.8575 42.4126 61.0557 cv43.9703 61.8926 44.8179 62.2832 46.2701 62.8545 cv46.3189 62.8038 46.9039 61.9991 46.9722 61.9102 cv46.94 61.7725 46.7652 61.6719 46.6529 61.6778 cv0 0 0 0 cmykf80.774 47.2227 mo80.8111 47.1612 80.8531 47.0987 80.8951 47.0372 cv81.1138 46.7403 81.273 46.5821 81.8238 46.8604 cv81.9468 46.9229 82.3697 47.1622 82.5074 47.2364 cv82.272 47.6827 82.1597 47.8799 81.9244 48.2891 cv82.0064 48.4024 82.1666 48.503 82.3208 48.5293 cv82.5484 48.125 82.6626 47.9141 82.9234 47.4473 cv83.0503 47.5127 84.023 48.0166 84.1285 48.0811 cv84.2359 48.1495 84.2955 48.1993 84.2066 48.379 cv84.1177 48.5596 83.9976 48.8145 83.7603 49.169 cv83.3785 49.7432 82.5699 49.4336 82.3365 49.3497 cv82.1939 49.4317 82.1412 49.5723 82.1744 49.7452 cv82.5279 49.9122 83.2349 50.2042 83.5425 50.3633 cv84.4019 48.962 84.8472 48.1006 85.3384 47.045 cv85.2906 46.959 85.1216 46.8604 85.0152 46.8809 cv84.9927 46.919 84.9722 46.9493 84.9302 47.0206 cv84.6929 47.419 84.4097 47.2559 83.941 47.0206 cv83.6392 46.8653 82.9878 46.5166 82.3345 46.1993 cv81.607 45.8428 81.6148 45.7032 81.7437 45.3545 cv81.7632 45.2979 81.7652 45.2901 81.7935 45.2198 cv81.7203 45.1221 81.5523 45.0528 81.4654 45.0674 cv81.146 45.7549 80.8023 46.4317 80.4605 47.0372 cv80.5093 47.1436 80.6812 47.2159 80.774 47.2227 cv0 0 0 0 cmykf66.6958 9.21485 mo66.6773 9.11036 66.7515 8.90918 66.8287 8.85547 cv66.9009 8.87989 66.9839 8.9043 67.0474 8.91797 cv67.4234 8.99708 67.5279 8.97168 67.8179 8.25586 cv68.0064 7.79004 68.355 6.94727 68.4878 6.60645 cv68.6294 6.25586 68.8541 5.85157 68.4312 5.63672 cv68.358 5.59766 68.3062 5.58106 68.2418 5.54786 cv68.1919 5.45118 68.2798 5.23438 68.3658 5.20118 cv69.1089 5.49317 69.9058 5.83594 70.4312 6.08301 cv70.4849 6.17872 70.3814 6.39258 70.2789 6.42383 cv70.19 6.39063 70.1373 6.37012 70.0982 6.35645 cv69.6568 6.21778 69.4878 6.54883 69.3013 6.97168 cv69.0367 7.57325 68.7349 8.26172 68.5826 8.60352 cv68.3248 9.19044 68.2955 9.37012 68.6177 9.58692 cv68.6744 9.625 68.7388 9.65723 68.8287 9.70215 cv68.855 9.78614 68.7603 10.003 68.6626 10.0479 cv67.9107 9.69825 67.2613 9.43262 66.6958 9.21485 cv0 0 0 0 cmykf42.73 56.1739 mo42.7271 56.2813 42.6099 56.459 42.523 56.4952 cv42.4576 56.4571 42.3814 56.4131 42.3228 56.3858 cv41.9732 56.2266 41.8677 56.2276 41.4234 56.8624 cv41.1363 57.2735 40.6138 58.0206 40.4068 58.3252 cv40.1929 58.6338 39.8843 58.9786 40.2496 59.2832 cv40.313 59.336 40.358 59.3643 40.4126 59.4112 cv40.439 59.5166 40.3082 59.709 40.2164 59.7227 cv39.5562 59.2745 38.856 58.7588 38.3951 58.4063 cv38.3668 58.2989 38.5142 58.1143 38.6207 58.1075 cv38.6988 58.1592 38.7457 58.1924 38.7818 58.212 cv39.1812 58.4454 39.4205 58.1592 39.6939 57.7901 cv40.0855 57.2598 40.5337 56.6544 40.7554 56.3565 cv41.1363 55.8399 41.2046 55.671 40.939 55.3868 cv40.8931 55.335 40.8375 55.293 40.7603 55.2286 cv40.7515 55.1397 40.8912 54.9493 40.9976 54.9278 cv41.6519 55.4356 42.2291 55.8399 42.73 56.1739 cv0 0 0 0 cmykf75.9263 15.1124 mo75.9507 15.0079 76.1021 14.8536 76.1929 14.835 cv76.2486 14.8897 76.3169 14.9424 76.3677 14.9795 cv76.6841 15.2051 76.7828 15.2227 77.3423 14.6866 cv77.7017 14.336 78.3599 13.7051 78.6197 13.4483 cv78.8882 13.1846 79.2584 12.9073 78.9605 12.5372 cv78.9068 12.4727 78.8677 12.4385 78.8218 12.3809 cv78.816 12.2715 78.983 12.1084 79.0748 12.1143 cv79.6363 12.6788 80.2271 13.3135 80.6089 13.7549 cv80.6187 13.8614 80.4361 14.0147 80.3316 14.001 cv80.2642 13.9385 80.2232 13.8975 80.191 13.8682 cv79.8462 13.5645 79.5582 13.7979 79.2183 14.1075 cv78.7339 14.5538 78.1753 15.0626 77.9009 15.3116 cv77.4283 15.7461 77.3277 15.8995 77.5347 16.2286 cv77.5689 16.2823 77.6197 16.3409 77.6822 16.418 cv77.6714 16.5079 77.4986 16.667 77.3892 16.667 cv76.8443 16.0411 76.358 15.5372 75.9263 15.1124 cv0 0 0 0 cmykf43.9957 11.1172 mo42.8218 11.7989 41.608 12.6729 41.1187 13.0538 cv41.0201 13.0176 40.899 12.8624 40.8921 12.7667 cv40.9517 12.7178 41.0044 12.6729 41.0386 12.6377 cv41.3042 12.376 41.2847 12.251 40.8589 11.6583 cv40.5738 11.2618 39.9918 10.4512 39.8082 10.1944 cv39.5894 9.89063 39.3668 9.47266 38.9615 9.71973 cv38.8892 9.76368 38.8589 9.78126 38.7984 9.81836 cv38.688 9.81055 38.5582 9.62989 38.5738 9.53516 cv39.2134 9.04004 39.8541 8.60352 40.2798 8.32032 cv40.3834 8.32227 40.5064 8.47852 40.4976 8.61133 cv40.4273 8.66895 40.3941 8.69629 40.3619 8.72266 cv40.0044 8.99317 40.2876 9.37891 40.5152 9.70313 cv40.8853 10.2295 41.2339 10.7256 41.5474 11.1719 cv41.9175 11.6944 41.9966 11.7989 42.3492 11.6368 cv42.4097 11.6075 42.5904 11.5098 42.7457 11.4024 cv42.9 11.295 43.1285 11.1221 43.2281 10.9356 cv43.3296 10.7442 43.3189 10.4395 43.3023 10.3477 cv43.2886 10.2549 43.2457 10.086 43.2125 9.99219 cv43.2437 9.917 43.3472 9.78223 43.5552 9.85059 cv43.6626 10.1446 43.8443 10.5743 43.9957 11.1172 cv0 0 0 0 cmykf72.8404 55.3936 mo72.2457 55.794 71.7115 56.3604 71.6002 56.4893 cv71.7984 56.837 71.9703 57.2129 72.1656 57.5674 cv72.2652 57.5889 72.5084 57.4844 72.5298 57.3936 cv72.4781 57.2334 72.358 56.9932 72.3882 56.7247 cv72.4312 56.3458 72.7095 56.0303 73.0416 55.8057 cv73.355 55.5948 74.398 55.0879 75.3433 56.3301 cv76.3267 57.627 75.5816 58.6084 75.1119 58.92 cv74.6851 59.2012 74.2613 59.2198 73.9986 59.1436 cv73.7388 59.0665 73.5621 58.8692 73.4332 58.7588 cv73.3414 58.7452 73.1656 58.9219 73.1519 59.0186 cv73.4019 59.336 73.6968 59.6241 73.9166 59.9434 cv74.0777 59.8877 74.8589 59.586 75.44 59.1836 cv76.1021 58.7276 76.6685 58.0352 76.6226 57.0557 cv76.5884 56.2764 76.063 55.4405 75.2085 55.0713 cv74.2437 54.6592 73.4351 54.9952 72.8404 55.3936 cv0 0 0 0 cmykf61.6441 7.6875 mo61.6646 7.22168 61.7544 6.75391 61.8208 6.4834 cv61.9205 6.44239 62.1236 6.4629 62.2369 6.54981 cv62.232 7.05372 62.1656 7.64161 63.0191 7.82618 cv63.566 7.94434 63.857 7.68946 63.9556 7.39454 cv64.1002 6.97168 63.8287 6.65235 63.2544 6.23536 cv62.4322 5.6377 62.2798 5.27637 62.2847 4.88184 cv62.2945 4.37793 62.6949 3.45606 64.1148 3.77247 cv64.7974 3.92286 65.0972 4.12012 65.3052 4.20899 cv65.3296 4.32911 65.2574 4.98047 65.1929 5.22657 cv65.0718 5.30469 64.9341 5.28907 64.8072 5.17969 cv64.8023 5.08301 64.9029 4.40137 64.1324 4.18653 cv63.4302 3.99122 63.2007 4.41016 63.1617 4.64258 cv63.105 4.98926 63.3638 5.20215 63.9253 5.62989 cv64.44 6.02247 65.0416 6.45215 64.858 7.2793 cv64.6929 8.01856 63.898 8.4502 62.9839 8.23633 cv62.0689 8.02637 61.6441 7.6875 61.6441 7.6875 cv0 0 0 0 cmykf39.0542 53.4268 mo38.7759 53.7989 38.44 54.1368 38.233 54.3262 cv38.1275 54.3018 37.9712 54.1729 37.9253 54.0332 cv38.2095 53.6241 38.5972 53.17 37.9927 52.5391 cv37.606 52.1387 37.2232 52.1846 36.9771 52.3711 cv36.6197 52.6436 36.6666 53.0557 36.9078 53.7247 cv37.2535 54.6836 37.1763 55.0674 36.9507 55.3897 cv36.6597 55.8038 35.8121 56.3418 34.8111 55.2852 cv34.3316 54.7745 34.1949 54.4444 34.0728 54.2559 cv34.1197 54.1407 34.5435 53.6407 34.7349 53.4737 cv34.8794 53.4786 34.9849 53.5674 35.0279 53.7305 cv34.9791 53.8155 34.5123 54.3184 35.0298 54.9297 cv35.5025 55.4883 35.9263 55.2666 36.0904 55.0958 cv36.3316 54.8428 36.2369 54.5186 36.0103 53.8516 cv35.8023 53.2403 35.5464 52.545 36.1646 51.9668 cv36.7154 51.4385 37.6138 51.5293 38.2525 52.2198 cv38.8912 52.9082 39.0542 53.4268 39.0542 53.4268 cv0 0 0 0 cmykf45.9371 10.086 mo45.8462 10.0264 45.7544 9.83106 45.7681 9.74024 cv45.8375 9.70313 45.9117 9.66407 45.9654 9.625 cv46.2828 9.40821 46.3355 9.31739 46.021 8.61133 cv45.816 8.15332 45.4498 7.31836 45.2964 6.98536 cv45.1421 6.64356 45.0064 6.19727 44.5572 6.35254 cv44.4781 6.37891 44.4322 6.40235 44.3638 6.42774 cv44.2574 6.39649 44.1626 6.1836 44.1988 6.09766 cv44.9224 5.76465 45.7232 5.42676 46.2652 5.21778 cv46.3726 5.24805 46.4546 5.46973 46.4039 5.56641 cv46.3208 5.6084 46.2671 5.63184 46.23 5.6504 cv45.8257 5.8711 45.9458 6.22364 46.1216 6.64844 cv46.3746 7.25977 46.6617 7.95704 46.8023 8.30079 cv47.0464 8.89161 47.1578 9.03907 47.5347 8.95606 cv47.6021 8.94239 47.6695 8.91797 47.7642 8.88575 cv47.8453 8.92579 47.9371 9.14063 47.898 9.24512 cv47.1255 9.54297 46.482 9.82618 45.9371 10.086 cv0 0 0 0 cmykf50.147 8.33497 mo49.9703 7.9043 49.855 7.44141 49.8013 7.16895 cv49.8746 7.08887 50.065 7.02149 50.2066 7.05372 cv50.4136 7.50879 50.6021 8.0752 51.4537 7.87989 cv52.0005 7.75782 52.1558 7.40332 52.1207 7.09571 cv52.0718 6.64844 51.6929 6.47754 50.9957 6.33985 cv49.9957 6.14258 49.7066 5.87989 49.5474 5.52051 cv49.3414 5.0586 49.316 4.05567 50.7388 3.74024 cv51.4224 3.5918 51.7759 3.64454 52.0025 3.63868 cv52.0757 3.73633 52.2857 4.35645 52.3296 4.60547 cv52.2515 4.72754 52.1207 4.77149 51.9585 4.72559 cv51.9117 4.64063 51.7193 3.98145 50.9283 4.1084 cv50.2085 4.22754 50.1783 4.70508 50.2418 4.9336 cv50.3345 5.27051 50.6597 5.35645 51.3492 5.50586 cv51.983 5.64258 52.7095 5.78028 52.8902 6.6084 cv53.0533 7.34961 52.5152 8.0752 51.5953 8.26856 cv50.6763 8.4629 50.147 8.33497 50.147 8.33497 cv0 0 0 0 cmykf52.2281 60.0538 mo52.0826 60.1309 52.1021 60.336 52.1314 60.4004 cv52.1939 60.419 52.1841 60.4131 52.2857 60.4483 cv52.6002 60.5567 52.5943 60.6836 52.3335 61.0713 cv52.1792 61.2989 52.1431 61.3633 52.0826 61.4463 cv51.8687 61.3936 50.6636 61.1231 50.4605 61.0752 cv50.441 60.9151 50.4458 60.9278 50.4068 60.5997 cv50.3697 60.2803 50.3511 60.0225 50.6998 60.085 cv50.7867 60.1026 50.8062 60.1084 50.8482 60.1163 cv50.9615 60.0538 50.9937 59.8467 50.9332 59.7657 cv50.6529 59.6983 49.9498 59.5069 49.107 59.2491 cv48.9722 59.3155 48.9527 59.5254 48.983 59.5997 cv49.0865 59.6426 49.1177 59.6504 49.2056 59.6827 cv49.5435 59.8067 49.5562 60.3536 49.5855 60.5508 cv49.6265 60.8506 50.0191 64.0821 50.0289 64.1592 cv50.0396 64.2344 50.0728 64.2344 50.1109 64.2325 cv50.1509 64.2286 50.6998 64.1924 50.8101 64.168 cv50.94 63.9727 52.4136 61.8477 52.7935 61.2911 cv53.1949 60.7022 53.3169 60.6856 53.524 60.67 cv53.6187 60.6631 53.6958 60.6797 53.73 60.6797 cv53.8287 60.6065 53.855 60.3877 53.775 60.3135 cv53.2369 60.2354 52.4117 60.0909 52.2281 60.0538 cvcp50.813 63.3311 mo50.813 63.3311 50.7964 63.3575 50.7681 63.3516 cv50.7408 63.3438 50.7398 63.3145 50.7398 63.3145 cv50.5064 61.4463 li51.8736 61.7588 li50.813 63.3311 li0 0 0 0 cmykf27.7154 34.1817 mo27.5826 34.1504 27.4107 34.1006 27.2603 33.9786 cv27.1294 33.8741 26.9615 33.6924 26.9585 33.2706 cv26.9585 33.168 26.983 32.9512 26.9966 32.6934 cv26.9966 32.6934 29.0718 32.792 29.5611 32.8184 cv30.2886 32.8604 30.399 32.921 30.439 33.2911 cv30.4429 33.337 30.4458 33.4073 30.4468 33.4834 cv30.523 33.5401 30.7349 33.5362 30.8248 33.4815 cv30.8404 32.8672 30.8931 32.0704 30.9537 31.4112 cv30.8746 31.334 30.6548 31.3106 30.5826 31.3643 cv30.5689 31.4434 30.5533 31.5215 30.5367 31.5879 cv30.4429 31.9629 30.2652 31.9874 29.6255 31.9532 cv29.2691 31.9307 29.2964 31.9356 27.0533 31.7696 cv27.0767 31.4434 27.0992 31.126 27.1187 30.9883 cv27.1753 30.5967 27.5035 30.5215 27.606 30.4961 cv27.7115 30.4717 27.8345 30.4571 27.9683 30.4581 cv28.0562 30.3584 28.0445 30.1329 27.981 30.0733 cv27.8042 30.0616 26.9654 30.0362 26.7427 30.0108 cv26.5308 31.7403 26.4791 32.6973 26.4791 34.2598 cv26.5445 34.2852 27.5093 34.5352 27.6148 34.5655 cv27.732 34.4834 27.7632 34.2852 27.7154 34.1817 cv0 0 0 0 cmykf31.3169 39.1661 mo31.19 39.0616 31.0084 39.1553 30.9615 39.2081 cv30.9664 39.2706 30.9693 39.2608 30.9742 39.3692 cv30.9927 39.6993 30.8736 39.7442 30.4166 39.6475 cv30.148 39.5918 30.0738 39.5831 29.9751 39.5596 cv29.9419 39.3409 29.7378 38.1221 29.7046 37.917 cv29.8453 37.8379 29.8335 37.8467 30.1236 37.6876 cv30.4058 37.5313 30.6363 37.418 30.7105 37.7666 cv30.7291 37.8506 30.7291 37.8702 30.7359 37.9151 cv30.8394 37.9932 31.0425 37.9454 31.0953 37.8584 cv31.0503 37.5733 30.9625 36.8497 30.8843 35.9727 cv30.771 35.8741 30.5679 35.9327 30.5113 35.9913 cv30.5093 36.1016 30.5152 36.1358 30.5181 36.2247 cv30.5318 36.586 30.0308 36.8077 29.858 36.9073 cv29.5982 37.0596 26.7525 38.6446 26.6861 38.6827 cv26.6197 38.7237 26.6324 38.754 26.6509 38.7881 cv26.6685 38.8223 26.9195 39.3799 26.9605 39.461 cv27.0113 39.4717 27.1822 39.4542 27.4058 39.503 cv28.2105 39.6788 29.8697 40.046 30.3873 40.1573 cv31.0826 40.3077 31.1451 40.4112 31.2359 40.5977 cv31.2798 40.6836 31.2935 40.7618 31.3072 40.794 cv31.4136 40.8584 31.6236 40.7969 31.6597 40.6973 cv31.5308 40.167 31.3501 39.3487 31.3169 39.1661 cvcp27.7505 39.0967 mo27.7505 39.0967 27.7193 39.0889 27.7154 39.0635 cv27.7105 39.0333 27.7369 39.0206 27.7369 39.0206 cv29.3775 38.1006 li29.6041 39.4854 li27.7505 39.0967 li0 0 0 0 cmykf37.3365 16.6377 mo37.3404 16.4737 37.1539 16.3868 37.0845 16.3829 cv37.0376 16.4249 37.0464 16.4219 36.9664 16.4903 cv36.7134 16.709 36.606 16.6417 36.4029 16.2217 cv36.2828 15.9747 36.2437 15.9131 36.2017 15.8184 cv36.3531 15.6573 37.191 14.751 37.3316 14.5977 cv37.483 14.6602 37.4673 14.6583 37.771 14.7891 cv38.065 14.9131 38.2984 15.0303 38.0699 15.2999 cv38.0132 15.3682 37.9976 15.379 37.9673 15.4122 cv37.9683 15.5411 38.1304 15.6739 38.231 15.6592 cv38.4292 15.4512 38.9468 14.9376 39.5923 14.336 cv39.6011 14.1856 39.4273 14.0635 39.3492 14.0528 cv39.2593 14.1211 39.2369 14.1456 39.1675 14.2032 cv38.8912 14.4346 38.4107 14.1758 38.2222 14.0977 cv37.9458 13.9883 34.9468 12.7129 34.8746 12.6846 cv34.8042 12.6553 34.7867 12.6846 34.772 12.7217 cv34.7564 12.7579 34.4683 13.2969 34.4302 13.379 cv34.4537 13.4239 34.5728 13.5479 34.6695 13.7549 cv35.025 14.4991 35.7525 16.0362 35.982 16.5127 cv36.2916 17.1524 36.2466 17.2647 36.1568 17.4532 cv36.1128 17.5391 36.0601 17.5958 36.0445 17.628 cv36.0582 17.75 36.2339 17.8809 36.3384 17.8467 cv36.6763 17.4229 37.2105 16.7774 37.3365 16.6377 cvcp35.2027 13.7784 mo35.2027 13.7784 35.188 13.751 35.2076 13.7295 cv35.2271 13.709 35.2544 13.7208 35.2544 13.7208 cv36.9878 14.4532 li36.0337 15.4815 li35.2027 13.7784 li0 0 0 0 cmykf78.0621 50.5918 mo78.064 50.7549 78.2525 50.8331 78.3238 50.837 cv78.3687 50.793 78.3619 50.795 78.438 50.7247 cv78.6812 50.4952 78.7896 50.5557 79.0113 50.9698 cv79.1402 51.211 79.1841 51.2715 79.2291 51.3643 cv79.0835 51.5293 78.2847 52.4698 78.15 52.627 cv77.9976 52.5743 78.0123 52.5743 77.7037 52.4581 cv77.4029 52.3438 77.1666 52.2364 77.3843 51.9571 cv77.439 51.8887 77.4517 51.879 77.483 51.8428 cv77.4752 51.712 77.3082 51.5889 77.2085 51.6036 cv77.0181 51.8204 76.522 52.3565 75.9039 52.9825 cv75.899 53.1338 76.0787 53.2491 76.1578 53.2569 cv76.2447 53.1846 76.2652 53.1592 76.3326 53.0987 cv76.6002 52.8565 77.0904 53.0948 77.2798 53.1641 cv77.563 53.2647 80.6089 54.4131 80.6832 54.4405 cv80.7554 54.4668 80.7701 54.4366 80.7847 54.4004 cv80.7984 54.3643 81.022 53.8594 81.0494 53.753 cv80.939 53.5479 79.7388 51.2598 79.4205 50.6622 cv79.0855 50.0352 79.1255 49.921 79.2085 49.7295 cv79.2486 49.6416 79.2964 49.5801 79.3101 49.5508 cv79.2925 49.4297 79.1138 49.3057 79.0113 49.3438 cv78.689 49.7823 78.1802 50.4473 78.0621 50.5918 cvcp80.3121 53.3604 mo80.3121 53.3604 80.3257 53.3877 80.3082 53.4092 cv80.2896 53.4327 80.2623 53.419 80.2623 53.419 cv78.4996 52.7618 li79.4087 51.6915 li80.3121 53.3604 li0 0 0 0 cmykf34.1656 46.919 mo34.1421 47.0645 33.9918 47.1475 33.8589 47.1036 cv33.8375 47.0665 33.7779 46.9659 33.7418 46.9131 cv33.5679 46.6514 33.3277 46.6416 32.7359 46.9551 cv32.2056 47.2383 31.5787 47.5665 31.146 47.7911 cv30.7154 48.0166 30.3765 48.1436 30.5308 48.5333 cv30.5552 48.5938 30.5777 48.6426 30.6168 48.7266 cv30.5699 48.8292 30.4244 48.9288 30.3042 48.9053 cv30.1763 48.6944 29.858 48.0752 29.7017 47.7569 cv29.6744 47.7002 29.6402 47.6446 29.5875 47.586 cv29.6714 47.5059 29.7173 47.4317 29.8287 47.1973 cv29.8736 47.1036 31.231 44.1202 31.3814 43.7579 cv31.0679 43.8721 29.9292 44.2627 29.6246 44.3809 cv29.0386 44.6065 28.8121 44.6905 28.94 45.128 cv28.9566 45.1827 28.9947 45.3038 29.0123 45.3702 cv28.9468 45.4766 28.7916 45.543 28.6792 45.4952 cv28.4546 44.9249 28.1812 44.1954 28.0445 43.7637 cv28.0777 43.6495 28.2896 43.584 28.3824 43.6485 cv28.4039 43.7042 28.4351 43.7842 28.4595 43.835 cv28.6011 44.1338 28.7681 44.1944 29.4625 43.9454 cv29.855 43.8038 31.3423 43.296 32.0181 43.0381 cv32.1363 42.9971 32.2584 42.9239 32.3335 42.8555 cv32.4117 42.877 32.5621 43.0059 32.606 43.1143 cv32.3277 43.7305 30.6812 47.3448 30.5835 47.5713 cv30.8599 47.4297 32.1265 46.7696 32.5298 46.5381 cv33.1334 46.1944 33.2418 46.042 33.1343 45.7422 cv33.0962 45.6338 33.0748 45.5958 33.0513 45.5391 cv33.1109 45.4268 33.2486 45.3506 33.3843 45.3985 cv33.5572 45.7715 34.022 46.6592 34.1656 46.919 cv0 0 0 0 cmykf30.2896 20.0704 mo31.0552 20.4454 32.3365 21.1045 32.6509 21.2667 cv33.2339 21.5704 33.4087 21.586 33.6431 21.2774 cv33.6841 21.2227 33.7388 21.1465 33.7837 21.0762 cv33.8707 21.0538 34.0523 21.1622 34.0914 21.2637 cv33.773 21.8409 33.4341 22.5157 33.1832 23.0831 cv33.0787 23.0967 32.899 23.0167 32.8492 22.9356 cv32.8775 22.8643 32.9029 22.7989 32.9175 22.753 cv33.0259 22.3965 32.9449 22.2833 32.2896 21.9639 cv31.8501 21.7481 30.9751 21.3243 30.6841 21.1807 cv30.0191 20.8565 29.9087 20.8292 29.7105 21.1641 cv29.6675 21.2364 29.65 21.2647 29.6138 21.3282 cv29.5142 21.3711 29.316 21.2491 29.2818 21.1729 cv29.7896 20.0723 30.1011 19.5274 30.1958 19.3516 cv30.2916 19.1758 30.4078 18.9786 30.5113 18.8204 cv30.8082 18.3721 31.3785 17.8096 32.2095 18.3223 cv32.7486 18.6553 32.8111 19.1397 32.7134 19.6456 cv33.1597 19.5977 33.7115 19.5508 34.191 19.4268 cv34.6714 19.3028 34.8179 19.2637 35.024 19.0196 cv35.0455 18.9942 35.1011 18.9229 35.1558 18.8418 cv35.2584 18.8624 35.4097 18.9395 35.4585 19.0411 cv35.4029 19.1231 35.0728 19.6006 34.7994 20.0528 cv34.482 20.1133 32.6871 20.4493 32.3208 20.5225 cv32.2056 20.3379 li32.314 20.1172 32.4048 19.7911 32.2496 19.545 cv32.0855 19.2803 31.9068 19.1915 31.7681 19.1114 cv31.6285 19.0303 31.3658 18.9444 31.1119 19.0167 cv30.8599 19.0879 30.6744 19.3155 30.5855 19.459 cv30.4966 19.6045 30.4224 19.7452 30.3736 19.8575 cv30.3257 19.9708 30.3062 20.0293 30.2896 20.0704 cv0 0 0 0 cmykf46.3609 52.4493 mo46.2593 52.4659 46.2242 52.5889 46.2291 52.6338 cv46.2603 52.6573 46.2574 52.6534 46.3091 52.6963 cv46.4722 52.8243 46.4244 52.8887 46.19 53.0626 cv46.0513 53.1641 46.0084 53.2002 45.9576 53.2364 cv45.8404 53.1622 45.2164 52.7706 45.107 52.6993 cv45.1275 52.6016 45.1314 52.5997 45.1763 52.3975 cv45.2193 52.2042 45.2505 52.0381 45.4439 52.1465 cv45.4908 52.1729 45.5015 52.1827 45.524 52.1963 cv45.6041 52.1827 45.6666 52.0665 45.649 52.0059 cv45.4693 51.8887 45.1304 51.6622 44.6851 51.3399 cv44.5914 51.3497 44.5357 51.4717 44.5386 51.5235 cv44.5884 51.5704 44.607 51.5801 44.6519 51.6172 cv44.8267 51.7618 44.7339 52.0938 44.7095 52.2178 cv44.6714 52.4034 44.2349 54.3985 44.2271 54.4444 cv44.2173 54.4903 44.2369 54.4991 44.2613 54.503 cv44.2847 54.5108 44.5582 54.5655 44.6285 54.5733 cv44.7457 54.4864 46.0591 53.5401 46.4019 53.2891 cv46.7603 53.0254 46.855 53.0508 46.98 53.085 cv47.0376 53.1016 47.0806 53.128 47.1011 53.1319 cv47.1753 53.1133 47.2339 52.9883 47.2027 52.9258 cv46.9019 52.7676 46.5054 52.5372 46.3609 52.4493 cvcp44.7984 54.0918 mo45.0533 52.9258 li45.7632 53.375 li44.7984 54.0918 li0 0 0 0 cmykf57.9517 16.1163 mo57.315 15.6026 56.6871 15.379 56.0826 15.4581 cv54.398 15.6836 52.8277 18.3331 51.9703 22.5958 cv51.4205 22.7168 51.0103 23.209 51.0152 23.7959 cv51.0181 24.2364 51.2564 24.6163 51.607 24.8301 cv51.4898 25.7608 51.4 26.7461 51.3492 27.7813 cv51.5542 27.7647 51.7671 27.7549 51.9751 27.7383 cv52.0845 26.7598 52.2271 25.8448 52.396 24.9913 cv52.9986 24.9141 53.4634 24.4014 53.4595 23.7774 cv53.4566 23.3663 53.2486 23.003 52.9351 22.7872 cv53.7847 19.9376 54.9908 18.211 56.2671 18.0333 cv56.8394 17.9512 57.4371 18.1729 58.0425 18.6876 cv59.7105 20.1084 61.1744 23.4366 62.1392 27.7002 cv62.357 27.7149 62.5787 27.7295 62.7945 27.7471 cv61.8462 22.2422 60.0503 17.8165 57.9517 16.1163 cv0 0 0 0 cmykf65.8355 31.8916 mo65.6744 30.835 62.6763 30.3584 58.8668 30.7042 cv57.7466 27.1143 56.1929 24.5928 55.1685 24.8643 cv54.1841 25.1241 54.0113 27.8926 54.6597 31.3897 cv54.2349 31.4932 53.8296 31.6036 53.4449 31.7178 cv53.4166 31.6807 53.3882 31.6426 53.3531 31.6094 cv52.9712 31.2461 52.3687 31.2569 52.0044 31.6368 cv51.8189 31.8282 51.732 32.0782 51.7388 32.3252 cv50.357 32.9151 49.5445 33.5713 49.6324 34.1583 cv49.7769 35.1319 52.3267 35.6163 55.6988 35.418 cv56.8013 38.7149 58.2505 40.9727 59.2203 40.7159 cv59.7339 40.5801 60.025 39.7657 60.0962 38.5245 cv60.2437 38.4981 60.3873 38.4395 60.5123 38.3389 cv60.9253 38.0118 60.9937 37.4092 60.6646 36.9991 cv60.5093 36.8038 60.2916 36.6866 60.0621 36.6524 cv60.0171 36.0967 59.9478 35.5 59.8482 34.8721 cv63.4205 34.1495 65.9878 32.919 65.8355 31.8916 cvcp64.0982 32.169 mo64.2144 32.9532 62.397 33.8819 59.7847 34.4834 cv59.6587 33.7627 59.4986 33.0069 59.3003 32.2305 cv59.2066 31.8633 59.105 31.5059 59.0015 31.1534 cv61.8248 30.9698 63.9771 31.3624 64.0982 32.169 cvcp55.6402 26.5586 mo56.4205 26.3526 57.5767 28.127 58.4712 30.7422 cv58.1236 30.7793 57.772 30.8194 57.4126 30.8711 cv56.6089 30.9825 55.8404 31.1241 55.1158 31.2842 cv54.7154 28.7188 54.8912 26.7579 55.6402 26.5586 cvcp50.8414 34.0293 mo50.7857 33.6495 51.1851 33.2344 51.9078 32.8399 cv51.9429 32.8907 51.9849 32.9405 52.0318 32.9854 cv52.4126 33.3487 53.0152 33.337 53.3785 32.9571 cv53.5982 32.7295 53.6783 32.421 53.6285 32.1329 cv53.9752 32.0215 54.3453 31.9112 54.7398 31.8145 cv54.8404 32.3135 54.9556 32.8262 55.0884 33.3467 cv55.2408 33.9444 55.4068 34.5166 55.5835 35.0674 cv52.9361 35.1954 50.9566 34.8028 50.8414 34.0293 cvcp55.5738 33.502 mo55.4156 32.8829 55.2886 32.2833 55.1861 31.7061 cv55.8199 31.5616 56.4976 31.4346 57.2076 31.336 cv57.69 31.2676 58.1587 31.2178 58.6168 31.1817 cv58.7603 31.6299 58.896 32.0997 59.0201 32.585 cv59.1949 33.2666 59.3335 33.9288 59.439 34.5596 cv58.897 34.6749 58.3267 34.7793 57.732 34.8624 cv57.1431 34.9434 56.5718 35.003 56.023 35.042 cv55.8628 34.5499 55.7105 34.0372 55.5738 33.502 cvcp58.9556 39.5293 mo58.1792 39.7325 57.0308 37.9795 56.1363 35.3848 cv56.7554 35.337 57.3951 35.2735 58.0533 35.1807 cv58.5503 35.1124 59.0308 35.0293 59.4986 34.9415 cv59.5904 35.5606 59.649 36.1436 59.6734 36.6729 cv59.5513 36.7051 59.4322 36.7608 59.3257 36.8458 cv58.9156 37.1729 58.8462 37.7735 59.1734 38.1866 cv59.2837 38.3252 59.4283 38.4229 59.5826 38.4815 cv59.4683 39.0713 59.2603 39.4473 58.9556 39.5293 cv0 0 0 0 cmykf75.0943 32.3311 mo75.0279 32.1426 74.9029 31.9473 74.7105 31.752 cv73.7085 30.7471 71.3218 29.8975 68.1597 29.3145 cv68.1119 29.0674 67.9927 28.8321 67.7935 28.6485 cv67.3052 28.1973 66.5406 28.2266 66.0884 28.7188 cv66.0201 28.795 65.9683 28.877 65.9195 28.9629 cv65.2574 28.877 64.5738 28.7999 63.8707 28.7354 cv63.9029 28.9376 63.9273 29.1465 63.9595 29.3536 cv64.5953 29.4493 65.2027 29.5567 65.7847 29.6749 cv65.8169 29.9532 65.94 30.2208 66.1607 30.4249 cv66.6539 30.875 67.4136 30.8438 67.8658 30.3506 cv67.9107 30.3028 67.9449 30.253 67.98 30.2022 cv69.6451 30.6788 70.8921 31.2481 71.5474 31.8848 cv71.7408 32.0762 71.8648 32.2627 71.9312 32.4473 cv71.9615 32.5342 71.9683 32.6182 71.9703 32.7344 cv71.9742 32.8584 71.9634 32.8946 71.9419 32.9786 cv71.5738 34.1407 68.8267 35.3614 64.4996 36.168 cv64.5015 36.3292 64.5054 36.4932 64.5064 36.6563 cv70.6304 35.9073 74.6558 34.3497 75.1041 32.8829 cv75.1265 32.7969 75.1587 32.7129 75.1568 32.6094 cv75.1548 32.5069 75.1343 32.421 75.0943 32.3311 cv0 0 0 0 cmykf50.732 36.1094 mo49.2134 35.8799 47.8443 35.5948 46.6939 35.2627 cv46.3179 35.1299 45.4097 34.8086 44.8238 34.6016 cv44.1851 34.3184 43.6822 34.0147 43.3404 33.6924 cv43.0435 33.4122 42.897 33.1338 42.9 32.8711 cv42.9205 31.6866 45.7125 30.3956 50.3003 29.5567 cv50.3003 29.3467 50.2984 29.1368 50.3003 28.9288 cv43.8326 29.7178 39.7134 31.421 39.6919 32.9532 cv39.6871 33.2344 39.8355 33.5274 40.1314 33.8272 cv40.4742 34.169 40.9791 34.4932 41.6177 34.7969 cv42.1509 35.0499 42.7779 35.2872 43.4869 35.5069 cv45.4224 36.1016 47.9625 36.5596 50.8277 36.8311 cv50.7935 36.5938 50.7642 36.3506 50.732 36.1094 cv0 0 0 0 cmykf56.5201 33.9903 mo56.0406 33.5274 56.025 32.7647 56.4859 32.2833 cv56.9488 31.8028 57.7115 31.7862 58.1919 32.2481 cv58.6734 32.711 58.689 33.4737 58.2271 33.9561 cv57.7652 34.4346 57.0025 34.4532 56.5201 33.9903 cv0 0 0 0 cmykf62.7925 37.8506 mo62.6597 39.129 62.4752 40.3096 62.2447 41.375 cv62.0845 42.0323 61.8443 42.9737 61.6529 43.584 cv60.815 46.1182 59.6753 47.628 58.4732 47.7706 cv58.4703 47.7686 li57.8882 47.8389 57.2769 47.6026 56.6626 47.0645 cv54.98 45.5918 53.5074 42.1934 52.5591 37.8721 cv52.3394 37.8545 52.1168 37.8409 51.9009 37.8223 cv52.8042 43.5079 54.6343 48.1436 56.7955 49.9297 cv57.4458 50.4698 58.0874 50.7061 58.7027 50.6358 cv58.7056 50.6368 li59.9752 50.4913 61.1783 48.9834 62.063 46.4493 cv62.2955 45.7823 62.5064 45.045 62.69 44.2383 cv63.1099 42.4043 63.3921 40.2374 63.4781 37.8008 cv63.2515 37.8204 63.0191 37.8321 62.7925 37.8506 cv0 0 0 0 cmykf%ADOBeginClientInjection: EndPageContent "AI10"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI10"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer%ADOBeginClientInjection: PageTrailer Start "AI10"%ADOEndClientInjection: PageTrailer Start "AI10"Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%ADOBeginClientInjection: PageTrailer End "AI10"%ADOEndClientInjection: PageTrailer End "AI10"%%Trailer%ADOBeginClientInjection: DocumentTrailer Start "AI10"%ADOEndClientInjection: DocumentTrailer Start "AI10"Adobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%ADOBeginClientInjection: DocumentTrailer End "AI10"%ADOEndClientInjection: DocumentTrailer End "AI10"%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 10.0%%For: (IT- afdelingen) (K\677benhavns Universitet)%%Title: (BM_NAT_cmyk.eps)%%CreationDate: 06/09/05 15:21%AI9_DataStream%Gb"-6l&K)lFX?keI#%0O!6M^8(%WP,0#1/DDI&U)C(7TT_[rbW>%3s730^OoqAX4+o6j1G.D"K1NKU:s=.Y3]-cWiDm(N+RIWYPb%_lIFr?iB6comco+PfbuId8)(\;iTnTO+-^cT)\ZTh8diHV(aA?]S\;\olReqENBfK.b'bbYt)!95J4XUp&;S4YA`md]t8Rgiq;&M%5<I^!jlrhpn*aSqGl@*/lPE?8s6\gnhgB\?k/Hr(BBsuL5J19uIWg%D9#%ubIsUnVocNZ%nD`m5],0]B%t@n]nLC*H.f979+8NNU%r8I,$5(3-Pe[5;q55m?R?o*92o')e7<\8/OQ@JD/T>,X@iSFC?:Z&p9laQi^F1:W;]Y5VmQ]3*^laoAG7A$\#`bs/'ljlm`^USX]%qX)J(mn`V6=B<%_pMRBSFV0'<r:="!00VM1qegQ+h(ptd*WFFc^n6*tp\t,kIs"[pDnl+en,NB![JKPh<q*Fo\E`+]hKm^-rmae/%rpJ_uJ,?9R5!IM#:;?[_b?PP(Wlb;=pn*%apS[3@KBKFFr<jZQ*N"#Zk3gJmiN!,3nmh=SUUu#(qVfD?IDG+FeGA_6:JU8L?bHL0%NeQ2%>kJ'hO'b'\@/oiIM#X"fqtTVHdj^mr?h<)tO78%&-X/Qq])J.'o$d00s2Sdu])B*^0AjEeqYlM]4g2E0VY[Chp\AGd\]0e.%`P-)#V`O-XKW.2-Qb_GOcgUl3B;]*!]m]nFrTeZW<^2'-r)PW5iS4+AH2bS1d')G1WRl;3-!lQcL]7;=%kmA-rpJ>.pT*<mTW&9I%nbUqpMmXUe>+WBOMWo*5:&MIAq!HP>J%Bufeb.o(L>cdGWW(@"5J6pfl!Nl8C+eHK^NstqlF3tsJaJJ5S`cO/WTJJ0X!ZtK)C_;A%L2cMql!jQq,q;1M?#O'poA,kC^O#eT:X<DH9HD,eQ2g@0dl2JhIslP<rb"HdVif0%Nct9`n6^[Mg:^,&e,&*#a(]2nr8$,jcd"&6%@sIl*``M3[s)\3I?a`#[rVO3.=uD@J4hH"<&u2g7erQucS:@p^`/E5sdbg(Wq3Ucc%r_)_r;@/@I(c+X6b;"@i0S@'Uso";Ma-[d%k\$e8s6eF<V_@M1Sc3_I:d96p6f;_VWoVicIt$nE+$=i>jRJF(:Mub/5C*$74rI/mPP1e9.8TMuoHZU,O.SO`r:n\"S&a-A+$Q9W%a5d0/4g'jhj8:l"NfV)Q-]]<5HM$F`dIj8iO635-i),!R*n<dB;1=`N`CJnLaj&k87lN@cf/F4Yk0:F#2smL!Pad&aDW4C#IWGD^%qU+u\p%A!qlZkXrqfTNRfB#&#VsARJ*^"i@nF=Cd%rWLq5CE6F4rb+1_tL;u/._?ioIrH;o>uAB+3g:#4Whs0a6^.W3m5`'brEUc%1*2KHj(;PWLMO2V#G[><l6mm<1u\f>8UoM;op^Ed+84AXn%JDJ9@#cofL(#6*k+Z,VHpZdD77i<CTY%nE_A!mn=VtEO6`Qe;m5N)%[CA\3MlX#JYND9gXJ%a*O3=;=;m+<]1<V)ZZr0OG\YKj2aA;Ber$^I`lhiH_4<ERT>HYN<jcFN,+[&DXe"_#KY1(9FdmuX0<)Z@K%V%cja:ZCF0.,Mo.pb9uQ@UBB&3`omP.E32GKJej"NCC>eX2DgNk0Ut[=BK^$\CTjCq]MDXoS;bACJJ8se[<U&Ol&:rd2t!&lZWl6%IQROTr4`/RrCA_c:$OkpIsA!mj.DsY^\_q1SC]%"pZqjMT)X"\IX-8)&GU@1hS[re4J1>o'D<[C9@J%bQeUt)J,4kIH2V=<0AjJ<%Yl=U%5Q7j/ei`^^`O++egCNcP][#Y@lYq/sqUO>5GAi!%jhFC$45E#In`'Au]\iY_q5p:emH`@W^-Uf:]KbAFq;s'&/%m!ZalU_G%Ma-2WD-;i]2eN!i;'#3=r[A$NF-lon[WC^e&8U/&ji*Bc^\Rb.YQ+P9Il[Jo_2nWLP2a7SjRg\Mf+E9(D\'SXc1<6&h<d_LkuYn>%q7$%GYE-fupCGONgctaKrUTuj+9'lDrr#ek^Gu2`^P((BL&TQ)+(2tae$B;:I.q_?me!t!:>`/)Y5beYl\j'5qlAWLh:!05d^Wd3%^AHrCcO%^,d^oaVT\nQHXoGj85P@iuJG;CsZ37B2\AX2!G29i^c>qb6T2tdRl]3u<<;TbXrq3c#GjmGrb'eJ^FN"18s3)m@]0?%2%BKt`o54F%[m56-gmd9<NDgq]N?XN7nruD6Q\$(7g`om;m05(7JrWE.`C;D"L^;%-H^@[HYm-!\!=7guApMXs&^)sBNrh#5)J"X^r%hse0niUlr\+7K'mQL^jgY'oI"h74$pHMmN\Sai&5Ish4Sq7E!V5.El'5QA,/Ym0L4h5b2WNb\4P\P:sFs*fT-Y&$hoV5@T./^_VB%^;#$bqTZuL*luf3cVFN8o^/-o<K#H,lgn3D&39^O!uLkVL=\*9^qt-gc(C=L[,=`Or5->@3o&HOUSmRQY+tWYrVP;Cn_<Y>lpae.%re8*?.:]>uhu%m#H)^6'o^qPJ5JDUCp=\\r\pHQQ]mKI:[4QmIPCIn*GPCAQTDdf.%sN=61<B7gUZpQa^\["["9.Slk6AlN5,Q)m%MncHtr7/D<CBhPbrQBNCo4OtF93p.jiUkCf=quAQ%J8<Ga-RlSE:_[+H&4Z@r;,i\+8XNCpMW7.5Q1HC]=!fos)4;rc<@cJ=7;FM%`SF^G?S:m=&FY0PhrISuqjX1jH%,E`l^t>fob$iel+;H:#IN<Q2c$&k=T0'F4$EN2rq4[A4ga23\en3B.W'NTb?I1(e*iW&Z,Yda%:L?54Fo,l#hCJ0n_tt7r?eq:0hu1UmYBt:1]<D8%mc.+=ki(84cekh/L;<=$CSLb6-E/YbGk:Xsh;-hnDnQ)Kmd1rE^NZ;F',q_<%_E@eC&$&(Ts5il)/=&L_52SJMqt@"<>^cF;],1M-l2.l#^O:P-oEBoBGPo(rrp[8[c$+)Uroippb<Q%#koX9fiN;uQCCkDk0,aK:%V[Zg]f^&;+rd8Wn^Nt>-o$d23m(Cs=\:o@DR#ZTMermEd?L8g/gJ;0sQH&?2?a.4kCi,jhl&`Te,h2!+Xu2hdh9,/pIsg`q4pu_[%\$+;0mm$+9o+U$Zk5AKmfkUG2$pFWSh6]Bt&aSD.%hJ[%_g:^F:P@0"'18*5GZA3hVp`W9;D-G_jTX5PePZP!.?/N$6Wru*.9E:2%;\&K#L@alC%rs.$BnUk_,gWMpqaE)LAA;mp40[DAHEHd\<4'pCa3+tNp;,.L"$8Gf=7kaTh*1Vc#Cl?WeRe*Sj.`4-E#%(Hq"+Y]%iG*DkY$*7>p[t,S>Luegj_F&=q2DE+oXq!RfIrg7nLF6qO*ZiDpUfo(#<&bp*Vb@p:MHk2;SRJ27TR'p9ug2q0A/42nnnC"Y\)%l%&';.`je_IMn'81Cjh>?mJUL0BXkK(=[MkT$467<^Q=c-RQa1pZF:V*7B4MHc=>G>-j*b<L<SBt2kF-q.[)V6Qh[TI3K[DF,E.QOs%Wbh`7g%[;Qf..WFqKk\*R\a<62U9o>7p?L7[?Y)uqo)M/l4j(`:$e?(cgSKVkea)$TChEXX2f_a@)?m_:]L3B5@GbUe&++;.;I:f%f)P&>]fE86Mk8PEm22N+XjpD);P%pO=0jJiWg%g0HANGrdX]ojSF$AN4^Ebt3OUG!,Pu>Fd2Q;jC!E[,;,N>;Wmk'&<i#i`!H-?]%U"sHbo>ubr>(5BoCX$5:?IHOKG[Mt,XYDG5,,J_bX\jpj@U-!)!EpU%`J\C&/36jR+;aA6N3+2Q;EgX%>.lk1\pW7%[//=Kj/MXJ%m$^-63.,sWgI7`;X"Mnd\.T<'@`5Y=6D'B][("]VcX\5'FYd<4C%_:*C[kZY"lf9Yeo.Wt_5n52*Aq:(jtbuq<DGq4LTNU%[9J*_%l'(SJrMs_nF6hlh::iGg#47dD@IBu>p=d:^BHhc\(0^.0%00]RA*,Se=jQQl'qLKc3j0!%QYQ[<rUmS'RWO$r[#Z$D]l1N2nEL6?%jSi;Sf,:o<jn0cKY8quWJhMi&3.qH/RYA\B)Nbl@eH));&.)ns7lMt8lT-PQKphU56KRHHFr]PD\oo6BE\bkhi3%i]l'Sgcacmss%<?#(Z9=U\uP#E:c'^S-*!Y.sJ,>Y[.?FAM;m^_I)OYWrZX`L;D;=Q,GO&#Ig.g/1GPlk.r?RM#`,Sd@qK+cajSn\T'!YpEbRT_;G%3j5mTL?3`]bugunC*Y_\-'oR_"m`q8>Z%u3Y=^do()#,sp#S!qo6M>gP>YUBBb5THa]MN7[hoI7FVki:CAFm/Pi6Xu7lQ1*+u3H,%7b?.BVYH;pp*e/3eBFN=\DO5B6So29E(@lF?#6Y4We'+Q_orB-]FiQ+CDr-meLP^$lH-?M_5`?r[KSip"-,,Z4_jhh=Z%p3/]HgL%SU)bo7KH%KF"E$>@SpL!efZfpBOJ(k@?@sKKI,<Mgh=r'/S[Of/lm#`"R]3jlp\*b/(pPADr'6NmHoZ4qXqt,Y;T]Xo[h\*DjOMp%ldtSYZuO7]3V9]bQ8DWWa'_muBOHogJ?;NIVnbX]dO]pu"OS)X>N-_9T(Y)m(Y=<`enX>G]jWf$WTsd5WN2o%%P=8"lc3-QZ.5/W%V_jlojD&3ld]73oF,DSOETdJ)-!!4;6mT-ISW=e,"UI&bKre4X]3JQURTS[k"!huR>I'ub24:c_.1j;!)/Y00[rigmiqOEn+hMJ5%ka$qITI*(p:CE#1h-&?I(ok_92IHis;bQub0bA5t3^)!@K`lWK/P/csDBWKo]l.>IT=gaf,O)2G!F>.uS#2:Tm*qnsR`kAoeHp4I%2a5c=X@B4Pfr't->Jbp^'>JIsSNO+m;GteX3JV>Y6VM'X_eUrROV2tjjO^.2FCr4)%\+ITp=(pH$`fjOme):P3B^ZH1`kP`OJW\A%rDGQ)e-f8$F,?\UnURQFb%SZC@&_aNpU"6g^O!E0WG12*C<DONDlB3Y#>a=p]WbSgKY>.u^9k%1/F.]\Wc\b:@18`tA$qm0/f"q=%3?W=D12=7CA0Q;9fgOBqe;^+YKPL3JF%QXN8O+^r5b6a"l=k%Y9A%Wjgd?VQdIbqWZRE9uBiD"bWSK1;c$3ZtD^(gY."RYK;9t]]%,@UcB&=FhOPr2F.YS!P'0;Jg?lDpu;Ua"5hd2E.h$5I=[lYp9X5V*#3@r3AH$Q,QFLl"9HB8!AX8i9\`40Ab*hodE;n>.V!$MH-[%#=b/8Q&UhC)8G5aM[W`$:h3ulf0+f^I?(H_XX160[=,PaNBR,,6)WnMdKS\KT%jUi\4878k,q6[l3iM5Q-6@5$@]%<aP,n-Gq*LG%,'Qd=@>;u<dh6ClEbZfHZYQ!a1sZ\LMJ^W(fjsl7S^!\:+5<rF*KYi1?fe;Z.]Ym"'fll]M03R/]'_H9Ml1RYYSdIGo7p*f8NmgJ%=bS]$Oa)VlfTMeg)`?0iV<mZsF%)EgmIMhF3auFD8,LFT]X45g?$e,:,5&fAN+'Sd"h#Za%;*G^"ql]gitAqm&1fuh$Cs/onr"'8%90c\%pQ6HH`dI)m=lh,..aBB@QO@MB6+3^R/ABn[m]L!M;k87<rgWQ,86e$oV`p3B8V*a,5K"RWM/o,=!u_2V$:&(ilUQrCDN3?"%8@XnSK]M8bAcYOUep#W;PledJWW=sm'l1]%<=!5*./a7!et@$r@FdrO@nogZ#WVlj!K3`l;"W!.mr5g[ZKnJMK=X=+!(c2c`)%6O%@u1sPL2lTPQo+a%oa<%LiFrg.L2gt<1W.#UZEU/^lZJAbJRkqIjILW@g]03R+_6k]g.PjsBPM-O6&6;mqB>RDVonNa<;JRWWUCK<%;oma:kHXdL*,lAflWlTu&pRE'_%*ZFi.eG,p5E=5X'S;=KA/(=*^5k^]%W4&k2*e0-H8a9XRf=]1r:F'QX-c+0<FA2iAZOq'=JRM%RC.iCT/%][H\Rc8o`U4/:[6L^Lm1;<$(P9lPMQMs-Q7lq%oID$8e:r++r'6kkbKKTTb/km*Gd4'rWe&$"Tf2g,>n=(3YnY/!fL$D%LJLA^!=%@:]JbU'Wp=@cL\(Bckp@f?#&5Ye81Uu7N#%/+'j;U)F<"0POnC@NI2`jO#/G,EQG_'$<!h"FM11;'Cg8MMB6?3POr%/l%4L3aUW!Pf)lbU8&L\<FqgS>[1M!B+h[V6n5\D9.NTbOGG-"0(?)_RG2*pOGRM%i,$QR&n!L!"Il/EFt*nl)Go@UKJ]E*od>DKtB2%<2P*OUD5u#5;i^?Phr:W,f\7q;3h4KLXOPVOB(D:Qql!<A[(Q2EC)\gQ=0+b_G(bPZ;+(<fU[T3\`\%XmK(YWAn)73/taIi^#TLB%fYDgajFogjT&PlPT&:]o\hC/JYe"SXqN]3E=rSr5fVRr;o-+UGkB5c0kTUBbCQqRZ7\Cp%8rs*0$V_o^`[)L%@,\tM>F7o0=iG8O%ipAA-2YSUFkNHro'YSF%gPo"^eqWp1)iV;%X`B'+2/Q-pne<Ln=k5"@YUj<BU_?nb\;J])UiM[Ad)+Ad-b_3).U7eah$PIq<GYIe%ll?M<Mm*R:*%FgN(S$4FUpI<,EGSQc/S`cr&fU6*El4m4ekm5t$<f[D0l1'QqgCnVg8$1;(+c#7aEh%O@]cp]eki_/o9PsaQA.kI%M*&$-oK@NF2PgHOQj-uI9=2O4B0AX/@9&],7]#GLO;d+"o9!L*bIcNI>m>3d?2!B[99]iNcQ>)d:`$55X-bJq)7#+1\)si+BHL0`%gp3N?[)VTXC=Aj7Krlmm3on4`c#O_P(04kUeKfsVk2t)K_eSqE:u0Q!8T>/7'omQm29h>fh)C4ofc0j7Bq+fGN7IOlkrS^b(UW7k%f,X!]C&NWp-/2l4_#i2keWOGoG1qPJNHc2(#92JdXKjrchRZQi7e23]@BHpWA^'?ET>-Jj=u_XDVK!tgmg?Gk'X&N6-s%.@+W/%'%_ifQg?`'<@_XEKD+066/QCBa2^!$*lNJl.A\&^mpC=5q:f$\J_=`U!ueB4W+2AU^DPgNrg)%<jYZJd5Vj^[mWYme@Nh''E_JmCu!%.6teYeSDtQX_'3A<n==ZdHKoU`'(ri%[M+g<?\D<G%EjAhNh'@5(LU?<[a@\(QrU<CItuH^o4qGg)ebD8AU&%eGI\&K<6<<0"4SE%)\G0?9-CAW]u07Y9ieIueQAB*W!WXe&WSrTXD2dqp3?\'+ffmmpl!u<*W^+`$X#ij-H_:]7Od7fc!;3F7WZg]GCY[O-.*oj?H_Rq%[8h$7mIbK0Am`^2^./Z6#!Kj%`q-!?T(9DjA8Qa/d=rrlcECHZ<&Bb,fE"/6-'adf/.4'N@S1@&&lr&R853Ce>rj2h<`>3dO\4e8%WEE>,g8U/RT[uGV=E9;BeJa-1aM'LVkX',0NE2>RQ*h4g_$Y(g3HG>Z;R58oI2G8Y,3i4AZWIK-r@2H>#WGtqn0perSniq8ClP+<%ZunXim\&rF<M=PZ$bsZL\N=j:h)[l"h'2\.V5+s?%u*gh+quJ,bnf#ieY01qh=j6.U4*u%Da:**BIu(,`K^gDKP_QbQLks0kp6Kl%X&D%foN$o*iD?ULI7]*sJT#>S#`k;ap+6I@@SUiL;S&V4k!3UK^u\kM@'Z!gEU1M"S7PAW2>F^I+R-/r0SY_;[nS)M,:Tm2#VlpF%%TCla)G\Nlmi/ST6eBh0=X%8fC$l&IbEB3G^['a6o.).&lJ"4b-lep!CWS>"@Tn)D'Hbhl];8/?^;%TM^NQllB1lTMdo)eISG,2$%VBlNaQ<i]a1'#ZVZ_"2E[OL&J"$rR4VNi;>^]oY+,[6XO:Lgh+'1Bgpgm3T@Z+gBV?(Eg,CW\BQln#8dr@kNOQFJE\Q3+[/ZQW<a%=kL/U=7<;eUCgX,j#1l+dSt+T_#;]ud*<u!^^UHjb*&b0ZP?Xjed9fW[]gCU>#e&?AjJ($4p0V;1M;rNYGp3P[T&_-S&\sq$>OkP%2Z+gN!2FJ51keaL]Y.k3Zq2pH7'Bs20'poubr)`nd.Gh3^LU^/Tr)Of/-M,N/G:Vf,.2X)8AVE\j`lRi?6JW04&a2U(gB87(mNcZ%JQ*G5hlqa]ek9E6X^+S77Xf?@m=iQ`lLAB?[Umlt!Xph6>89;M9+9<Zm&F^C^U]\?DlTe;n((`[qs-kY6(Kb6h)bE%/5)h<Y#2(Y%U?j+pAPjdt?!5(N55KPJHKrBYoTPR6V'We*HDt7qZh-0uW-)k\isj9rlrZ*UO/CZ\Wq<r9*SUZLdG.S^E\5sPTW;YLJg<F1ZjS"i%aKT3EZY-/:)J^R2_K(r..Rp?q5QWN#6iJ@phCae'+`k06AORM\kFgS_:oWe1*h'62;/Eb)V+2D,JeiKakSr4AdJ17>*Zq\&FF'r>%D!="GPf?E;p55rTec"2ee&j;O+,[J9'_MSOES!")MQM?RmRl<uThRQ!bAsg273V4Z=@gt36TYe&$@;e,;&ib\pB7B+"0umqFQS93%b#M]1G[\[JYRk[#fZ'@pC>G(4,hiG<7N9`]:dC>BSBhiea=KbNdiB@(h9o#uYVtcX00fe]HP-HUqmqafA'N)(/5SF+0iBlom.">,%GOlDCVouJrkc@/$jkA(uj-E-0%im"H(,]<Bkuo,_&"D[,TBDu,aRls;eFtLu_P&p[*,T2V?IdN2[Ed_oXL2?8k+kc0hm2;Tc2/ef%BE?MaPXpbP`U_e/g1,+_O,FtXLie^@ltMq&Z[6H<TN3Zg8UW;Xn:D\[hU0?O$s%3V'fO3._ji@):m5)^n](-F;]U5ea-).kDU\HQ%p+<@ZXS!(DESdX6[qW4O6`2SDg@VuWd_,VP6.M[ojHhSZAB617VX;d9cka0H1ecSaA&\as82b=OM\J)Hen0IY587d6#=&B6O]b.#%j#,^nCai;/SRqAdHWD?0YN+#=;fgI?,oL&5^.*P,&q3f]l3:],qca$3R%A'&B@rKU!DR<c)F,DA->t8sF/,1!E$2Z9!FWCK$#0uN%*O]2)KF^)tZo/fr8K@#8?T-!o"M_uRp@@;?ErH[k1eD2?f+K437!q.]--$U]ZsEF']Y-6bBh,$3RXBXM=c[T'4dT\iC\H,kd+'N`%Fe*lHP5Ig`&r3dLEV8CH-5E?>[6/'m6K9k)(']2ZR\$u3H.`&LBkbpkeJg.XZEC*D06SFFd?PprSk'^TI<smPV:DC/?&QF#SVj4e%/aa08P4u6SFk+gF4]MQ-=167Q4;*kjA<<"1;g/4</:9?"J0:msGa3\S'.!IJNg^[4;/Z$>DbW:?oO:0`EmOuP]t_1MOMZ$[^Pjo?%bp+%tSciW3;hm(i.u"W'8/=%lQh=gr-gY@XSic?V]*+W#)p?Kds1jRabml!"QeF*<!8=Y00,">sF/AmD4Ijm/Z(8R5J/,Z&*&fWG%O/U/q)^VJNk$%)^;-'sC6]4raj"9,en@CpO3*\eEb#+\>@C^MMWo\l1.9PVQ8'uHB9nXi?e.(`>b!l/0_+c1RkW!DPR%%)VI$sY9%QgcaZp;$hhW]j3B"$fa_^eT*ua7R8:;gg@+qk37\ldPbnn,&Q==nRVp$907F2,Vs#2$8/h^nXhYY#*elMq"3(H+tK2FS4Z&^8!a`%))OqP)hn9+%DIWuqc&\*:RBYPSZA`aV%IecPE^a#jO&lV,Wd@_RGHWsGRS-*QBM*/UCj&6GlPb0!`h.;jK;t*>;F3)(5;:Wk@)Tp%UobQCj#73L/VIGJC8S-2X+HFU!uEa6]2f(eBR^J.WZ7iNFlqnrr6NKuF3.mt#a'=93aB@e,^PMV:3p9i;3Sk,g#UmRKMqe97ZYgc%V"!uW<cNH/6b>Wsf:>L2U5'735-DB`6YhiPH&KOF&P-cM\4W"oZY_"YR/FXd]J#'D<E,"%QQB/."AAaI^,s,>YC+KD!_k^?D[L]l%eC'A(/%WS!RmS9]\EPYW[9F*%f%P?nlXISWl1TJC@Sn4h?,C;odX7e<f+#dGc;\(I`OG3ka\*R$[p<K6Tb-[r*o@O@g;o1[c%6e$%^847K)Ca0_UBtcrSgTn,,3;sNAs0l)MoQsX&QW(i-NTc&4R&k9fJdFWXK/8+juC6h3SnIGEP$@'VYD<AYsOGoRc=(Nq9M^:0GTQ#%^.r]37q+IQP#5_Cm]U^EaH!6XoZ(+%[Tkp`O`_h(B/!f<GhE?*[fJFF`M:aA0]#Y=iEa>)_F"rd*N0e(k`UVNn\,;8eYgT";V(-[%?+%jUbhNP.,:VQQkosU\U"B04/%Xc$`<oij^9!@aL#T5ZON!4\5]SE2Aj,g4)+NbaV\i)n"FC<7,,D*/EpMrPXGki8Wb=c>?5U"S%"49lDJoL[^hQRRKWF&[p.=_[M"X(\l<tK,CE#%2&qkulh.D&h_#>8O$VbpJ"e%866QB]nl'MT]igPFMa8;Ijd%fYCo*4Y9bV5A-5%>JA6k\uVNWBf\QD&FTVG/`"=[Hh)IM.O'4Ib%*2$Eps9JMXhX@Bfh=7E(.\R6>:/Ga"Yk[-">nU$`Kc!5NTXZLY^NAnUfQ4Fb.bN%Q5p'hcdPh<hp'G/5\>1"HMg8=$$=.@<*uNGkqkQ_#pT9ub.cDc>"*HY!AYY0;/GO8-!JT_r!EeK(KW7$40;_/dJIMnaX\6d5s0%R%V`4KTpPnOfd[KMM^`)%b&`06kX16_/mkos_UkMO0a;YoD0i`3:2=sjIoY?]VqqgX.Q?,EH.,%tYa<,73Kn3F"CeA((Z%74!o%."`%3HE#tolOG=gnL=/0JCFLeqtT9nJX1qLZu94;"iZDRRT<IH"lg<bL)b`g'qP)&Dfe;"a'=r*WWs]m*UF/$m<#BUu$*9\*0g<&rUIN%jlD!P=7t1$8@;[9]^HGuRMW5t4e67!"B't5Ukr80Rb]\=%H4""gPZ>?(_6=mT_UaCau%0_:+P=s"JYC:J/_-)2%;^d'E4<ZW]\^^%Pt3%#>io&!cJ`R?=+Y29!RXBPC1(=9#T0D@fXEecPbb$_N:pnp!6m;XWQ^;RKB4F(kb'C2Xt&E?:lgWAUGk\2XMU!BdkPjPI0WmW%<DG#:OR"BITak4\W*Ugk+9]ti"e[%&+t1#s\pnNX>&c\_(qN=raWk8Yjhg)\KW4(Yf"Em?\j]"HnTeWJnpZN/n@LX:>1NMjBj)p=%Tkh8!rt8najk+`nZtU#ZM8BptU(>&e8fe8LnrHT^MU'#[LgV?oliZE9e+ZUUHjuF#l:TmEYjJ[`TV!(hO)g\SbrRTjP-Tj<+Y7:/%r>4*9HbR^$e:JCH@X:M-T2gQ]m*g],:08u0-G:(1+&p<7ZGlsG.=)`[kodd@D,9FMOJ%;RX=kDToZUjq-'gG0\:A+le,.n>Q].H=%g6_W#HR0m#fniG3rKkO8c6dl0gd@A1KLlgD3<2:+m'ADB;@d(u\`p(jUHM9Pk@CqSR_e;7\Qi.];mk>a&=KubX.nH`R&lksBYb-f%]Oe@!_\+V\(35Eh>QQ^jV-s$S%PB%D>_Z#XB??[$R\gleaAOg'Zt0O\"7C[r:Sm_=qEB2T"$t`?%El^11^VbBE]L]8eEq2^A5@J'%*dpbX-N_H<3#mR!??p/14_T^CJk2!f";m[=O08R.^E,m'!?%>7grWi<crZQ1;mC$Q*n"I.fKjRai>-6n*38qmd_f(*KUe:_(jo8q%4j-eu*qPYJJ+[n*RG?8CaU@;DeomsUBn*)4P@$8(U(A?b&"f2epd2Q[ht$*O4onG0^5q0@?$h4h%O='oOH)FQk8e)/4EdSb_PEBe%41l^RZ+DraV)]QX@;]d!(2Njig`T(SWfW2'[;+Gn20qfePLF_U42t6*dZ[t]b$HZfJRJ9*6<t_9*GKCuYA?L0DG,+Z\ATCJ;n&%M%&n-`nb/Gq:dhs6SJO3&b<ieLA6b]ofX_!p_fD8*<(-aNY"7C1_ATGqR%rhS5DYP20ZduialtcU!gigB+eLN(`KlI;bk^uR$JukE,%,d=%NqDS84(fbnm6ab+NQu67@[E,HuA;$<:qd-Z[\q\%H]OdnrrJn"BPC6FF9.bR!;"U?;gKA(F%fY=%R?rueYQM%#alX$CJs:'T%DiU9[;3sh-,nPMM4rf,NAmp@YYBh2\73>E1fQE+*B:@m"gq?,Me<J'hH<H9G^N^gi2[ju]Pt`lk^Ib+K(a8L$TPp8LapuMOT"Zk6%L)p\B_k-(<,BABjPhQmo2,d<JQ9e84n>>s9U_Yc([sVPF*PE2(AF.#\JG7XIYq<Wa=@h.)i_.>\7%t,#WS>&cN"PQlCn`RKgn22X%m)W<AY;XFSYH`V"pY+!KAL8S;qb=Q?*P!moL(_lsE5^kKb9aoo^;TH]mb7R-qoXjIf6';7mAC5ce3*jCf8JD0+$/DC;r052*;0Sc%Q+X<oQ2iG:mePs)+85(`[(d^o4O3GS)b<5:5@jf+*d23mTMl'5p9D4bGC/`uf;,]q!"h9umVfCYgQo(LDeim9!>]@Pm<duG)'d7(%Vb7E1Dkuea`SMO7P,QU^hCZUYUt\3chmYa+FAGKca!`kXHa=mVYUZ5;N$WH@X)VK9fg@7b=QdqX)I=9XEfVP0H(]',K"?U$P3eIi%[i5a]';5?MnhAY7Vbe9_W04Mr:0mN??-lr#$J`G0'`iC&jRdl<N"1iR"+N+Z%t,;X3;R[ZFeq%cic:_bgKrWNSRpGZhtt!DF7A&?%``QAdd09CsiSH;@j(Z3X=,Ac6_+"FgOOFC>!/PGO%F/>USTf8-JO2;q.(Z.L2lY<T\8<aK.?MWX<Ji-h>F)US$Tf4$O1'8OeiA7_%V&Ri`<R,1p?`:5QqUn+\UB`1$A3"miY(CnYkFJ0G'7##7@#U2on+k<kaX+PnBM5-RX5/LD7&U!TFClY8Qh[Qs[S?IHDl<g*aURR/%4H`kC<,YOOOocO#iX(*Q2JN>M[8\m.!W\,aK*NTD"ZRXBMg"eGD@PDsl@\E,`lRIB+LE$%fYLs?!7Ae;qIHXoc8MVDN+#3m*/5qt%a%n*Q6"Uc71uGN9'O1tY:$:kWBBqR[#"2)31O1nmjgoQIgp5)E2hmXoY!G$H9m[e@B22kWdpCt!#k\@el^g>$Z-`BJeRf$%c=S/3%l8;^8Lm0X+A1EgrEgBF6U!^cC1k2D:*e(RM]??OFV;s^5AY?)'Tc=+:7j!gTc0n!pl%\;?WlaATVRg>B9U_]Eo%%OqFNZRE32Q?X%5@mM+G3.gM+l#-FL'"F\6-`btEh`k8:1u^K8)7DA%(H+>/fTFM#]$=s`t"Nbqhi=%hNN9tA57&(R##R,N$0ts4;3qn`.t=Zmfp?j%l[b#>]/)QR>;c)p3pO$6ZnC6,+u6P?j9C.'ekg)J+'^1/KX;oEUD\]7OHJGlW@:`9@i0/c<E1ZtCER^"_q4,k%G9$XU1:kT%s*%G%F72ZE`q8l";51sd'QK22CB?FtOGHGkUNY#X19P[;oTKUEOoqpD%VI!1MG&slLq%6ihAM'-i,./k1elOk+OgCa9$rMcA9/$QWft;d%>I`MP]H?;c[M4=gR"CLfqF#uF>hb!",[)XlB;a(+DP`<i;`m.9CFX:$jnV6XI`@D99lGg[@UR-&3VMQ8QOX)X#S\5<\"E;Ncosd/%-QmH%k%38^qlgMED9?Qhi!5QGhW:W+8n)uGOpHkO!'h3%$8?V#bp,XMdC?VE,;qdW?:hiPlXV!@A=5^7.=;T^eFMjf;]h_6mrK4$%S0Xq'c]eP<9V*Qsr[aj?8LP9XqaE&LZOO8hS'HhsCa;Z4=WJiEW"SFi'9iI6_W$Z]'fdn>oA_tLoj%?#J^._@03eZla";gZ=5=q,%jLf';L"*Q=77ADPJlYbKE),pjH!""fOTEh--u@dA/Mge`)NI56%NU0YHG^(1OQ&P$4VNCGP^T7bPs)>%ku^pRfcO7QHsnbR98DpV%`34nK,69?p?MaAbPBd.qr8niYBk!DejT[;X"XmU'f]/h7n:h2bpS<hb2Rb3]AuGbdq@S=^\7OE+knl!"%W]`aRE1d4'/2`FmF\EU%"d[nlmdb+CU%nCHZ53XG)9;GuVb#3fG%>=p)Y"q[a+\a&&`f_NIFklqhX3U>^T?k]b8u\uGJ5`2dqPp"6%fIn2LdI0m0MB+cG$Pc%jVY1C(@Z\'^+@ME80I$`.-eH$k>V)7CiWtoMN].q?&f_t<Zc!LluDq&\,A/l!Gh3iaIYeV[n",or^pJ&N%@rc5<+"6?oH/=Y&4jQ%(ojJr8*"fPb"LEZm0_'&2\^V&a;HdOVaHOad6e\VbADU4aHsY'r/+:(m]N<`'dTuY7iW^BX:9;F/k()P\Nl4T!W-D(\HLBa3[ui'%)]5+n\GLQ-K/C#O+)<"/5F22,p`oNDUd%Ro9gt(YF]4;'h4^m>!iOBO[C]MO-d[s(p@8,T"`<UN!_gsA's^t:>mDpD\[q&m%D=.;%+Sb97A*g,5BUCO(&OV[5eQ7Ak)"gnr[)LXN*ET"W#`WbOSZ,HF3?DgdW,f519oLCkJB^cJNUuJ%8td@Y&J/moLE3Y!gEZ>t2GI*'%:J#)jM6V>B?oE5)BCcfE`PG##U&e(9<?=Ffd%!TcWoN,Z`T/FJ3l>n=EdVV<g&ZINj1)5V`OH!`9kP)an'"<k)I[TJ:%pmI-F-B=%"rAs?Cll4Qa_+=F<8!'a0t^krn4=)k7*+`GiJph5\W*OJqeb#8WPCi#Vhk]nD5onjf@:(cf.hG")tbnJ907ZGSOT'[U6\CuX5'VR%9/RfK7F@:f[2V0`@W^8!ilj-<jHE-YgYiu]9X9k3OI$JJ,^<qcf(C6^3*:lh'pqU1O5^=O'H&p+J;d21-T3iP\AMUH.$5Rs(!6%J%8BJIoAM5@/E&?faisJKL88udnZ,jg2Eeddi%#Wba'N>s05W\fJPN'Q+hMrK/VPqokS`flkO;dt#'N*D&DA5I$6;Qd/'Ja=W95ob2%Lf(s67[uMR#>H$+b$psl,OTSClq(Y'@3]poU`CR_[bnbe6PEAbEcmfq8u<OOePW^LGc#@jWOQ_^26.,G$,)GW:"I<'\"9r]R2Ksg%a/&LGL)2KG7p?e9Y&$KFi?;2V[$BD&()SP3WDE7omDcZN&n)0i"'um$pI\4,>+=Y_!"ZVL.d*+GMMu%(/>p:*@%EFOdnu.(.I6`f%\']9bQDNqo$]YM:.,8J%-IH!U`hq-<57NJZ?TEWZ7XUKWk8bs?l4e9#_9bsZjgkOQ5Y`N#^M_4W.8:XThgMSVdUWU\JmUEmH6ph1%V\HED7'$IG'OsBrpe"6E..U]aW.!-%_nDQG-Q\?rSVOJTWgm8F35jC\"*rkOCmp^;[.h?IdIg>^?1`p+fmnmgd4#HZb_$JsG\U3_%+-'UV-]CF@gOdLjHs8u?Egd(qaHP-TML!5N85l&naYqo;Q<)e+G*/r%L!n#q@<W$OqV3(X-,.mFl7N[\+eHR;\R8s$o0<j2qb+!L%qCt^?k&]A+q@L;oSiV*imAga5VE/n2mb/Q@-ka[=?7*c':#7-@>k2'7gMOQY&VUtA+a[#T*RKU46J\r+/iRuM8TK[QVh7`CoPEm)%\X1#="HCj*AKXU_NO#?o39<)*`U':=?3jPn+@JV_=ng<t8BTc'[;V4(b'gBa=!Sp&eLK9Vp416>h#MSpfH6QW826XsQYiHcjEg4U%8u91q6'iNhlZ-Or3Y)^9Tb,_%/>A^ON`'.8fnJQ"Ag_PiF;d40qVn3D?#FQjfpkH_/-=21LN]m)h`&hSL2UO8jRXQ3c0;M+%,7S^%&i+g#%(WC-A#E&fBU'3p$kS8A%$F6)G@JltPqp0Sh4te'li<R7HG,iS0m03aRUc,1',X+^^7L'?N+FU$rp-%T*>nu[Fc"uOjno?b%<rr&U&=k=?fhr@bPt<8smXqbf'04-p):;EQU-VYSGU1Vp1K".m^fiI(6<>m?=-BCR6!m&(?D<U!HE+A`7L6:!(&=1h=BDbng(rQk%;Bqd6RSVB@-q3[_P`<!Oq[Up,j9$!rXNc,;]Hc7i6:Ahd+pJgJPG&#EBL^HO]+MlF>`QOXLdVp>r^H3WAD\2V,Pc)AQ=]4CaMO>T%T$upP78q1DD0[OB/e]bJmO'`\kgTT5VMJ+i,$;;;)1A'mGfRPo>Xn31o*?+18eAj4=gkXdi,`VMS**aoD$8@GKd>?r\C]!u$SjUF%imQ2Id>QPKWk"Tm=ml/-c6F[30En1Fqr[m?4P\45Wk(Db3O.or8&bYQ#8)pIAp`"_gUUD>?;bdD`O8P1hJC2PFDl>;1'l?(o5rC?%N,<TJb1D>5[S9`0>3A.Se0(-I#"HhF8SY@g\%V@m-ID*'$5=:P&q)'EDcEm$dN7$pQ`_Sg,1/!(k17LSV/f:bd&u^N6oG]hWk7B!%X7!>*lF:>&+m`/_r-"NX47%2ZUFoUp[QJA<UH4iI"_S@Gj`K_P&/i.QpY3.A[(XriD$H?&\Df,IR>X5(/*Kf.AMQ$Cdp+1N:cAaj%CCX75Uq@m_Q=jg`_eB-=6pF23BGJM/Z%j<P8BHnB^h/oOW6d+KW?B-V@)Q3UK<.*+o:cl&:K5h#*IoaVO=G%YM^^h-;,s)U7g^P;%+;=K1J@C[cBm4/e<P"D<Xj,@qY0i`G/q!/I*+WVWM/GX6h2c)[HuFsASF2pn]&aH,kWn(]@/dYRS4JM'Lq)@LO:!<6P:;,T2d9bT%,"n>D94qtr]>r/dN^9-e-QO?NUb6<^>r$qm6[o;qJ0X0rX=C+r)'JKr!bQ'7jMa?GWD4_%,mW[/PDc]Bm;`<Q9i"u#SrNpR5Gbq.%*fNh>n2<_sVTCK6V\XIRAQ%SCO<^G+G@WXq/3uh+U)dudk0bY6Uu%t=k^F^e:9cZ.DA1:g*eO.c<XPlqm3j\qjV4p8[>@G@F>6F-%?rWe$*T]@88Oug5BR-Z,0ZATr*XK)Vk;8)DNP+NiV3jVWb1\dK3=A5U"N21=Cr@*f@?iA-)A>@Vc4(FcW>>)[iXj2DXOfHq9U&@4%SUuLiH+IUflm`8DBVK5(&9NV%jM<@SY]X8+R.3og89[UW5Ai5s6bs)=(t/1?b(Hj"XBL36>dI&sFB6s)1b*[nPiS&l;r/)e)*C%@%<ouC)K-nnWau#S^<>uZ&N:g_0+N]OBX3NF>^/+o0pV^>59-b]C*AdEMjDs&e1"oSlf+LaGG6VO<eb5US(:2G.;,6PF9`@tkOaaPF%<ULuNV*522<UV'LX&j:L,X;gl@iu:;?ud"gc;Fl$5`Y-dqch_9]k_VAPa9\eQ/8q<K#)HAR[V&Sn^:K]34S.fAW$P187jYnPLBsW%2WG*`]^0u(KoSo)XIG>W2dE[Kb`?shQuGH@2;!=&"3]gTigdcb86/&"EhD:O<Qr=3I*.0WVZ>DQE/e9IW-[OL/0=$O0oHmSJ]MhF%<fr@&]Mjd6.W:qZ/dKROF1\./@#8bVSA,]!s8HhDg/'d5T$t:RGFq.a/Hu>Z8NE.AQTdj/]`N#]R-lMH0IbN,+m!A;6]usV&\d>i%lWF#P^qDTq'77Mr#!(R]hW"PdgSup.W7+0]Oe[!A9Sa@TP<qu05aT+h8:a+CR'/']oB;$@'F;AnJ/#6hTpZV^kK]T^K5GmTPG5:R%\rc=:M<'<u6c)OD($YA81$?A"JKZ6@Veb/`f!QAGS!0X]8i'<YWLY.:Y$''N*#4VB$Z&`eaY5c>6N'?e"J'3IQ=.:'e%'IqrA&\/%&Q#JPH8";<RRsc?R[JkW,hd2/D6cbH8ZG>/1c*9Y:?@e+=bJMQ#kM+R/;Z:h#WHDs<M;4!ZsIIRk;0]E7m6KGcNrQ-`Jf"=.7GD#%].<HqQ")NAC#.Bi]W6F/].->hY]em,gTGQrO;(E.L&>pm'bleM-6BsHd@N+J6RgDK1kX6kXb:up%^p@N1FB=G=luTO1&:WcT:U'o%<B92:--!#]5f<^qWZt5L4!m`P27Ho<,cquZj?gc'Pr;$]K!-]@YG4folbj3E;f'N8ktm"#`SE'-c'^F(6%W"mq"1IXI7eZh15HH,%J6Zl8.S#hg83"GEMC=?UgTX;,.L?A$&uMk4DcD`"rtM2sSs'+9%_Ta1%FUg4B8-JGF7D+2g-iZ]>SIK)b_$7q%l/G@=WUR:j@-uI%]0O<c1kp'5/jr>=aQUn1$4dQ&Al2@Gkn(6YN.t%N=/WAngp3H_o;>K<nU$aPQa/]7/692.UYbBjo0<b@(kj1^+*['$E51=S)V)o<%B8[b#F9tu6daVc6lu&UYi:)\.%=,SQ@_=])#1EaBMR*&"LH,?K?7=K>;m[W$m,`=(3fX^fnO\@c=ZK2-\RbJ@Y0lY?MFL'kjCg.l%P*KWR<;Y"r78J=E'f08g4s8/1dU[b/;Du'tA^2&X2#b<H%%A7KnW^qIc_t#0;_OLC<@i$Z5t]pKpXm]Bc0`6SUO6dRWZs-uk,VEC%d$:M`TPFn2Gi2j>0P:B>k.t%X)&Y]ZH?,e*.H3e;8'sUaPB+g&3BIgjLO/$m&'5roiZ7BH>c(o;#,]lO87@@S[7#NqfN"=#&lWV;%\nad$,P*5,g^<IeH+4"]qq"Y&ZV/YO;G$D]I4EoL\$dQdGP9LJ\,];bo#Acd=;.(bDBC9lHID\8JOkYG&EEkcQ9\WFb4d'<-uRT`%mVli$S^^e@7Z,rNX48IjRK-]*+=Vug>XPAu?t/@r=ng0gW[&sVJ/JG[G+:"F7As<_8ddB3kma;H.9[d!W)YUja3Ea6P:"%5Uf%Ig%CO3#*-siR">o1ShXI3l*6;K066s2G3Yfo:DVXkLDT?gi#.MjZC@#,hM'"#mc@4ikgGK!i5-Up(Yead;n=I8>QPjOEck`V[1PC^)A%G.(RX[t0fIPs(EP2Q*8nlCn\$Wl\+!8\QmoSF%UOJ]?(eVB`pJ%pD_':mK4q_.MUuEh"L$(T=,P0[B5`4c-:s8Df8Cl1[Z#!^DdN%40G$S#_=sN_Zo8a*)SHTS31i\3o7liL;f<"<*4E"@2"VI5b,nAn$.L$LqOgKW['6"713]fA$a5M>bQk4aCm1qQ8!K#/7Mgn0\+.h%ff=kEbU?q_)L<E0`5r/dNIqLNBUD@<H!f6-JY:d2i<>.F[S1U]U@J,*lb!,^SuU_)n9'(-QoJT^EOKJuF1`3X!tt[c,kZc%"Ch2[%;L0=s!i]$BU:6*L[h!b+c6_sdLiX]])]a`Z^oMkjDp8VSGPc&#0i0>Jaoq#YW@"ltf'Rr3hM%\5U95B'"X,kb$T0I23F$S9R,K0V%))F;`%ZM0B*R$6@aNc9@;drgankDd]@fNH"l#n76\rm%jUGE_WmPpb6a='aR%hL(ZLi_`#8Q%7Mml73+icV!U!l@K0I#(,+PGXAO%Z7/O4m3-.)pI(.!1O1nnYu;--7US'],97![$HK%"T1DKsbYX,f]jdQ^`UmB>DK:=Q9-Fl:kLZH@DDu+AE<_T=\MpNAPgJMO>(d#%%FGdYXE.NSn,Ddd<)J/Tq!$\amKk341EqXnlAo*Eq\[taeT9i576%M47VnT?./!,,c_cIDdY%"]E")qcu3e7mB"TjDr8K=]Nj=Egd%NSR93U2NH[+[u_sn+'tWY7YO]4X-7PPc$DZDV_Sb.:l"?+u/to1c9NP:p+43bAh8Nfia$@,htpF`$9$1cuFmJD:'2S.1lZLK"7V4%LSLF6CYntj+)`Z:&d&BUn\:)f_u.>`C"5M-0<$df*TPA:B4sj#LbblEN%>1X;;P0>:I\sW*H`sYXub3+))aPgGt[)$B1qTYerEjN%FP4t4,!nK1#8`2*S?q#+DHLesP1!['o6)Noa?5c)hMG3/OaZIq1!s:S9<G7_UH5>YUOZr+).ZaWZHB_UW\_Y*?6tHN>3+L)MWpb&%!qqGtd=;q`;t%oS)%I@>IYmiCocD+g6m0(4Ji=^I,$!!mR!EGc;@1SV%Pq^\:=_tY8C,W"lK&_Y]SW!3,kEB;.Ca?-;iE@c)%gO7%7dGbdNHu2o$I)GcP4U31'+Dq:`j)ou.umI9@'b%_2`EgGCu2G\O>GE5@u%Hjd,\:aju:q5d2W4i9ft?Jea,CL66+q>Uj-ac-A6b>%cN7_8I:#hO;6]+V]0^&kJW[D\+jgH]gO4W$_E1rM=9rJQ-E6D'?H;AFWMF`YejND`.NJ_F#(I&ZUuab)=2<U*EN,b->R2h"QpX$s%'Y*ea]=fa3bo7(EI^?WF<r_LbKpc>dSm0dTEH65jC<X@erf2I(F@5m%I\l+0jXWbNmT6CVfW/FI]9`okp4F==:TEm9)eS<R"[@A=%BSrX%SW^q`UYD94d8R72AHAbmh';eO?^c"@WgrM,7M?FDO_ol(;_3EjWlNCQXF"U+R(R)9nb7"B'"WH&;<3(Fr"gKR&o+u^!oc&A%<SD!KQQ(QT]^mSX/]29__pa9?fUV.oJN#uAmfrssZH=Wd)RF9[51CEj9c%A#%KU!-^V)GZZImMlYHg!b0:ef5+;5`@V2VGQP-JWa%95bV:rg0:N0l40MQkAQ")fN,OF)\K*2e0e`!hk.\oJZ?0$(Dg.ME0,HGY\=s77`&!MK9!Sk;\h_E&?5cDE."r`;le-^hmK:6):`>%@ClR"liTV,QTe27S`ri!SM$lEjE]UO@i)Tt=/A<'4<,&)7/Oe7XUl(=<ErSJq6FoO1>[$^9gl8V%#8[#Ok1D2Um0fNfg(81eMU5O%:`3003MSG;6[FEC.6kueBbCEbg]31;#U78*E`DPOnkKA*>ALsemCN8)FU73!j<;PNhCU-HUqfcG7<0r5%uf.L`g'H3E@7FF%:(@7%-0$a.&6tqnfi()LAL/\GrH]&+LLJW&R]%":,X[aC]ML&1H:ugD,$Eb+UbreZ@oaksN@9sW$`3"1e$XV7C:;ub2BQOoAt`Z@8c^9Q%]O^Tj\k2B_RR@l:8\r.f;4-.GTW']!5`?1kWf@9+JQf=M3qL1n-B:)GB:8-Y#s]YlO"QICUb%Mai:rAfg0.#O`eSRhYV\<O3U&`.%0PbWO0noRmI9.&*ela+@)ZhlI<<aR+MDm#SV7D\/7SbK,[S1BsH7#QoS1-C7-?eo7SFQc7a8#Hc2PFl-k,U6_QJI?*NcQ2-(e93;%&CdKk">B!p,XC7Ck,f-&!?*iKg,?a*.V*Y-C3>Ui_JYJ50iB'f"3AX?%(U?s)1pN0<)*a^U"kailc^/hQk\Im1p,5Z@Hs/N2hhb^%Z6fX8U6r*`8aM[3\shDF`FNL+(;uMNQH!GR.P-qMGutcs->kZg2C&HPOfXLJhe3"R(PQQ>fS+,dAAC+[oTZN;_qZNNYdZJEW_o.V%qL#qNK2A<l]`U>\gDmO3naXT91)n61H&G]\_Jl"hbq[Fh3?2GKEjBffUVr2enQpo?<PrrdnF=NhV*/V$[?/-YTmKOH$\PeD<X:.S%b0a-G'\oA&$+fM.[-/V[]41Wn?:!j^LGTTs;@ga<&a;B2V))NNEeMiN6]OTO'Q6(FWGd$ZU3%5>0d=>i;'>5prcIt#kfNTn;,-*b%e^[GmYj0T+.$<IFo*fhoTGtM,QTL!2QsKPLV)??7%X..n.6rcNq[mJFU`ud;.G\.hTn4t"##_OD9iI="(=+,LG@B,jR&k\F*-J]\%^-">[^Z"p$kD<d]8fW[cOe>M7CR%+32m5O^)^TB%AgDf.I6?5/@e`9m3G&@`o?fsD:-a[ORF1aR6Q1gfHm(%sP:;h=@,#e6bar[s%HD<kn\4YV\e7;M.jfXETR0dLsfl89K&Y4ga^i$"u>>;0q98_2=5i7q*Dr+QReVp@gbNHg0".hA5n,*#t.SI_#1"1$CNb[cjA[cQt%g8%^?B@S%o):l51VX"dm2j8f+h,[)jaTrEL6VAYPK*[BLE+k,[oS"glV^fK)^oRKO3S8Ur1^q%I?j7XK]u[_`R05nmMMkuTDEA9N%(T0):!9;0*KjR4V898TGJplo-?fYhnSF1ntL.2P!HDi'bL+F-PLEG++@b"b.>jl80cSf.+3[nr-])giK*ZE:0U08gW,t8H)kh"SX%T*M1H3"K*Q<kZa(#@!9XQ?ue9?q%2@++PjLA---aT0Mdu`Tc&.OZ_[<R!8=Pfb`pfV_'JY#\"5%:?YWA`sF8I7dfmG/P_hV6pOU"%d;d4@cEt@'IVLWJIE".)hkqtKfP6$:X*:!p*!hG(!2V'qQ2/BrNmd"7i@HBHQn<@QB9DqsaSbR-FB5EPbuJ@b^dWKkYrN<GF?;%p%5IE:a`RG+>Hq%rg!c0*o%tLO=D!+?X^g.9R=/X\?](g&Y]HK"-V41?Pn1En\67'3*H5EL=WbsQ[6C0,m*WqEmO@rJH%_P-aq/@Of%J*)3OeK#up264JEdmcG_I']W*``67Gi^e3b?U,#m7.thF'a*D09W2uMhS:_La>:BMq3`E3TSmP;&AIK(_$+G!n"M![G[o<qhe#9[%@n*)KVfo,%ME^mB0AYd,T58nG03:uZFh(jUNDMr<I/'#@PD$pCKap,4*7"YS3]7`ZnP*.C!WlQ-+uiAHZ\2D7!c7S>&BJi-;ktfq%m_A+Pd/=Za>_Qq%c3mq<^acm>pJ]%_BFs]Uf]b&g]4hgM^RrHN`Wesn::f/!UZ`!pN$;M?Ep&O#)YA/!5u'I#DHKXthUSt<6l7:l%(?1hF9W/%Z$5]-[#,nX8KIpd&VjN'"pmJ]BO,F=mXYgZGehs*piqI?h+=^'='hSA?jZ1G_GNsJY]d3^%8)eI9'N`p#HS2==1Km9^%n'KU\oWoV#V85,[>cQ5EjS[O$2*ft[3ql<F1Z\fM$pd*O?;KH0+s_ntbJm]@`7qRlTOl1N*/N6BWB""EP'B[6Z+67)4Yc3cejkd`%>-0kR;^PsJq%u)16$/BeGm6fQ?;eGS+VGobYahla_TiWkVC],C\4)`-=(sld^nb6%-f2-]9US)^cB\T$3`@tE8Jr.7DRcQd;9-6j%I"kAQL_$@m@t:1TcmkqN?KDkiJGk%c3+3K1!DtX;g-WMa$89KJp3$72RbgrA1W"8'P*cZWQsYi3DW!1Pk0CR=+I.6WXrtPsHHU?L%KeBQ<J='k'86S]+<`[cipk2<Qhdsje!Y[@o[e`u_q97'sbQJB;H1,oM)baPu3e<d7ndoC&:41Bc'X:r%o3.bNVDr)XXM4)&AS6!,%`leTpa`NQk-#8X[9qk*gQ9bM<j!/MumA^lN:n?IH>$O_k:fg*BA(9[Ac0Xlh^bCoY@>jXn44tP:ckZ0[^M\d+eETk<FHi0ll=O,Q%Ws;B%h/n$ikHo2q5&9>H/%c'WP66IsCI$,<KAg=e#+DMtJP`:@+fPZ<aTEdV6]5m+6,plEU.X*_AWom5[(@dP4@1Q^mp,,J0cf"(%r01[_iLoS=E'(ESqI:?1ZjpFfoelGbLAh5+2C;bm3rUK$/>2fhLpB,tYIaek3m]37*"Go3'Hen\+N%VUdZ6J.a72R;7KCP=LYjMF%H?DDK7_b`GKKBMP)$Osp"Pp&m[@S8$Yqd/l3C3Ji[-C$fKeSU+RqN/Lr),dDY\FZs\=I9VgK61g?$C"Sc"hpca>>k,k\-]sSr2R+%>KE0)VPO\Rl1Z^A90ni4`1t+pR$W\GTu@S1ZNr'c/=@JOcYZDa>e'1R!=-q.B.Gu?pjs&CQa";L'(@X"]&PJdXTpE3l!7?qI(pYf%c-9<Ye9.N/)B's<;'=[?=A<^/K[$N^WNdjEK?@mm+brb"f6nIA!7MYOrS1b1,iAF7hp(dM$K*m1B(3B@s(67'2+QRs(Xa0*rWAQj%+O<IKGfVd`*OI`2f<&5B1Kd6>9s$1XQ>I@-:+0i=)\k.Bal-!VlurXdM60F/lj^TXis;AVjAa;ppk8+lKIumP&#L*!e1VjGY%Kpu%4:&S(B\B:5K,W0WeU%]=Em9tSa")t]&A*JiZ<,);cEu+Sf`8g30oN/-$L0/d-)*T)ZqZQ`P21u=\'5f/W=*aIgp<*.'Dea0l,l[*%N'?p)QS,2D$\YZ]5SV#e[)Hed6u7ldTQ8.gYqUTo]oaYj=mhW7Rms;9itUY)1ri-M_Rk[*:&uq.\Qgk?VGedsAb!k/HNa%o]ef*;%$-Kd,]$gruECsQlF2F&`F6'cnJ5:Jd+h)7DJON0mkp/$[l/tJfSf(%uA^bkqF!:Za$Z0JT88[fYj[T%rW5iE.M9/%]A!>:g_=ko2%fU)/8Y+q]!Y7)"0EkGdmnGsLsBeDth8/H&%Wdu(IcIB3;+Fd^p>AH5]`SjK,VYo;Y0er'$18=(MVoBsES]M-N.*B`(Yon,jbY?sL%c;W;91<DI=jMO]OhS*"3DWul,kVq:5MhYHkA5/po<]RbD!Rj/b?X?C21[qE2jYB'1/,if8C1A4ZcLAcF$pR19S7mq(+H0cqqd'Rp%jdMC23NSp4,_Hh_VNj^.^4I6E!*N7DB9-:UP56u*6.s>&^/l<^''I:a25\9iJOhA&[^rV:iO-AAd;)EO5rAdC3!UA*EX7>qf<mV_%)EPmtno[RUf$?KS:E(WI$Z5r7;rpO]J['87*W$IWK_m<@C$\bsN2[4J"AjJ+=-])Ol*t,GJGinHC3kOLnfI<e8*t+K-f<L]is^YU%WbFpQ^/76/1n?DNN1`udW^`kAfQ9(c3=g=m3uk$L6ak'_54>S8+0W6"]AV1D9hD3h)D_E&RFm/f`5ombcuh(=10LN"otunqM+k2`%-/X[Lbk=XsQ\D[?KH5%"e,ml'T6#dK*mF!Con]W)mTlP(a>>1d:XgLU"`-d[?YBV=:"j?=BnV3YM4i1j,h=5RP:3_insLtYQQiDd%<@.+XZ6U#ZM?sNELt41r4^jO+2'phs3bMPgfhnG1FB*G(i*!\YRGJ:S"">k%fVC-_eYJ:lbEV]InInulK'`!C<#<U#VaPao-u(T:%djj>m^LVeoj[u%/4*a^eG^eB/P=L.B&]"iWA#;DqWTB*[(4K64c&#Zj:(L)T/ZE/Y=3Y9Yg8V[E+uOOMUjB-?M]m:6C[t0;SYKS/%_MI1k"\s2,/F:"g.>kGuOcHhfYGksXXnFR(d@fS,.5p6127L?COH`)k#s"^j3J![PK-#\Z!D1)BZ]Nui[JQ/!-[tY].7pE9XE_+X%UYM!kA11nZ'UI2X8;sn7S-G-%RK8'="sW`2DdE9[b(DI&-qntYZbC!*3FO'?J9'L3TdG[_QOprSh"39#Qb@fh5n+fdlB8!/3Th8T%4a6UiSW./T?2*35(gV.'(]<!o'/4C.R.!(&H=;J"gr3`EHrLi=5hDmLW#JoM;jUX?La>i)4/Rk;Z)hY/+]D@hVFV8-BrT9nc&`it%h$e)NP?I%dQEF2udttCWA][)&V#/&G#=[b<UV`sRQ.eO]Bs[i7<&>88+\h^$kF>P?hQ/s^YVg6KT5uA4lO*(_OsGq%=P#BQ>l;(j%!2m@72#Id*!8BE,V3s`g.G#t]'kX@(LpS$H#>BES0f'Mf^2M$?Nko*QRXPfedn#FF/\'dT:%o2h6B>+Tgu8VFCI0*-(8gpACP)!.%2?Pm:V+`UQ1OSaY<%QOpB$,NA';&JfE_%nXlJmSrZP!%>M2En.Uf)p&6ZXa2*/E&c*CrU?$rPh?r$mB,pB:><&^*AdaFD!>5.SL)%3E\'^CE18NA;XmaH&,"H%Z0r:a,HLHmo-q$Eq2W=WA4DbGKT/Q9h,9QB!!St/^K'"V^p1O8g<8$*S>s38Wq,*Ue$ep-p*Kjfd.5m%CL5MieKLq;$XmL[asaf;k0Pe&Nk)a5qO$RYR&'(7%al[1k[9Eg8qjEUdjc\?#I7t)SH,sJ<bpErN[7,.!p^fDX(Ws;!Zt4uiMb%n%l_Xtt%X2?,RVB#4WEWtB8.o^lS:2$8.F&\brX<DOd/023R!&.rpGq6&IBG:W]_H'5VSc3S`&eY;,)Pb^]UKZ'3`6Vk'(+&)Oj-1u%Y"KQl6L6+NV5@tR9WH(9Yk'-46):tTXI;u@M[lGFY;n%O.'"Ou_G!C_,(S#a,XZ,O_i^NBb2c)<NRjMSK'4)qLs6VlXV\l1pb=Bj%Ril>jM;*PGnR]@Ocq6Q'Z`=r'%Z%&\BrCT[3uBdF51bNd"iP"YGHp^RrD_S9S'Hg\&6UQoMBnbIJ!=!lRae:1e6*m\.popt6$fd1%Pm59B[LA$WM(Z4ck[Q&f+LqnJ$@-2P_5\u4:crNXjdej`Qt$qhCNr:&?q$K$l]+CCcKnGQAf&0Vk1(qfE5je+S,I?3j-]$RM3,t]%\YVm^]"iUh_A9?:r'5dq68cgCXbp\&M!?6p5hLE_(F\DW1")B#C8d/J<q$Uj28sSGL8C]tL;Ibl>7hStkF4$bLW6g"WVH$:;:eAh%ZMg#,T`URJ>DD,e]gWYN1[,%0cN=1@5p-MdbaUef6-No\\j;?gb]XNIQSeiuEM#&!Ce2qkg2T&>OXka6GedkqL^,(HMfU+[&"p&Z%.+5]loaY>'c?u1J<T8a?[Plf`^+!H/1AQ8n9N`@/#n8%OB;0j>r/*rn@7sHS'*C[G5*,&0;U2-E9FaTm8uKVZe=?hII_5rdN`$Cb%8H%2qEl&llAmr19>g5uKFFViVGN+6;CFcmZ.LNYO_RSW*7gh&"EKXTt%[1k[:"-P,Y+CM:Y'76^;"SAbAXP6n6;RVgjQ;U3j.'&Y%"PH9b/uo^W$O6P4i2)sT)O^/><prK'O<[UTmBu^V>!MnX=1T*uaZV(slX;MV3E[`&PM+'km&qGOfscU4MIj168f2uDRP[o9%aE<g%C>H0/9p<H*d\1k1]7Da<IbLJ)D+Z?<GGZk#Yk&!e^=.lD`O*gIEj2ad)m]OaRbt?::QM3=59M;aJG)@B:6leE)jrg4,AnU@p>]RF%ln!`q,0`"8<hAEabkK&-]S:)IA%?:A+$$pZY<Srh_g3"@$Sit++e9@[X2F7^jZM[9jInYsfSYNB]jR47C\tfg]]\2Td6MeF8/cS&%:HC6[a;,@&R]+%'"0t-l,p0mETKs:3/VI+/>>".\#?U_<K]T>!#!@#]*aZC,]#+I;fn0iB4)<j:Y;ur=pL'SAr0,SorSq)$UnZIp%nl49493F?t<J\k]gIgIRC,dJu&Tgl@cPAS'43Ag[7F0%NPfYJ_l<u%rZfB?9JQ#g8PJt<A>h(+kZF>6*!Y&6$3f)<qfNN@U?Lbgp%0f/0,'"IM6HH%3`9JEa9,"jag2Ed+*cu.!8$@A3<-p<dC1T+qbj\+VNhG/i^k[f\1<b[$M@OFU9YdC<rd7&hrZeRN86<W\MnZ0r0%12h_SB.%=,9l/O'j$P/7OltktcVtcO&T(bF-"R2(B0+um.r3jNhdXUODF37FVi&1tg'+f;c5gPn/2jli0[GHAl(%0O-Y1:[(27S<%..[*^@:GR]p,Q7]H=/P(gG>o]jAC?94%7Zkjd]/Tk3c,hGt!Y.Oi5=$5^?_EEu(&*l/]KHF:E+"8N-=djsL+Eb'm9+5Aa8aZ^eVO%PbI,8B:G?DVXj_2M1'gn6`^T0+8J^8@s[,cn_bt)bKkt+%SH,&b/M;sZ1E)LkuJ1;F)K$f;Wj`7aiu3cH9RP*<u<W:)"6Q-6iqAn%@/On%,o#5=O>M_64DEBQ&u]h/3>L^uJAY3[k#=L#(.)25*kpWQOcN/^JZNu&:DbOO\>(%l,fi^jK^#p`BsjT^brqT.i_96*DU)Mi%)FPSUD6j6Co6El1LG#27kqYuM)kRFBEXPfSa;9V?;7n,_+=B2jq\1]UQo/D80`V`Zm.WMe!&94A_QsPrrk*[u:$%b0SS-O!i*#,-%5YMJ@Mk'N`ZIu.NCa\'`qBV(gp3g"A!nO*m=^<:-c#D)'[7$VC?*4YX>I%8H@799s26Aj.X`W3^,;'dm<42MPOb';"UnWRK3$rb$%36#Stf\(V>fSEYRb.9Z\^UV$hL>STp^=_h8dmPgdVjn=PCF8Llb\a!$i2VV,ONCYHP*qKE>YJUpgr>tf]GlaKb[XhWg.@dFnoC5&%W9WeNH+:2@G^=cOdEPqPaVfrGMojq"UeTrsa=[[,kogD7e5Bs;%S'"<U[KOBe<J--)q5o(-B_(qbTKL'@S,#6)4<l<c0,@cZAV9c%o[H.fQ@kWNEL8O^MS6pdDj:?H@gr-?dbUk4.FN^5<+V;&"sU2//kqAsj6S6r[?"!'j##_<$-YoFkp`nZ?jo)-1Pa-g;HDaTidN53%ad/Q#P3\S%"B$49m[SCu$tgHHIcr9%bNNA7mbDpp"pYd1K^he&#q-f,/8$<"+1fGJ?IZSA]:;G62$khcMhH@()$DI&d\o2"Aban4%)Ti+t&Y=h20MgEL<kqMKgMGg543J^M3NWcfcH\_q"n$Jk!tGf,eQ'@d*lC:d<oqPX@^agXV^8=o\TUI"N>uG4'Ub?TP83fe@hmV1%lbNM2^rGuNqDTK;`7#q?U=)&7Xfe"Z&6$l$9U*b`Q.hh<07>NK;*>.1KlD3&P`$$CReAu//atL$M"i#>Cp&7K[nl[c3OR</XbMao%gaT^Y:F!AtDgC53UtV6/mS2jt!S<63j2gW?NA6b.]"^=/RlOK6E7kY/(cCbAoI[)%bOe0PY4O'u5H^N?EliY0dd(cUO=P[bj4pVY%EA7]RqpM81ep3FZ#=43\iS%5sGH&JuRXYT6eh&T,:7Li;T%]TqCc0AY0K8qo&2RX3>st*/7"<!/b\U;9%^NV1WOD#DY(#Wio+F?#%5q0I-W;W1Lrp+nhg4l-'$>I0k"9iW1ND?sSF`8k5G]EYr\LY0ulCl/O2=n=1LZ(1k,('/I1d]1&33hKr\2Q4--6cE8d<HuFb(rj@%V)+c"*3g-AYP[gQ57f,",Ed8UV(<Bl]j6RN&72>W1rg*"+$6=->ZM_WT=#5Tc5e&YgignN7fF_$3nBpdW3Tia:NlGCiX[/%<"$%I%W7V\G/uEO=Uj!rmQp#/[*qbJ"!U]A=b]8m9KcU)H7GZbAaj=H/r$<@"EGIC&(*n<6n/QB'B^Y=Y?fKI?dq8!U?PtCK:#6%W25ga5%Kotj8A,t)8f#:C:Vk@LIYD#O,>[T9$T=r,J%]/(SW?*'a`1?$pm50isVig]-+)&[WA))1qoWO0mqjZJ+#\u@Hh$b#[KSUiim3OK-%fCttH)D]p_NA(efZa_]XEZV2Z(f&9d4^9a01IC:M[h_eoE"WiK"F.MXfS2Af#u%[(i=$l*%ms#\&7>#<#tg@OJ<3S23L^j;:\'^B%X1pM+IHWkM<A>j/,21-a%tk9qhd/6T;_p!9G%tV?RSNe-pYNTF#"Jb=<JYM$M,Epu=*\G7*i"Di80Vb??t9sER7CkQX.rCjHFoi#%T51[adj[IH1aR(6c6Z8>*2n][rn.SG3RO?7cg4VK+g9@_4=[=#7"pFb;&#XR0Qr>1U6MG7kRhcU;;sjuMSe&J>o3Sp@IT4),7K/d%2doi_UdaRoM6k=F34f"c8HH$5(a3p;AMoH&o9ohW'=6hko88Xi.>p!a+NTmj3L[q3?aia@5[)es9Y0@q19"/G73u\'q55\-ehEgC%*eF&J8VXRi&0\^i/5%FME%!IB059KXj<H`e&h+\99/u*'\s/W6YSWKZiqK00SUH9.N@5)SLrliQ8XL!@6f3oEC_OiQ\kfogI.]OC%55:iL\/GDPAE'<N+crbq76UD>N\>E(jtXW6C>4n`ifYJPKsTRJ'Tne]f]Cq3S"'Te;p+bbd@a_^Ru,9U'\RLiOfk@);?eN9>7,Rm%6UXmp-TKCHm+9L'![)f!8.+C$r%oNP$"U):jGZVZ7Cr(YcA8QG0gJ!>e%,La**^LMV52GVQed)Q8AU7)kRbffP[qCDQE=R^Mk*rX%9ld\Tgl>DnjU_Pp>1&A-G['P/ZlNQK;RWh[0,'U\J?^Tu2KL"&:pfJtC5T`PPO#6+D@5U]l49RI+GMfL1Nndu4u<r_0:oMadjaYu%GH?(YF+Zf@\n$s1M^dPH3o!m4&7([R-VfNRFaN-8;+mZ5%ZEr!0Ka'kKfI32YX+d`Al)ku0/GWLftmChPareY*GSAW2/SFB3T_=%%c^!CXJs%$3OE%)3Zr#Mdh4EjW@>t?*FD'\(8D6E8Kh?</Zk7Mm/qSdFh\<@0FKH9uYNS(i6?Y\2:+UHkG^le)>t)<^9r.0HP`4M1%'kpfm?1`e[-W%G>]^sQV<>pjgN_GI]8dcj[`Mho;,?oib.KGit`YkRO8su0\PsFa[6(A_Q-(LI5+N_MeF%deLc>=)&QjP(gWOY&J%o*@9Y("7>bG)rW/rCiQo'Vh;e?siK]8/VQZ?Q!TsdB1\MTuBYtF5GAV*'<W:fItjEo=[p]PIp>@8Xk,c[0qpc^ZX*OrMlbDoR3e)%)SOmf55a/2S+.d;L@pC=])O.6.sVVTY`TMnZg$'9V6Sui8gESl9!$H&FV57?NreIiUK:/78l*:%]Z2kB$?7D'*>QfI,YK$D5GFaT%,Bg=/_+$H0A0Y"Y]GGYB(LC\M_i!fA8Iq#u*pMk5e;-E:*'S/WA4P!dVc11]Kl\ZmK"?KI(L,KWT0)Go/-#-Sr[S%UeS&HG@bQ4C%emq%BZ`fhIS-0nQel6e&P8K'EFh6tAc=/J0(^31]9\Q8jSnF#BP-8CH45ICL.Jct(.CjK'j'tT"C2^CQoCKH?\H8[A[qfDr]HUXG%S`X(f!8FVX?@5@29:Lp)3n)E8:9DZ>\[/YA^WS]oZuVu%.A[pMejb3Yf>LA$W7kR#qmq^JjsX:uWD5;'"lC&YMurZsk@0;^B+50Y%"3gU&H>\l_PkU=FH>L;V%,5d..%>,.q$d08OV-YJReNn:p?XU=1i"nHYm(@qJ("Zjl<kn*1;*db(,@h>-E]=BhLJ<W\0bNI*0/9Y%B?HfRjS<C/<M^@L)XjDb,kBO2HgN3pgC/@PiD_*dldJKu!TD,W(3Tm\nI<gE]5_//.P2H9et@q!all!Q$n6S(l)>Y+noZG\S?"sg%FlD%RN`).bd1FJJjK.0)8)E<a)5g9>YKn9lOUT\fN3>GLQk2/j9ZU3,;JE4([_X]V?@f"2_jS7)HPP="l/'jo4EcOr0(aL..>iPl%N"2N53N%5C!eq'Zm16S`o;@,QZ$iI@iqXFA=*^N=)_s6Z1O3[c<@<W64QCDh%CXK^8:mjLk9TN7)jV/n1,*b8&V36!8//@o44h/o%#hoi99T3MV41nLBedrO!+AiI0/r,X\+FAeuPn&lq&ttl.`H,^D_EQ\IXL#'tc<'B1\=)a\0q+[%a[6(6Nc]Z=6]H_g8;Y\,iJ^`I%c!a>qq%p(BYSLcZ!g;pZ6I-X^bU<2en2f%;MH_^mHQZ!b^=0e/iQ9%!Tt/h+?8PUJaRi@NmaU6>#d&-qCJc/).[H5>;SiT^qrM5+%(1'2@7A',Ln7(X-k8.#+_2@QRjSV=gMjUeFe(_+[f;4*_IE0?<5Gb$:S[fet?RN>9WN^c*`[DjI&>pZ*4me4`j[iW-YHjb,41!++%EGCh%7uG+8Ki]H`aI#ZqQb!hL3Wb2dP_qJh@ReuqN^,RNlHg9)ifEK<4*F(3d'j.c?kjVIR#ACJAR\X^Yp60ZnM>N)Z.k'_6'&+>%=?pr2KX;Ddb'UHF+!DiT'dVTui`S@.$8FT@ANMZED+"HRS#R&lGKU5T%\JW=M/QRdAk'j':[#&cZY$jNO)fb/]5B.7AZ#c6`hea*%U<dcBN07=6b?*.XeE"oQ^U:AVem($\ALpVI=<NQbfZb<*1P`YYS1(de48SGamJ$Oc*gAsXlHm$,,\?&T,&H&Y5Ae@%2fjB&P3K_6%P'brR8_7=p!W=YTOX:85k0lM#8Q"qVM%u3?I)YFgBdZGQBHAj]&4U;e,gASNZ?`8i`VYMp46')NgVbb/B`2`k,Hs9PCrIOA5ZG;P%$RRW:FP.m,$/)>k:8Fp+0k-rb6.u69-C^[^4%'uQ5Ao/7&%2iLP0u7X7BF;+ksU8?,]jD`[b!"/M4E_:,agN!'DfMuZRIlPC4lf<%#RR;]D>oV5?ZThhZdGNC3gp7$O,FZF:b<Bh"?A;M$.aZ/[h/^DC`]N!cO`:Z&?SuUO3Yn3#t@HT_"VJc0AW#F/&=%PS-N$kW@g"f%oht6ZB'q)Kf;9f&q%R*bm;5fO)N:N'g4Gk%0F1M4`dfLG]Y":iQc4]8`[XC.E*ui\/L[kNU'4FQZD*H*rh,2QI@n[<>f80>&f/Ph%S1"0Fr,#h])B3DF##.<1["\]iUm%.(Jd[-KBpE:SaNY<a-B_NJBrl<HQ(IWV3eJ#hZ1rH&=Y\*`RITMdO37@^QZq>b\EuQ0_V3Ai%9?qrlS?\2R[g/Y-_Y?O0[<6g!YqG_&-EM)`R8^=8,nG)O?H_%1HakVp6&Z7X\85.U9"G1Z%K\e0Jqu8WojTkr3Y2HmYTgj-T!i\F%I'Td=^8*h=(ZhO7+IT>!@Zn3WZ7SUu6*HgGcDluNk/452^7Pn1TH8r"mp/ZkhqW@aVl=86#tVq4B9KbhE$==PjN)+ba0J45$O.g*%#k9QhGfK!^T!o/-;c4*OI%;]ZBE6'/3W6Co+M*KYgQ6e29_<iU?".!4;ZFj!?tZb4UC8T?#EM-Q?1*>$mEkCJJqM:ePm9d_\Pp.D%c/3=`Nbhb].VGE72UipJbKdlH>\bhP^ui/5@dFpNk*"U,%4Q.^[s9&b9)>+F8YMq9?1gkne/+L^h@@TRfm(T8<HVcY_UmfuK3n!l%)07TJB_]0e<m^E'Gk&eHio!aID!EUlm=j\C@5r7F'Gj%la";o=jPh4L"1\D(I-M@k*^_JcFUs<)Ir7.sX>592QmqpN'F?l'pQSom%qW\025h\3!QD;&Xql$>EG71X*dHsQekK7]06`o+)amMkbF2d@G.Sekn;F=o[8+6#5"+_HDaW`nK`>\\<]05@[;=N<I3=UKIfb6qm%^?97^V^NY)b[U#&FB1l`]UA;8p(EHYLfZ<+JM'iWj)+on_TKC0m=J4X]In>W9s[:5.],JQ-f_$#l?R[UBO6I`X)(0c&HQ-TG;9t=%2^)TOZU??N^`]UqT(8%d>/o\+Q;',MCQNDTES&DXD23S'[ZOCIVV:B1GBC0.gQj,q;3CtZs/fSKDB.7Cr;uscD[6IH/AJ1@YZ(nK%&ATDk`+spt)N"M)![TkKhl"e>]1GjV,/cS?WiK7plAbP06.lOQA.s0B&aK=h;6mNb+V]`>M&BU$nq7::Shru:$]rf=bFGW87W@>T%:Ic<X%Q"#9<^!8_MnM7B_4/(7UoNT%02N8&Q2rsNCTK)@2_N6L/!#jp),2c1?.e9/?F=e6AXf:,h@ElZG_/7t&fq8,!'t/Z:XhfQ%bDRn-cH(%W1qMG..:").U7nkCE24cM]=?W4M\P^P/hUnJ[fX@a[E[$.LK;D#g0f9ii@S`kY<^ah(0JmW&O6j8SorEBEg`>Y0P]&8%dh$l35%*&g##cc[S+?)?$K/OP"JDPCP9)0WhaPTXeji,uoADBLiTmAD;`:509p$cmI`%&B4-?Umc0P4Jg;O,]/[jV0\ItXX=jTWA%+@I6>Qf1ID0HssWBM_u*CS(U/`$_S%N2s$28i.Icr3Ysin9B?%^'r+";lM-9r[P5OEgpVtI4i=jY><-L&%rsjiY^X6Z8Q1O/iX<X%78oQG[?SN@%1:o^M(!5*.@XM0DnP'Q<HrifX5GGki.h;D54Rep;1KE"nDfb%d^r4:A7ZthjVDQggoK*;E^)lalDH$uo%]R;!+f\#%;Th%+f6).O2fNsuGZL\n&TVUud0u#+9s-0*=tETeG#8o(T)0)@q>fSE>k>/pplknM-f[O8VQ"t\,>r/0;bGY!*jUkWlJ(lP5ol+N%k)jjMO2YAB,(6g!P9NIf=!EO3&O)DsWMf%SC)*cO:"s]ZZtfaj7IEXn-l=R06%(OY>nS]1MrT>iG9l3/Q)ZeF@ACi_FI^Ge77sRQ%k;+k2\@=6@C9SYSl$/ZO;':\@TX)eqSEIoe%=(kR(n-65eDQSgBpT%Ko?$4XHkBm$9)]oD6^^^.o&LMA;I3VN\9XU9oC>TIVX06Q%]V7$nEUCrKT'q!05Q3uMFI+*V.Na<_hboj>0I97bKl2&Jn(%j2WZh&RQcb,HRngf27n$5Smqc>I[!"0'>bV=^;!S$>b;mX4r415"%AApinKlmnojH@+8&UAf%(i9MUpQ:@RM('Z,]F9qu*8HY6.+U7[<mLurNMn&d(YL-p_Db!a!8R2p>GCHI(!`2&;9MuiF)u$tn&LDD%,'a;NrFg7#C&R*):WpGQ8>dFjoh4?\"Ps1XmA;a>e'[RTW2spB@5Nk%71*o&cC7Ik#3eUROM6L=DUlS>MQJ<hl\oDH@K]NLi"?$1%'[%ZAUb$=mPB($o-isfcHmPcepVq[1ZuT"<IT$b2WX7D<4q\_(/jl\6(Ju4n`;!rj_eR*M'L%kQFKuL`8aN<B1_%*rYg*cb_Oo%%%8k]W>?V5hpbW/Qes*>5A1*C=8)/FCQ*"l)b>I))Q^VXEaA<G\JAIP(P%2=V5BB&RI?a*WT7?,&bKjR_bo_tm(WgEVJeBq&:9;O%m%Y>N"W'kbK_r0'm)1&_>(dsa]-CU':1qN$;Tg\R/RROTHs,8S8ZA#oqJ>,C_\+'I6R3Kjo$i:4KNf+WKlHrWc-OCN$+X[Z9dZ@&Pb%9Is<ciV6S5N.l&SpT4Ka87J3mf8SRJK"<Z<6b/Gq+[85:.t[ef3<P2.g!!s7C)5;GCD0G]1`2m1*qEUfW^9c_bLeE?5#?q!4Ch^s%YZ:Ci%R?#f0&s+o1'i1Jb:1=k%7HHR)=?MT0F^=Ap!2'0`aC['j3T051Bc("H%ZWsq!*D![3j?]0gu:^J21jYG+@6?B'r0N3r(EU%Splg!UsUn<HJ$r/dLgdnR0!qT\+Ckild[=:E"IVI!QcmRr3oL-Q>b<\>]Xd8?k`$(PK9rJ*!Ts5BFL6ER7'!HA^'l'kuCjQFh2,k%;Him51rBJrp4D16p*#rM=oO#S`ulNlB6,N+$MHX+(=Q?+c^-j,4CW>2KK4)L-)fFZ+RD[ug,k`LB:2h=RuuUYne"Z(%52"dmR_>$%jF.?3+364A$)_LSF>sjN)^qXbm)-+3@'3Ym]"a,8TKb61,8l4\mtWqJ-?(u`(6N@8jlO>D-Bi(B4s`\9kEq=12==VT.@tod:BBAU%8ORl/&:26ZE6:-"l-!@2Vet*s(^JgTF!6MfZUQlpiBTZt<.JI7'l^GQ1.Qs!\BYD>D8B2E-EZpn*21Rb-7'j'l,P:lPS@U$-lrC;%aS!(<n(D4sPe^om<n]jTM3"SmM99(/]h6;.Lf@_O"M.d[)i#u!/0Z#V_rtd`VCAC@@%M2+-gHPT+Ore.[^Bq3"ol?YkR0$f;_<<h%/G4C)b('T?"9hTq9?&>QL6%NR20TO)Lg="485'\]]eGT@m*eBF*l:r2\OYI2er.;[W-Zf8&Oa'AV!g5q6t&j=_P%l/@!9;Y:`BY&%N/BM:Bh5j,`B0>66[N@8m8HtEqWS\(eR=?nR*f<C4?\b:HTFSrk^9,,)LYEK]gC%H)Q:jYP<ALfjp<j"S4]6>SG)(&W]'GK$np5W%2oY"KN<et<1`m1\5lFnK(GV$tR=HkIf-0rZaE-h&7=:N'5e&[Aeuu#M`3iCV;`YlaSprhMdG\C9Pc9Bc>BCe:>)Rfq%'[1j#<df@%obfM`dmFBW6#ZA!IZj6XO;'CXOZY0LGJ'mkGK@#s<5.Em3o]U&otKIFc?<o1MaLK+Y4l_\VbpWL-D8<i)Nh@&k7NUM`H$q6Vu2-<%.j,?8r5d*Ad:V*#o-#c$0K?Ec%VI@;p5<1#jEhC'[tTI]K>NY0H:.IC<9L&AT5Ptf=::]5Il)akJP?^Edqu*4AAkfma5-/:h`au9%h2cLB54AL?qFs_slhfFtpL!@Fm6:L?lJm>;HiJ!`";uc4E7%?l4s"0r@DQpAf!/=98K9!B22_:$l<f]W6RLQg=/);`!qEX\DBm-M%gn"G9[Q_?sE442i5VHU#U;B"V+i)%4*0<5N8HETn5[Bid;mM.UPW-gcQ3)afP3.$HQEt?J%6X3N!GT(J"f\I`a[hfCPEdFK.A\@e%^FC:96p>cs6E=!Q]O]GCU.!HfT@51i7>(33oUWA)`)7Lo1T.iA=W9o2du5FT(3!<\ZZGdD#oWXiZ.mJZFAnBE?e&CL7g4IFeD+l(%6S,7]h/^#mE=]ldfaQcY5(fdkHik_(JPJpD#d[J%S2%)lN9G5t2iq.QP"CHL("OaX#HUp'XkppqSB+RR6A14)luOE;j"5=;al&rB%T_s,`Hat/M66aqcZ#Z`krOHIuP"GhB;=%J;3=-^K'tFFf1Thp=M'U+R^WPE>G!acCWC>Tr8BDCg4`-KXaU^teqm=e<<QBn4,4IjQ%'ne=eQ:<B"G)cJN3gZ59[&Ojr5#2g,G\?>!j%*nY>U^bZC1#au[4aB%X#Z`$,r;3Ze[T9]2FZW4aB7!25UJN:/;PB,9$\iK(NXWS%0hmMiRloNeBl82IUlm99?6UHH.`90(P"^$GHQ]YI>ZeY9a)SC8<Nb$k(@3sGL_Plibhal/lHO,.:9d!O[(W8q1^-L@$,!(r?;llK%>80t?gJ6b/53W?\&TXs^WX@I5=G[?m00RdYJJn";8SiPlFZ^uFO<(SLQ%<Z#!Tk?dWh"TKe<8[KG.4f4aRO6B&plH5H7:)2JjCBt%HmKY?6VfRH*Wo!^R>Rs2JMZ%XakmTK;o^5B/-j(5Z`6.d*4/LITopoi5P>F51u,!iYG4`$[]ds=g%NK,cJ1<jY5=(C`dJgc_6UDU%lgogUkpE%q+Il@D*2>@?$_I(8hkRZ1$*.$9@&Fo%Tq\2iUeHm+]%SA)BZ(<,:R\?7e#$B>c,6g.k7Gqfl,_,oYIn(TnSpPiCU^/m%'k`4p-WHd!LR$\??&`p;oTOOgiK809hG`isOX*TBVsj>R>O$Dhh#G,2MK5Ug=.,LV)MXL#>:'MI=i4nmas,Qj(T"187&Zd',HE"r%j[JTXiH5Fu.oVtW==U`>ZLUL.`KV<69^?n53N%)37QciF_5%+F48PgpUlI^2lPX3-;[&k!jWC`iA4\4'3o'%'1C2G_i^J"ZeFH<n%;j4;:r5o3^_dZ>mPp]I0Pr#.4N1$ZPOHV<EB)ZVTb_-\t&ZIW#gL>.ERR%;P8<Yra/A9ZmCf0*Uan@R(cG:B+\q\5.Rt9"W/UEcK%9LqCEaKR4(:Q*YjQctZXA5>Aj\)^137s*o\1.k`==h(MM4'Duko!sK@cH(4QO)<%EM`lm:g-145%I$^;Y>KAbOq-m7%tOqQVhAD'%cTLEfe=;k@h6"02P8#Sng,OT4Kn#0Zl%BC'rR^/'cH]e3g"u^Mp[7V;5Pp3XIQ0DRs4c*$rSJ^"52>KHcJF&^qK9Qb]":=0C]Eqo%0>$rhqbNjQ+81K)ErRd\%[Y,[?ba5Qa8YIqS!u('5!N9mIeEDRpYCn&pCF_TmLD2.^#+=rmJjl7p+HpeqX28WqnoW"DuAn[roX4=%c0aIc*IcYUrPP9-o(M7%_p.n1ep.!cf6HH8q"L9VYPXg[i^9?1s7Fo-TD]Q>D]4N~>%AI9_PrivateDataEnd