Normalising: sumlige.sml
User: 0.568, System: 0.132, Total: 0.700
User: 4.940, System: 0.684, Total: 5.624
Normalizing
  [] = 0
  (x :: xs) = (if x mod 2 = 0 then
                 x div 2
               else
                 0) + sumlige xs
After elimination:
  (nil) = 0
  (x :: xs) = (if x mod 2 = 0 then
                 x div 2
               else
                 0) + sumlige xs
Generalising
  (nil) = 0
becomes
  x = 0
Now have
  x = 0

Generalising
  (x :: xs) = (if x mod 2 = 0 then
                 x div 2
               else
                 0) + sumlige xs
becomes
  (x :: xs) = (if x mod 2 = 0 then
                 x div 2
               else
                 0) + sumlige xs
Now have
  (x :: xs) = (if x mod 2 = 0 then
                 x div 2
               else
                 0) + sumlige xs
  x = 0

Before:
fun sumlige [] = 0
  | sumlige (x :: xs) = (if x mod 2 = 0 then
                           x div 2
                         else
                           0) + sumlige xs

After:
fun sumlige (x :: xs) = (if x mod 2 = 0 then
                           x div 2
                         else
                           0) + sumlige xs
  | sumlige x = 0
