Normalising: mapfil.sml
Parsing mlb/sml: 
  User: 0.552, System: 0.156, Total: 0.708
Resolving: 
  User: 4.964, System: 0.704, Total: 5.668
Normalizing
  (f, p, []) = []
  (f, p, (x :: xs)) = (if p x then
                         f x
                       else
                         x) :: mapfil (f, p, xs)
After elimination:
  (f, p, (nil)) = (nil)
  (f, p, (x :: xs)) = (if p x then
                         f x
                       else
                         x) :: mapfil (f, p, xs)
Generalising
  (f, p, (nil)) = (nil)
becomes
  x = (nil)
Now have
  x = (nil)

Generalising
  (f, p, (x :: xs)) = (if p x then
                         f x
                       else
                         x) :: mapfil (f, p, xs)
becomes
  (f, p, (x :: xs)) = (if p x then
                         f x
                       else
                         x) :: mapfil (f, p, xs)
Now have
  (f, p, (x :: xs)) = (if p x then
                         f x
                       else
                         x) :: mapfil (f, p, xs)
  x = (nil)

Before:
fun mapfil (f, p, []) = []
  | mapfil (f, p, (x :: xs)) = (if p x then
                                  f x
                                else
                                  x) :: mapfil (f, p, xs)

After:
fun mapfil (f, p, (x :: xs)) = (if p x then
                                  f x
                                else
                                  x) :: mapfil (f, p, xs)
  | mapfil x = (nil)
